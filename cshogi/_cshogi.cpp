/* Generated by Cython 0.29.22 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_29_22"
#define CYTHON_HEX_VERSION 0x001D16F0
#define CYTHON_FUTURE_DIVISION 0
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
  #ifndef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS (PY_VERSION_HEX >= 0x030600B1)
  #endif
  #ifndef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK (PY_VERSION_HEX >= 0x030700A3)
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
#if PY_VERSION_HEX >= 0x030800A4 && PY_VERSION_HEX < 0x030800B2
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030400A1
  #define PyMem_RawMalloc(n)           PyMem_Malloc(n)
  #define PyMem_RawRealloc(p, n)       PyMem_Realloc(p, n)
  #define PyMem_RawFree(p)             PyMem_Free(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
#else
#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #if defined(PyUnicode_IS_READY) && defined(PyUnicode_GET_SIZE)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
  #else
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #endif
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? ((void)(klass), PyMethod_New(func, self)) : __Pyx_NewRef(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__cshogi___cshogi
#define __PYX_HAVE_API__cshogi___cshogi
/* Early includes */
#include <string.h>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <string>
#include <vector>
#include <stdio.h>
#include "numpy/arrayobject.h"
#include "numpy/ndarrayobject.h"
#include "numpy/ndarraytypes.h"
#include "numpy/arrayscalars.h"
#include "numpy/ufuncobject.h"

    /* NumPy API declarations from "numpy/__init__.pxd" */
    
#include "init.hpp"
#include "position.hpp"
#include "cshogi.h"
#include "parser.h"
#include "dfpn.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

/* Header.proto */
#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "cshogi\\_cshogi.pyx",
  "stringsource",
  "__init__.pxd",
  "type.pxd",
};

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":690
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":691
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":692
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":693
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":697
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":698
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":699
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":700
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":704
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":705
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":714
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t
 */
typedef npy_long __pyx_t_5numpy_int_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":715
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */
typedef npy_longlong __pyx_t_5numpy_long_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":716
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":718
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t
 */
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":719
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */
typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":720
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":722
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":723
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":725
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */
typedef npy_double __pyx_t_5numpy_float_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":726
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */
typedef npy_double __pyx_t_5numpy_double_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":727
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;
/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif
static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif
static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);


/*--- Type declarations ---*/
struct __pyx_obj_6cshogi_7_cshogi_Board;
struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList;
struct __pyx_obj_6cshogi_7_cshogi_Parser;
struct __pyx_obj_6cshogi_7_cshogi_DfPn;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":729
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":730
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":731
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":733
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */
typedef npy_cdouble __pyx_t_5numpy_complex_t;

/* "cshogi/_cshogi.pyx":279
 * 	int __piece_to_piece_type(const int p)
 * 
 * cdef class Board:             # <<<<<<<<<<<<<<
 * 	cdef __Board __board
 * 
 */
struct __pyx_obj_6cshogi_7_cshogi_Board {
  PyObject_HEAD
  __Board __pyx___board;
};


/* "cshogi/_cshogi.pyx":605
 * 	int __dlshogi_make_move_label(const int move, const int color)
 * 
 * cdef class LegalMoveList:             # <<<<<<<<<<<<<<
 * 	cdef __LegalMoveList __ml
 * 
 */
struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList {
  PyObject_HEAD
  __LegalMoveList __pyx___ml;
};


/* "cshogi/_cshogi.pyx":693
 * 		void parse_csa_str(const string& csa_str) except +
 * 
 * cdef class Parser:             # <<<<<<<<<<<<<<
 * 	@staticmethod
 * 	def parse_file(file, encoding=None):
 */
struct __pyx_obj_6cshogi_7_cshogi_Parser {
  PyObject_HEAD
  parser::__Parser __pyx___parser;
};


/* "cshogi/_cshogi.pyx":793
 * 		unsigned int get_searched_node()
 * 
 * cdef class DfPn:             # <<<<<<<<<<<<<<
 * 	cdef __DfPn __dfpn
 * 
 */
struct __pyx_obj_6cshogi_7_cshogi_DfPn {
  PyObject_HEAD
  __DfPn __pyx___dfpn;
};


/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* ArgTypeTest.proto */
#define __Pyx_ArgTypeTest(obj, type, none_allowed, name, exact)\
    ((likely((Py_TYPE(obj) == type) | (none_allowed && (obj == Py_None)))) ? 1 :\
        __Pyx__ArgTypeTest(obj, type, name, exact))
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact);

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* UnpackUnboundCMethod.proto */
typedef struct {
    PyObject *type;
    PyObject **method_name;
    PyCFunction func;
    PyObject *method;
    int flag;
} __Pyx_CachedCFunction;

/* CallUnboundCMethod1.proto */
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#else
#define __Pyx_CallUnboundCMethod1(cfunc, self, arg)  __Pyx__CallUnboundCMethod1(cfunc, self, arg)
#endif

/* IncludeCppStringH.proto */
#include <string>

/* decode_c_string_utf16.proto */
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_DecodeUTF16(const char *s, Py_ssize_t size, const char *errors) {
    int byteorder = 0;
    return PyUnicode_DecodeUTF16(s, size, errors, &byteorder);
}
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_DecodeUTF16LE(const char *s, Py_ssize_t size, const char *errors) {
    int byteorder = -1;
    return PyUnicode_DecodeUTF16(s, size, errors, &byteorder);
}
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_DecodeUTF16BE(const char *s, Py_ssize_t size, const char *errors) {
    int byteorder = 1;
    return PyUnicode_DecodeUTF16(s, size, errors, &byteorder);
}

/* decode_c_bytes.proto */
static CYTHON_INLINE PyObject* __Pyx_decode_c_bytes(
         const char* cstring, Py_ssize_t length, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors));

/* decode_cpp_string.proto */
static CYTHON_INLINE PyObject* __Pyx_decode_cpp_string(
         std::string cppstring, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors)) {
    return __Pyx_decode_c_bytes(
        cppstring.data(), cppstring.size(), start, stop, encoding, errors, decode_func);
}

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#else
#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* PyCFunctionFastCall.proto */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);
#else
#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* None.proto */
static CYTHON_INLINE long __Pyx_mod_long(long, long);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
#define __Pyx_GetModuleGlobalNameUncached(var, name)  {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ListAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

/* PyObjectCall2Args.proto */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* PyObjectGetMethod.proto */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);

/* PyObjectCallMethod1.proto */
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);

/* append.proto */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x);

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* IterFinish.proto */
static CYTHON_INLINE int __Pyx_IterFinish(void);

/* UnpackItemEndCheck.proto */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

/* PyFloatBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_AddCObj(PyObject *op1, PyObject *op2, double floatval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyFloat_AddCObj(op1, op2, floatval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractCObj(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_SubtractCObj(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceSubtract(op1, op2) : PyNumber_Subtract(op1, op2))
#endif

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* ObjectGetItem.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key);
#else
#define __Pyx_PyObject_GetItem(obj, key)  PyObject_GetItem(obj, key)
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_RemainderObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_RemainderObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceRemainder(op1, op2) : PyNumber_Remainder(op1, op2))
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* PyObjectSetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o, n, NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value);
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* PyObjectLookupSpecial.proto */
#if CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_LookupSpecial(PyObject* obj, PyObject* attr_name) {
    PyObject *res;
    PyTypeObject *tp = Py_TYPE(obj);
#if PY_MAJOR_VERSION < 3
    if (unlikely(PyInstance_Check(obj)))
        return __Pyx_PyObject_GetAttrStr(obj, attr_name);
#endif
    res = _PyType_Lookup(tp, attr_name);
    if (likely(res)) {
        descrgetfunc f = Py_TYPE(res)->tp_descr_get;
        if (!f) {
            Py_INCREF(res);
        } else {
            res = f(res, obj, (PyObject *)tp);
        }
    } else {
        PyErr_SetObject(PyExc_AttributeError, attr_name);
    }
    return res;
}
#else
#define __Pyx_PyObject_LookupSpecial(o,n) __Pyx_PyObject_GetAttrStr(o,n)
#endif

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* KeywordStringCheck.proto */
static int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);

/* SliceObject.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(
        PyObject* obj, Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** py_start, PyObject** py_stop, PyObject** py_slice,
        int has_cstart, int has_cstop, int wraparound);

/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* PyObject_GenericGetAttrNoDict.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttrNoDict PyObject_GenericGetAttr
#endif

/* PyObject_GenericGetAttr.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttr PyObject_GenericGetAttr
#endif

/* PyObjectGetAttrStrNoError.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name);

/* SetupReduce.proto */
static int __Pyx_setup_reduce(PyObject* type_obj);

/* TypeImport.proto */
#ifndef __PYX_HAVE_RT_ImportType_proto
#define __PYX_HAVE_RT_ImportType_proto
enum __Pyx_ImportType_CheckSize {
   __Pyx_ImportType_CheckSize_Error = 0,
   __Pyx_ImportType_CheckSize_Warn = 1,
   __Pyx_ImportType_CheckSize_Ignore = 2
};
static PyTypeObject *__Pyx_ImportType(PyObject* module, const char *module_name, const char *class_name, size_t size, enum __Pyx_ImportType_CheckSize check_size);
#endif

/* CalculateMetaclass.proto */
static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases);

/* FetchCommonType.proto */
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);

/* CythonFunctionShared.proto */
#define __Pyx_CyFunction_USED 1
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CyFunction_GetClosure(f)\
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#define __Pyx_CyFunction_GetClassObj(f)\
    (((__pyx_CyFunctionObject *) (f))->func_classobj)
#define __Pyx_CyFunction_Defaults(type, f)\
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
    PyCFunctionObject func;
#if PY_VERSION_HEX < 0x030500A0
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
    PyObject *func_classobj;
    void *defaults;
    int defaults_pyobjects;
    size_t defaults_size;  // used by FusedFunction for copying defaults
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
} __pyx_CyFunctionObject;
static PyTypeObject *__pyx_CyFunctionType = 0;
#define __Pyx_CyFunction_Check(obj)  (__Pyx_TypeCheck(obj, __pyx_CyFunctionType))
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject* op, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *self,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __pyx_CyFunction_init(void);

/* CythonFunction.proto */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);

/* SetNameInClass.proto */
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
#define __Pyx_SetNameInClass(ns, name, value)\
    (likely(PyDict_CheckExact(ns)) ? _PyDict_SetItem_KnownHash(ns, name, value, ((PyASCIIObject *) name)->hash) : PyObject_SetItem(ns, name, value))
#elif CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_SetNameInClass(ns, name, value)\
    (likely(PyDict_CheckExact(ns)) ? PyDict_SetItem(ns, name, value) : PyObject_SetItem(ns, name, value))
#else
#define __Pyx_SetNameInClass(ns, name, value)  PyObject_SetItem(ns, name, value)
#endif

/* Py3ClassCreate.proto */
static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name, PyObject *qualname,
                                           PyObject *mkw, PyObject *modname, PyObject *doc);
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases, PyObject *dict,
                                      PyObject *mkw, int calculate_metaclass, int allow_py2_metaclass);

/* GetNameInClass.proto */
#define __Pyx_GetNameInClass(var, nmspace, name)  (var) = __Pyx__GetNameInClass(nmspace, name)
static PyObject *__Pyx__GetNameInClass(PyObject *nmspace, PyObject *name);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* None.proto */
#include <new>

/* GCCDiagnostics.proto */
#if defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* CppExceptionConversion.proto */
#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::bad_typeid& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

/* RealImag.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if defined(__cplusplus) && CYTHON_CCOMPLEX\
        && (defined(_WIN32) || defined(__clang__) || (defined(__GNUC__) && (__GNUC__ >= 5 || __GNUC__ == 4 && __GNUC_MINOR__ >= 4 )) || __cplusplus >= 201103)
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_float(a, b)   ((a)==(b))
    #define __Pyx_c_sum_float(a, b)  ((a)+(b))
    #define __Pyx_c_diff_float(a, b) ((a)-(b))
    #define __Pyx_c_prod_float(a, b) ((a)*(b))
    #define __Pyx_c_quot_float(a, b) ((a)/(b))
    #define __Pyx_c_neg_float(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_float(z) ((z)==(float)0)
    #define __Pyx_c_conj_float(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (::std::abs(z))
        #define __Pyx_c_pow_float(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_float(z) ((z)==0)
    #define __Pyx_c_conj_float(z)    (conjf(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (cabsf(z))
        #define __Pyx_c_pow_float(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_double(a, b)   ((a)==(b))
    #define __Pyx_c_sum_double(a, b)  ((a)+(b))
    #define __Pyx_c_diff_double(a, b) ((a)-(b))
    #define __Pyx_c_prod_double(a, b) ((a)*(b))
    #define __Pyx_c_quot_double(a, b) ((a)/(b))
    #define __Pyx_c_neg_double(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_double(z) ((z)==(double)0)
    #define __Pyx_c_conj_double(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (::std::abs(z))
        #define __Pyx_c_pow_double(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_double(z) ((z)==0)
    #define __Pyx_c_conj_double(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (cabs(z))
        #define __Pyx_c_pow_double(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE unsigned short __Pyx_PyInt_As_unsigned_short(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_PY_LONG_LONG(unsigned PY_LONG_LONG value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_short(unsigned short value);

/* CIntFromPy.proto */
static CYTHON_INLINE unsigned int __Pyx_PyInt_As_unsigned_int(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_int(unsigned int value);

/* CIntFromPy.proto */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);


/* Module declarations from 'libc.string' */

/* Module declarations from 'libcpp.string' */

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'libcpp' */

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'cpython' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'cpython.mem' */

/* Module declarations from 'numpy' */

/* Module declarations from 'numpy' */
static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_generic = 0;
static PyTypeObject *__pyx_ptype_5numpy_number = 0;
static PyTypeObject *__pyx_ptype_5numpy_integer = 0;
static PyTypeObject *__pyx_ptype_5numpy_signedinteger = 0;
static PyTypeObject *__pyx_ptype_5numpy_unsignedinteger = 0;
static PyTypeObject *__pyx_ptype_5numpy_inexact = 0;
static PyTypeObject *__pyx_ptype_5numpy_floating = 0;
static PyTypeObject *__pyx_ptype_5numpy_complexfloating = 0;
static PyTypeObject *__pyx_ptype_5numpy_flexible = 0;
static PyTypeObject *__pyx_ptype_5numpy_character = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;

/* Module declarations from 'cshogi._cshogi' */
static PyTypeObject *__pyx_ptype_6cshogi_7_cshogi_Board = 0;
static PyTypeObject *__pyx_ptype_6cshogi_7_cshogi_LegalMoveList = 0;
static PyTypeObject *__pyx_ptype_6cshogi_7_cshogi_Parser = 0;
static PyTypeObject *__pyx_ptype_6cshogi_7_cshogi_DfPn = 0;
static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyStr_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__in_string(std::string const &); /*proto*/
static std::string __pyx_convert_string_from_py_std__in_string(PyObject *); /*proto*/
static PyObject *__pyx_convert_vector_to_py_int(const std::vector<int>  &); /*proto*/
static PyObject *__pyx_convert_vector_to_py_float(const std::vector<float>  &); /*proto*/
static PyObject *__pyx_convert_vector_to_py_unsigned_int(const std::vector<unsigned int>  &); /*proto*/
#define __Pyx_MODULE_NAME "cshogi._cshogi"
extern int __pyx_module_is_main_cshogi___cshogi;
int __pyx_module_is_main_cshogi___cshogi = 0;

/* Implementation of 'cshogi._cshogi' */
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_staticmethod;
static PyObject *__pyx_builtin_zip;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_StopIteration;
static PyObject *__pyx_builtin_open;
static PyObject *__pyx_builtin_ImportError;
static const char __pyx_k_[] = "*";
static const char __pyx_k_b[] = "b";
static const char __pyx_k_f[] = "f";
static const char __pyx_k_g[] = "g";
static const char __pyx_k_k[] = "k";
static const char __pyx_k_l[] = "l";
static const char __pyx_k_n[] = "n";
static const char __pyx_k_p[] = "p";
static const char __pyx_k_r[] = "r";
static const char __pyx_k_s[] = "s";
static const char __pyx_k_x[] = "x";
static const char __pyx_k_y[] = "y";
static const char __pyx_k_1a[] = "1a";
static const char __pyx_k_1b[] = "1b";
static const char __pyx_k_1c[] = "1c";
static const char __pyx_k_1d[] = "1d";
static const char __pyx_k_1e[] = "1e";
static const char __pyx_k_1f[] = "1f";
static const char __pyx_k_1g[] = "1g";
static const char __pyx_k_1h[] = "1h";
static const char __pyx_k_1i[] = "1i";
static const char __pyx_k_2a[] = "2a";
static const char __pyx_k_2b[] = "2b";
static const char __pyx_k_2c[] = "2c";
static const char __pyx_k_2d[] = "2d";
static const char __pyx_k_2e[] = "2e";
static const char __pyx_k_2f[] = "2f";
static const char __pyx_k_2g[] = "2g";
static const char __pyx_k_2h[] = "2h";
static const char __pyx_k_2i[] = "2i";
static const char __pyx_k_3a[] = "3a";
static const char __pyx_k_3b[] = "3b";
static const char __pyx_k_3c[] = "3c";
static const char __pyx_k_3d[] = "3d";
static const char __pyx_k_3e[] = "3e";
static const char __pyx_k_3f[] = "3f";
static const char __pyx_k_3g[] = "3g";
static const char __pyx_k_3h[] = "3h";
static const char __pyx_k_3i[] = "3i";
static const char __pyx_k_4a[] = "4a";
static const char __pyx_k_4b[] = "4b";
static const char __pyx_k_4c[] = "4c";
static const char __pyx_k_4d[] = "4d";
static const char __pyx_k_4e[] = "4e";
static const char __pyx_k_4f[] = "4f";
static const char __pyx_k_4g[] = "4g";
static const char __pyx_k_4h[] = "4h";
static const char __pyx_k_4i[] = "4i";
static const char __pyx_k_5a[] = "5a";
static const char __pyx_k_5b[] = "5b";
static const char __pyx_k_5c[] = "5c";
static const char __pyx_k_5d[] = "5d";
static const char __pyx_k_5e[] = "5e";
static const char __pyx_k_5f[] = "5f";
static const char __pyx_k_5g[] = "5g";
static const char __pyx_k_5h[] = "5h";
static const char __pyx_k_5i[] = "5i";
static const char __pyx_k_6a[] = "6a";
static const char __pyx_k_6b[] = "6b";
static const char __pyx_k_6c[] = "6c";
static const char __pyx_k_6d[] = "6d";
static const char __pyx_k_6e[] = "6e";
static const char __pyx_k_6f[] = "6f";
static const char __pyx_k_6g[] = "6g";
static const char __pyx_k_6h[] = "6h";
static const char __pyx_k_6i[] = "6i";
static const char __pyx_k_7a[] = "7a";
static const char __pyx_k_7b[] = "7b";
static const char __pyx_k_7c[] = "7c";
static const char __pyx_k_7d[] = "7d";
static const char __pyx_k_7e[] = "7e";
static const char __pyx_k_7f[] = "7f";
static const char __pyx_k_7g[] = "7g";
static const char __pyx_k_7h[] = "7h";
static const char __pyx_k_7i[] = "7i";
static const char __pyx_k_8a[] = "8a";
static const char __pyx_k_8b[] = "8b";
static const char __pyx_k_8c[] = "8c";
static const char __pyx_k_8d[] = "8d";
static const char __pyx_k_8e[] = "8e";
static const char __pyx_k_8f[] = "8f";
static const char __pyx_k_8g[] = "8g";
static const char __pyx_k_8h[] = "8h";
static const char __pyx_k_8i[] = "8i";
static const char __pyx_k_9a[] = "9a";
static const char __pyx_k_9b[] = "9b";
static const char __pyx_k_9c[] = "9c";
static const char __pyx_k_9d[] = "9d";
static const char __pyx_k_9e[] = "9e";
static const char __pyx_k_9f[] = "9f";
static const char __pyx_k_9g[] = "9g";
static const char __pyx_k_9h[] = "9h";
static const char __pyx_k_9i[] = "9i";
static const char __pyx_k_A1[] = "A1";
static const char __pyx_k_A2[] = "A2";
static const char __pyx_k_A3[] = "A3";
static const char __pyx_k_A4[] = "A4";
static const char __pyx_k_A5[] = "A5";
static const char __pyx_k_A6[] = "A6";
static const char __pyx_k_A7[] = "A7";
static const char __pyx_k_A8[] = "A8";
static const char __pyx_k_A9[] = "A9";
static const char __pyx_k_B1[] = "B1";
static const char __pyx_k_B2[] = "B2";
static const char __pyx_k_B3[] = "B3";
static const char __pyx_k_B4[] = "B4";
static const char __pyx_k_B5[] = "B5";
static const char __pyx_k_B6[] = "B6";
static const char __pyx_k_B7[] = "B7";
static const char __pyx_k_B8[] = "B8";
static const char __pyx_k_B9[] = "B9";
static const char __pyx_k_C1[] = "C1";
static const char __pyx_k_C2[] = "C2";
static const char __pyx_k_C3[] = "C3";
static const char __pyx_k_C4[] = "C4";
static const char __pyx_k_C5[] = "C5";
static const char __pyx_k_C6[] = "C6";
static const char __pyx_k_C7[] = "C7";
static const char __pyx_k_C8[] = "C8";
static const char __pyx_k_C9[] = "C9";
static const char __pyx_k_D1[] = "D1";
static const char __pyx_k_D2[] = "D2";
static const char __pyx_k_D3[] = "D3";
static const char __pyx_k_D4[] = "D4";
static const char __pyx_k_D5[] = "D5";
static const char __pyx_k_D6[] = "D6";
static const char __pyx_k_D7[] = "D7";
static const char __pyx_k_D8[] = "D8";
static const char __pyx_k_D9[] = "D9";
static const char __pyx_k_E1[] = "E1";
static const char __pyx_k_E2[] = "E2";
static const char __pyx_k_E3[] = "E3";
static const char __pyx_k_E4[] = "E4";
static const char __pyx_k_E5[] = "E5";
static const char __pyx_k_E6[] = "E6";
static const char __pyx_k_E7[] = "E7";
static const char __pyx_k_E8[] = "E8";
static const char __pyx_k_E9[] = "E9";
static const char __pyx_k_F1[] = "F1";
static const char __pyx_k_F2[] = "F2";
static const char __pyx_k_F3[] = "F3";
static const char __pyx_k_F4[] = "F4";
static const char __pyx_k_F5[] = "F5";
static const char __pyx_k_F6[] = "F6";
static const char __pyx_k_F7[] = "F7";
static const char __pyx_k_F8[] = "F8";
static const char __pyx_k_F9[] = "F9";
static const char __pyx_k_G1[] = "G1";
static const char __pyx_k_G2[] = "G2";
static const char __pyx_k_G3[] = "G3";
static const char __pyx_k_G4[] = "G4";
static const char __pyx_k_G5[] = "G5";
static const char __pyx_k_G6[] = "G6";
static const char __pyx_k_G7[] = "G7";
static const char __pyx_k_G8[] = "G8";
static const char __pyx_k_G9[] = "G9";
static const char __pyx_k_H1[] = "H1";
static const char __pyx_k_H2[] = "H2";
static const char __pyx_k_H3[] = "H3";
static const char __pyx_k_H4[] = "H4";
static const char __pyx_k_H5[] = "H5";
static const char __pyx_k_H6[] = "H6";
static const char __pyx_k_H7[] = "H7";
static const char __pyx_k_H8[] = "H8";
static const char __pyx_k_H9[] = "H9";
static const char __pyx_k_I1[] = "I1";
static const char __pyx_k_I2[] = "I2";
static const char __pyx_k_I3[] = "I3";
static const char __pyx_k_I4[] = "I4";
static const char __pyx_k_I5[] = "I5";
static const char __pyx_k_I6[] = "I6";
static const char __pyx_k_I7[] = "I7";
static const char __pyx_k_I8[] = "I8";
static const char __pyx_k_I9[] = "I9";
static const char __pyx_k__3[] = "#{}";
static const char __pyx_k__4[] = "\346\211\213";
static const char __pyx_k__5[] = "\345\205\210";
static const char __pyx_k__6[] = "\345\276\214";
static const char __pyx_k__7[] = "\342\230\227";
static const char __pyx_k__8[] = "\342\230\226";
static const char __pyx_k_np[] = "np";
static const char __pyx_k_0_0[] = "0 0 {} {}";
static const char __pyx_k_1_1[] = "1.1";
static const char __pyx_k__15[] = "\n/\n";
static const char __pyx_k__16[] = ":";
static const char __pyx_k__31[] = "\357\274\221";
static const char __pyx_k__32[] = "\357\274\222";
static const char __pyx_k__33[] = "\357\274\223";
static const char __pyx_k__34[] = "\357\274\224";
static const char __pyx_k__35[] = "\357\274\225";
static const char __pyx_k__36[] = "\357\274\226";
static const char __pyx_k__37[] = "\357\274\227";
static const char __pyx_k__38[] = "\357\274\230";
static const char __pyx_k__39[] = "\357\274\231";
static const char __pyx_k__40[] = "\344\270\200";
static const char __pyx_k__41[] = "\344\272\214";
static const char __pyx_k__42[] = "\344\270\211";
static const char __pyx_k__43[] = "\345\233\233";
static const char __pyx_k__44[] = "\344\272\224";
static const char __pyx_k__45[] = "\345\205\255";
static const char __pyx_k__46[] = "\344\270\203";
static const char __pyx_k__47[] = "\345\205\253";
static const char __pyx_k__48[] = "\344\271\235";
static const char __pyx_k__49[] = "\345\215\201";
static const char __pyx_k__50[] = "";
static const char __pyx_k__51[] = "\346\255\251";
static const char __pyx_k__52[] = "\351\246\231";
static const char __pyx_k__53[] = "\346\241\202";
static const char __pyx_k__54[] = "\351\212\200";
static const char __pyx_k__55[] = "\350\247\222";
static const char __pyx_k__56[] = "\351\243\233";
static const char __pyx_k__57[] = "\351\207\221";
static const char __pyx_k__58[] = "\347\216\211";
static const char __pyx_k__59[] = "\343\201\250";
static const char __pyx_k__60[] = "\346\235\217";
static const char __pyx_k__61[] = "\345\234\255";
static const char __pyx_k__62[] = "\345\205\250";
static const char __pyx_k__63[] = "\351\246\254";
static const char __pyx_k__64[] = "\351\276\215";
static const char __pyx_k_b_2[] = "+b";
static const char __pyx_k_csa[] = "csa";
static const char __pyx_k_doc[] = "__doc__";
static const char __pyx_k_hcp[] = "hcp";
static const char __pyx_k_key[] = "key";
static const char __pyx_k_l_2[] = "+l";
static const char __pyx_k_n_2[] = "+n";
static const char __pyx_k_p_2[] = "+p";
static const char __pyx_k_ply[] = "ply";
static const char __pyx_k_r_2[] = "+r";
static const char __pyx_k_s_2[] = "+s";
static const char __pyx_k_set[] = "set";
static const char __pyx_k_svg[] = "svg";
static const char __pyx_k_use[] = "use";
static const char __pyx_k_zip[] = "zip";
static const char __pyx_k_DRAW[] = "DRAW";
static const char __pyx_k_DfPn[] = "DfPn";
static const char __pyx_k_GOLD[] = "GOLD";
static const char __pyx_k_KING[] = "KING";
static const char __pyx_k_NONE[] = "NONE";
static const char __pyx_k_PAWN[] = "PAWN";
static const char __pyx_k_ROOK[] = "ROOK";
static const char __pyx_k_defs[] = "defs";
static const char __pyx_k_eval[] = "eval";
static const char __pyx_k_exit[] = "__exit__";
static const char __pyx_k_file[] = "file";
static const char __pyx_k_fill[] = "fill";
static const char __pyx_k_int8[] = "int8";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_move[] = "move";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_open[] = "open";
static const char __pyx_k_read[] = "read";
static const char __pyx_k_rect[] = "rect";
static const char __pyx_k_self[] = "self";
static const char __pyx_k_sfen[] = "sfen";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_text[] = "text";
static const char __pyx_k_BGOLD[] = "BGOLD";
static const char __pyx_k_BKING[] = "BKING";
static const char __pyx_k_BLACK[] = "BLACK";
static const char __pyx_k_BPAWN[] = "BPAWN";
static const char __pyx_k_BROOK[] = "BROOK";
static const char __pyx_k_Board[] = "Board";
static const char __pyx_k_HGOLD[] = "HGOLD";
static const char __pyx_k_HPAWN[] = "HPAWN";
static const char __pyx_k_HROOK[] = "HROOK";
static const char __pyx_k_LANCE[] = "LANCE";
static const char __pyx_k_WGOLD[] = "WGOLD";
static const char __pyx_k_WHITE[] = "WHITE";
static const char __pyx_k_WKING[] = "WKING";
static const char __pyx_k_WPAWN[] = "WPAWN";
static const char __pyx_k_WROOK[] = "WROOK";
static const char __pyx_k_ascii[] = "ascii";
static const char __pyx_k_board[] = "board";
static const char __pyx_k_color[] = "color";
static const char __pyx_k_count[] = "count";
static const char __pyx_k_csa_b[] = "csa_b";
static const char __pyx_k_depth[] = "depth";
static const char __pyx_k_dummy[] = "dummy";
static const char __pyx_k_enter[] = "__enter__";
static const char __pyx_k_int16[] = "int16";
static const char __pyx_k_int32[] = "int32";
static const char __pyx_k_nodes[] = "nodes";
static const char __pyx_k_numpy[] = "numpy";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_scale[] = "scale";
static const char __pyx_k_score[] = "score";
static const char __pyx_k_serif[] = "serif";
static const char __pyx_k_split[] = "split";
static const char __pyx_k_uint8[] = "uint8";
static const char __pyx_k_utf_8[] = "utf-8";
static const char __pyx_k_width[] = "width";
static const char __pyx_k_xmlns[] = "xmlns";
static const char __pyx_k_BISHOP[] = "BISHOP";
static const char __pyx_k_BLANCE[] = "BLANCE";
static const char __pyx_k_COLORS[] = "COLORS";
static const char __pyx_k_HLANCE[] = "HLANCE";
static const char __pyx_k_KNIGHT[] = "KNIGHT";
static const char __pyx_k_NOTUSE[] = "NOTUSE";
static const char __pyx_k_PIECES[] = "PIECES";
static const char __pyx_k_Parser[] = "Parser";
static const char __pyx_k_SILVER[] = "SILVER";
static const char __pyx_k_WLANCE[] = "WLANCE";
static const char __pyx_k_append[] = "append";
static const char __pyx_k_decode[] = "decode";
static const char __pyx_k_encode[] = "encode";
static const char __pyx_k_f6b94d[] = "#f6b94d";
static const char __pyx_k_fdf0e3[] = "#fdf0e3";
static const char __pyx_k_format[] = "format";
static const char __pyx_k_height[] = "height";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_locale[] = "locale";
static const char __pyx_k_module[] = "__module__";
static const char __pyx_k_move16[] = "move16";
static const char __pyx_k_parser[] = "parser";
static const char __pyx_k_reduce[] = "__reduce__";
static const char __pyx_k_to_csa[] = "to_csa";
static const char __pyx_k_to_svg[] = "to_svg";
static const char __pyx_k_to_usi[] = "to_usi";
static const char __pyx_k_uint16[] = "uint16";
static const char __pyx_k_uint64[] = "uint64";
static const char __pyx_k_BBISHOP[] = "BBISHOP";
static const char __pyx_k_BKNIGHT[] = "BKNIGHT";
static const char __pyx_k_BSILVER[] = "BSILVER";
static const char __pyx_k_Element[] = "Element";
static const char __pyx_k_HBISHOP[] = "HBISHOP";
static const char __pyx_k_HKNIGHT[] = "HKNIGHT";
static const char __pyx_k_HSILVER[] = "HSILVER";
static const char __pyx_k_SQUARES[] = "SQUARES";
static const char __pyx_k_WBISHOP[] = "WBISHOP";
static const char __pyx_k_WKNIGHT[] = "WKNIGHT";
static const char __pyx_k_WSILVER[] = "WSILVER";
static const char __pyx_k_csa_str[] = "csa_str";
static const char __pyx_k_gamePly[] = "gamePly";
static const char __pyx_k_matches[] = "matches";
static const char __pyx_k_move_to[] = "move_to";
static const char __pyx_k_padding[] = "padding";
static const char __pyx_k_parsers[] = "parsers";
static const char __pyx_k_prepare[] = "__prepare__";
static const char __pyx_k_version[] = "version";
static const char __pyx_k_viewBox[] = "viewBox";
static const char __pyx_k_draw_ply[] = "draw_ply";
static const char __pyx_k_dtypeHcp[] = "dtypeHcp";
static const char __pyx_k_dtypeKey[] = "dtypeKey";
static const char __pyx_k_encoding[] = "encoding";
static const char __pyx_k_getstate[] = "__getstate__";
static const char __pyx_k_is_check[] = "is_check";
static const char __pyx_k_lastmove[] = "lastmove";
static const char __pyx_k_move_cap[] = "move_cap";
static const char __pyx_k_opponent[] = "opponent";
static const char __pyx_k_qualname[] = "__qualname__";
static const char __pyx_k_repr_svg[] = "_repr_svg_";
static const char __pyx_k_setstate[] = "__setstate__";
static const char __pyx_k_tostring[] = "tostring";
static const char __pyx_k_BLACK_WIN[] = "BLACK_WIN";
static const char __pyx_k_BookEntry[] = "BookEntry";
static const char __pyx_k_MOVE_NONE[] = "MOVE_NONE";
static const char __pyx_k_PROM_PAWN[] = "PROM_PAWN";
static const char __pyx_k_PROM_ROOK[] = "PROM_ROOK";
static const char __pyx_k_TypeError[] = "TypeError";
static const char __pyx_k_WHITE_WIN[] = "WHITE_WIN";
static const char __pyx_k_dtypeEval[] = "dtypeEval";
static const char __pyx_k_features1[] = "features1";
static const char __pyx_k_features2[] = "features2";
static const char __pyx_k_font_size[] = "font-size";
static const char __pyx_k_fromToPro[] = "fromToPro";
static const char __pyx_k_metaclass[] = "__metaclass__";
static const char __pyx_k_move_from[] = "move_from";
static const char __pyx_k_parse_str[] = "parse_str";
static const char __pyx_k_promotion[] = "promotion";
static const char __pyx_k_reduce_ex[] = "__reduce_ex__";
static const char __pyx_k_to_square[] = "to_square";
static const char __pyx_k_transform[] = "transform";
static const char __pyx_k_BPROM_PAWN[] = "BPROM_PAWN";
static const char __pyx_k_BPROM_ROOK[] = "BPROM_ROOK";
static const char __pyx_k_PROM_LANCE[] = "PROM_LANCE";
static const char __pyx_k_PackedSfen[] = "PackedSfen";
static const char __pyx_k_SubElement[] = "SubElement";
static const char __pyx_k_SvgWrapper[] = "SvgWrapper";
static const char __pyx_k_WPROM_PAWN[] = "WPROM_PAWN";
static const char __pyx_k_WPROM_ROOK[] = "WPROM_ROOK";
static const char __pyx_k_bestMove16[] = "bestMove16";
static const char __pyx_k_black_gold[] = "black-gold";
static const char __pyx_k_black_king[] = "black-king";
static const char __pyx_k_black_pawn[] = "black-pawn";
static const char __pyx_k_black_rook[] = "black-rook";
static const char __pyx_k_fromstring[] = "fromstring";
static const char __pyx_k_gameResult[] = "gameResult";
static const char __pyx_k_parse_file[] = "parse_file";
static const char __pyx_k_rotate_180[] = "rotate(180)";
static const char __pyx_k_white_gold[] = "white-gold";
static const char __pyx_k_white_king[] = "white-king";
static const char __pyx_k_white_pawn[] = "white-pawn";
static const char __pyx_k_white_rook[] = "white-rook";
static const char __pyx_k_xlink_href[] = "xlink:href";
static const char __pyx_k_BPROM_LANCE[] = "BPROM_LANCE";
static const char __pyx_k_HAND_PIECES[] = "HAND_PIECES";
static const char __pyx_k_ImportError[] = "ImportError";
static const char __pyx_k_PIECE_TYPES[] = "PIECE_TYPES";
static const char __pyx_k_PROM_BISHOP[] = "PROM_BISHOP";
static const char __pyx_k_PROM_KNIGHT[] = "PROM_KNIGHT";
static const char __pyx_k_PROM_SILVER[] = "PROM_SILVER";
static const char __pyx_k_SVG_SQUARES[] = "SVG_SQUARES";
static const char __pyx_k_WPROM_LANCE[] = "WPROM_LANCE";
static const char __pyx_k_black_horse[] = "black-horse";
static const char __pyx_k_black_lance[] = "black-lance";
static const char __pyx_k_dtypeMove16[] = "dtypeMove16";
static const char __pyx_k_font_family[] = "font-family";
static const char __pyx_k_from_square[] = "from_square";
static const char __pyx_k_game_result[] = "game_result";
static const char __pyx_k_move_rotate[] = "move_rotate";
static const char __pyx_k_move_to_csa[] = "move_to_csa";
static const char __pyx_k_move_to_usi[] = "move_to_usi";
static const char __pyx_k_one_csa_str[] = "one_csa_str";
static const char __pyx_k_white_horse[] = "white-horse";
static const char __pyx_k_white_lance[] = "white-lance";
static const char __pyx_k_xmlns_xlink[] = "xmlns:xlink";
static const char __pyx_k_BPROM_BISHOP[] = "BPROM_BISHOP";
static const char __pyx_k_BPROM_KNIGHT[] = "BPROM_KNIGHT";
static const char __pyx_k_BPROM_SILVER[] = "BPROM_SILVER";
static const char __pyx_k_GAME_RESULTS[] = "GAME_RESULTS";
static const char __pyx_k_SQUARE_NAMES[] = "SQUARE_NAMES";
static const char __pyx_k_WPROM_BISHOP[] = "WPROM_BISHOP";
static const char __pyx_k_WPROM_KNIGHT[] = "WPROM_KNIGHT";
static const char __pyx_k_WPROM_SILVER[] = "WPROM_SILVER";
static const char __pyx_k_black_bishop[] = "black-bishop";
static const char __pyx_k_black_dragon[] = "black-dragon";
static const char __pyx_k_black_knight[] = "black-knight";
static const char __pyx_k_black_silver[] = "black-silver";
static const char __pyx_k_move_is_drop[] = "move_is_drop";
static const char __pyx_k_staticmethod[] = "staticmethod";
static const char __pyx_k_white_bishop[] = "white-bishop";
static const char __pyx_k_white_dragon[] = "white-dragon";
static const char __pyx_k_white_knight[] = "white-knight";
static const char __pyx_k_white_silver[] = "white-silver";
static const char __pyx_k_LegalMoveList[] = "LegalMoveList";
static const char __pyx_k_PIECE_SYMBOLS[] = "PIECE_SYMBOLS";
static const char __pyx_k_STARTING_SFEN[] = "STARTING_SFEN";
static const char __pyx_k_StopIteration[] = "StopIteration";
static const char __pyx_k_move16_to_psv[] = "move16_to_psv";
static const char __pyx_k_move_from_csa[] = "move_from_csa";
static const char __pyx_k_parse_csa_str[] = "parse_csa_str";
static const char __pyx_k_reduce_cython[] = "__reduce_cython__";
static const char __pyx_k_NOT_REPETITION[] = "NOT_REPETITION";
static const char __pyx_k_REPETITION_WIN[] = "REPETITION_WIN";
static const char __pyx_k_SVG_PIECE_DEFS[] = "SVG_PIECE_DEFS";
static const char __pyx_k_black_pro_pawn[] = "black-pro-pawn";
static const char __pyx_k_cshogi__cshogi[] = "cshogi._cshogi";
static const char __pyx_k_white_pro_pawn[] = "white-pro-pawn";
static const char __pyx_k_HuffmanCodedPos[] = "HuffmanCodedPos";
static const char __pyx_k_PackedSfenValue[] = "PackedSfenValue";
static const char __pyx_k_REPETITION_DRAW[] = "REPETITION_DRAW";
static const char __pyx_k_REPETITION_LOSE[] = "REPETITION_LOSE";
static const char __pyx_k_SVG_COORDINATES[] = "SVG_COORDINATES";
static const char __pyx_k_black_pro_lance[] = "black-pro-lance";
static const char __pyx_k_drop_piece_type[] = "drop_piece_type";
static const char __pyx_k_dtypeGameResult[] = "dtypeGameResult";
static const char __pyx_k_move16_from_psv[] = "move16_from_psv";
static const char __pyx_k_setstate_cython[] = "__setstate_cython__";
static const char __pyx_k_white_pro_lance[] = "white-pro-lance";
static const char __pyx_k_REPETITION_TYPES[] = "REPETITION_TYPES";
static const char __pyx_k_black_pro_knight[] = "black-pro-knight";
static const char __pyx_k_black_pro_silver[] = "black-pro-silver";
static const char __pyx_k_white_pro_knight[] = "white-pro-knight";
static const char __pyx_k_white_pro_silver[] = "white-pro-silver";
static const char __pyx_k_SVG_PIECE_DEF_IDS[] = "SVG_PIECE_DEF_IDS";
static const char __pyx_k_move_is_promotion[] = "move_is_promotion";
static const char __pyx_k_MAX_PIECES_IN_HAND[] = "MAX_PIECES_IN_HAND";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_cshogi__cshogi_pyx[] = "cshogi\\_cshogi.pyx";
static const char __pyx_k_REPETITION_INFERIOR[] = "REPETITION_INFERIOR";
static const char __pyx_k_REPETITION_SUPERIOR[] = "REPETITION_SUPERIOR";
static const char __pyx_k_piece_to_piece_type[] = "piece_to_piece_type";
static const char __pyx_k_SvgWrapper__repr_svg[] = "SvgWrapper._repr_svg_";
static const char __pyx_k_getpreferredencoding[] = "getpreferredencoding";
static const char __pyx_k_move_drop_hand_piece[] = "move_drop_hand_piece";
static const char __pyx_k_move_from_piece_type[] = "move_from_piece_type";
static const char __pyx_k_PIECE_TYPES_WITH_NONE[] = "PIECE_TYPES_WITH_NONE";
static const char __pyx_k_dlshogi_FEATURES1_NUM[] = "_dlshogi_FEATURES1_NUM";
static const char __pyx_k_dlshogi_FEATURES2_NUM[] = "_dlshogi_FEATURES2_NUM";
static const char __pyx_k_xml_etree_ElementTree[] = "xml.etree.ElementTree";
static const char __pyx_k_HuffmanCodedPosAndEval[] = "HuffmanCodedPosAndEval";
static const char __pyx_k_PIECE_JAPANESE_SYMBOLS[] = "PIECE_JAPANESE_SYMBOLS";
static const char __pyx_k_dlshogi_make_move_label[] = "_dlshogi_make_move_label";
static const char __pyx_k_http_www_w3_org_2000_svg[] = "http://www.w3.org/2000/svg";
static const char __pyx_k_http_www_w3_org_1999_xlink[] = "http://www.w3.org/1999/xlink";
static const char __pyx_k_HAND_PIECE_JAPANESE_SYMBOLS[] = "HAND_PIECE_JAPANESE_SYMBOLS";
static const char __pyx_k_NUMBER_JAPANESE_KANJI_SYMBOLS[] = "NUMBER_JAPANESE_KANJI_SYMBOLS";
static const char __pyx_k_NUMBER_JAPANESE_NUMBER_SYMBOLS[] = "NUMBER_JAPANESE_NUMBER_SYMBOLS";
static const char __pyx_k_g_id_black_pro_lance_transform[] = "<g id=\"black-pro-lance\" transform=\"scale(1.0, 0.5)\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"10.5\" y=\"18\">\346\210\220</text><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"10.5\" y=\"34\">\351\246\231</text></g>";
static const char __pyx_k_g_id_white_pro_lance_transform[] = "<g id=\"white-pro-lance\" transform=\"scale(1.0, 0.5) rotate(180)\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"-10.5\" y=\"-22\">\346\210\220</text><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"-10.5\" y=\"-6\">\351\246\231</text></g>";
static const char __pyx_k_g_id_black_bishop_text_font_fam[] = "<g id=\"black-bishop\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"10.5\" y=\"16.5\">\350\247\222</text></g>";
static const char __pyx_k_g_id_black_dragon_text_font_fam[] = "<g id=\"black-dragon\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"10.5\" y=\"16.5\">\351\276\215</text></g>";
static const char __pyx_k_g_id_black_gold_text_font_famil[] = "<g id=\"black-gold\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"10.5\" y=\"16.5\">\351\207\221</text></g>";
static const char __pyx_k_g_id_black_horse_text_font_fami[] = "<g id=\"black-horse\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"10.5\" y=\"16.5\">\351\246\254</text></g>";
static const char __pyx_k_g_id_black_king_text_font_famil[] = "<g id=\"black-king\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"10.5\" y=\"16.5\">\347\216\213</text></g>";
static const char __pyx_k_g_id_black_knight_text_font_fam[] = "<g id=\"black-knight\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"10.5\" y=\"16.5\">\346\241\202</text></g>";
static const char __pyx_k_g_id_black_lance_text_font_fami[] = "<g id=\"black-lance\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"10.5\" y=\"16.5\">\351\246\231</text></g>";
static const char __pyx_k_g_id_black_pawn_text_font_famil[] = "<g id=\"black-pawn\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"10.5\" y=\"16.5\">\346\255\251</text></g>";
static const char __pyx_k_g_id_black_pro_knight_transform[] = "<g id=\"black-pro-knight\" transform=\"scale(1.0, 0.5)\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"10.5\" y=\"18\">\346\210\220</text><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"10.5\" y=\"34\">\346\241\202</text></g>";
static const char __pyx_k_g_id_black_pro_pawn_text_font_f[] = "<g id=\"black-pro-pawn\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"10.5\" y=\"16.5\">\343\201\250</text></g>";
static const char __pyx_k_g_id_black_pro_silver_transform[] = "<g id=\"black-pro-silver\" transform=\"scale(1.0, 0.5)\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"10.5\" y=\"18\">\346\210\220</text><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"10.5\" y=\"34\">\351\212\200</text></g>";
static const char __pyx_k_g_id_black_rook_text_font_famil[] = "<g id=\"black-rook\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"10.5\" y=\"16.5\">\351\243\233</text></g>";
static const char __pyx_k_g_id_black_silver_text_font_fam[] = "<g id=\"black-silver\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"10.5\" y=\"16.5\">\351\212\200</text></g>";
static const char __pyx_k_g_id_white_bishop_transform_rot[] = "<g id=\"white-bishop\" transform=\"rotate(180)\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"-10.5\" y=\"-3.5\">\350\247\222</text></g>";
static const char __pyx_k_g_id_white_dragon_transform_rot[] = "<g id=\"white-dragon\" transform=\"rotate(180)\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"-10.5\" y=\"-3.5\">\351\276\215</text></g>";
static const char __pyx_k_g_id_white_gold_transform_rotat[] = "<g id=\"white-gold\" transform=\"rotate(180)\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"-10.5\" y=\"-3.5\">\351\207\221</text></g>";
static const char __pyx_k_g_id_white_horse_transform_rota[] = "<g id=\"white-horse\" transform=\"rotate(180)\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"-10.5\" y=\"-3.5\">\351\246\254</text></g>";
static const char __pyx_k_g_id_white_king_transform_rotat[] = "<g id=\"white-king\" transform=\"rotate(180)\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"-10.5\" y=\"-3.5\">\347\216\213</text></g>";
static const char __pyx_k_g_id_white_knight_transform_rot[] = "<g id=\"white-knight\" transform=\"rotate(180)\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"-10.5\" y=\"-3.5\">\346\241\202</text></g>";
static const char __pyx_k_g_id_white_lance_transform_rota[] = "<g id=\"white-lance\" transform=\"rotate(180)\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"-10.5\" y=\"-3.5\">\351\246\231</text></g>";
static const char __pyx_k_g_id_white_pawn_transform_rotat[] = "<g id=\"white-pawn\" transform=\"rotate(180)\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"-10.5\" y=\"-3.5\">\346\255\251</text></g>";
static const char __pyx_k_g_id_white_pro_knight_transform[] = "<g id=\"white-pro-knight\" transform=\"scale(1.0, 0.5) rotate(180)\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"-10.5\" y=\"-22\">\346\210\220</text><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"-10.5\" y=\"-6\">\346\241\202</text></g>";
static const char __pyx_k_g_id_white_pro_pawn_transform_r[] = "<g id=\"white-pro-pawn\" transform=\"rotate(180)\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"-10.5\" y=\"-3.5\">\343\201\250</text></g>";
static const char __pyx_k_g_id_white_pro_silver_transform[] = "<g id=\"white-pro-silver\" transform=\"scale(1.0, 0.5) rotate(180)\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"-10.5\" y=\"-22\">\346\210\220</text><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"-10.5\" y=\"-6\">\351\212\200</text></g>";
static const char __pyx_k_g_id_white_rook_transform_rotat[] = "<g id=\"white-rook\" transform=\"rotate(180)\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"-10.5\" y=\"-3.5\">\351\243\233</text></g>";
static const char __pyx_k_g_id_white_silver_transform_rot[] = "<g id=\"white-silver\" transform=\"rotate(180)\"><text font-family=\"serif\" font-size=\"17\" text-anchor=\"middle\" x=\"-10.5\" y=\"-3.5\">\351\212\200</text></g>";
static const char __pyx_k_g_stroke_black_rect_x_20_y_10_w[] = "<g stroke=\"black\"><rect x=\"20\" y=\"10\" width=\"181\" height=\"181\" fill=\"none\" stroke-width=\"1.5\" /><line x1=\"20.5\" y1=\"30.5\" x2=\"200.5\" y2=\"30.5\" stroke-width=\"1.0\" /><line x1=\"20.5\" y1=\"50.5\" x2=\"200.5\" y2=\"50.5\" stroke-width=\"1.0\" /><line x1=\"20.5\" y1=\"70.5\" x2=\"200.5\" y2=\"70.5\" stroke-width=\"1.0\" /><line x1=\"20.5\" y1=\"90.5\" x2=\"200.5\" y2=\"90.5\" stroke-width=\"1.0\" /><line x1=\"20.5\" y1=\"110.5\" x2=\"200.5\" y2=\"110.5\" stroke-width=\"1.0\" /><line x1=\"20.5\" y1=\"130.5\" x2=\"200.5\" y2=\"130.5\" stroke-width=\"1.0\" /><line x1=\"20.5\" y1=\"150.5\" x2=\"200.5\" y2=\"150.5\" stroke-width=\"1.0\" /><line x1=\"20.5\" y1=\"170.5\" x2=\"200.5\" y2=\"170.5\" stroke-width=\"1.0\" /><line x1=\"40.5\" y1=\"10.5\" x2=\"40.5\" y2=\"190.5\" stroke-width=\"1.0\" /><line x1=\"60.5\" y1=\"10.5\" x2=\"60.5\" y2=\"190.5\" stroke-width=\"1.0\" /><line x1=\"80.5\" y1=\"10.5\" x2=\"80.5\" y2=\"190.5\" stroke-width=\"1.0\" /><line x1=\"100.5\" y1=\"10.5\" x2=\"100.5\" y2=\"190.5\" stroke-width=\"1.0\" /><line x1=\"120.5\" y1=\"10.5\" x2=\"120.5\" y2=\"190.5\" stroke-width=\"1.0\" /><line x1=\"140.5\" y1=\"10.5\" x2=\"140.5\" y2=\"190.5\" stroke-width=\"1.0\" /><line x1=\"160.5\" y1=\"10.5\" x2=\"160.5\" y2=\"190.5\" stroke-width=\"1.0\" /><line x1=\"180.5\" y1=\"10.5\" x2=\"180.5\" y2=\"190.5\" stroke-width=\"1.0\" /></g>";
static const char __pyx_k_g_text_font_family_serif_text_a[] = "<g><text font-family=\"serif\" text-anchor=\"middle\" font-size=\"9\" x=\"30.5\" y=\"8\">9</text><text font-family=\"serif\" text-anchor=\"middle\" font-size=\"9\" x=\"50.5\" y=\"8\">8</text><text font-family=\"serif\" text-anchor=\"middle\" font-size=\"9\" x=\"70.5\" y=\"8\">7</text><text font-family=\"serif\" text-anchor=\"middle\" font-size=\"9\" x=\"90.5\" y=\"8\">6</text><text font-family=\"serif\" text-anchor=\"middle\" font-size=\"9\" x=\"110.5\" y=\"8\">5</text><text font-family=\"serif\" text-anchor=\"middle\" font-size=\"9\" x=\"130.5\" y=\"8\">4</text><text font-family=\"serif\" text-anchor=\"middle\" font-size=\"9\" x=\"150.5\" y=\"8\">3</text><text font-family=\"serif\" text-anchor=\"middle\" font-size=\"9\" x=\"170.5\" y=\"8\">2</text><text font-family=\"serif\" text-anchor=\"middle\" font-size=\"9\" x=\"190.5\" y=\"8\">1</text><text font-family=\"serif\" font-size=\"9\" x=\"203.5\" y=\"23\">\344\270\200</text><text font-family=\"serif\" font-size=\"9\" x=\"203.5\" y=\"43\">\344\272\214</text><text font-family=\"serif\" font-size=\"9\" x=\"203.5\" y=\"63\">\344\270\211</text><text font-family=\"serif\" font-size=\"9\" x=\"203.5\" y=\"83\">\345\233\233</text><text font-family=\"serif\" font-size=\"9\" x=\"203.5\" y=\"103\">\344\272\224</text><text font-family=\"serif\" font-size=\"9\" x=\"203.5\" y=\"123\">\345\205\255</text><text font-family=\"serif\" font-size=\"9\" x=\"203.5\" y=\"143\">\344\270\203</text><text font-family=\"serif\" font-size=\"9\" x=\"203.5\" y=\"163\">\345\205\253</text><text font-family=\"serif\" font-size=\"9\" x=\"203.5\" y=\"183\">\344\271\235</text></g>";
static const char __pyx_k_lnsgkgsnl_1r5b1_ppppppppp_9_9_9[] = "lnsgkgsnl/1r5b1/ppppppppp/9/9/9/PPPPPPPPP/1B5R1/LNSGKGSNL b - 1";
static const char __pyx_k_numpy_core_multiarray_failed_to[] = "numpy.core.multiarray failed to import";
static const char __pyx_k_no_default___reduce___due_to_non[] = "no default __reduce__ due to non-trivial __cinit__";
static const char __pyx_k_numpy_core_umath_failed_to_impor[] = "numpy.core.umath failed to import";
static PyObject *__pyx_n_s_;
static PyObject *__pyx_kp_s_0_0;
static PyObject *__pyx_kp_s_1_1;
static PyObject *__pyx_kp_s_1a;
static PyObject *__pyx_kp_s_1b;
static PyObject *__pyx_kp_s_1c;
static PyObject *__pyx_kp_s_1d;
static PyObject *__pyx_kp_s_1e;
static PyObject *__pyx_kp_s_1f;
static PyObject *__pyx_kp_s_1g;
static PyObject *__pyx_kp_s_1h;
static PyObject *__pyx_kp_s_1i;
static PyObject *__pyx_kp_s_2a;
static PyObject *__pyx_kp_s_2b;
static PyObject *__pyx_kp_s_2c;
static PyObject *__pyx_kp_s_2d;
static PyObject *__pyx_kp_s_2e;
static PyObject *__pyx_kp_s_2f;
static PyObject *__pyx_kp_s_2g;
static PyObject *__pyx_kp_s_2h;
static PyObject *__pyx_kp_s_2i;
static PyObject *__pyx_kp_s_3a;
static PyObject *__pyx_kp_s_3b;
static PyObject *__pyx_kp_s_3c;
static PyObject *__pyx_kp_s_3d;
static PyObject *__pyx_kp_s_3e;
static PyObject *__pyx_kp_s_3f;
static PyObject *__pyx_kp_s_3g;
static PyObject *__pyx_kp_s_3h;
static PyObject *__pyx_kp_s_3i;
static PyObject *__pyx_kp_s_4a;
static PyObject *__pyx_kp_s_4b;
static PyObject *__pyx_kp_s_4c;
static PyObject *__pyx_kp_s_4d;
static PyObject *__pyx_kp_s_4e;
static PyObject *__pyx_kp_s_4f;
static PyObject *__pyx_kp_s_4g;
static PyObject *__pyx_kp_s_4h;
static PyObject *__pyx_kp_s_4i;
static PyObject *__pyx_kp_s_5a;
static PyObject *__pyx_kp_s_5b;
static PyObject *__pyx_kp_s_5c;
static PyObject *__pyx_kp_s_5d;
static PyObject *__pyx_kp_s_5e;
static PyObject *__pyx_kp_s_5f;
static PyObject *__pyx_kp_s_5g;
static PyObject *__pyx_kp_s_5h;
static PyObject *__pyx_kp_s_5i;
static PyObject *__pyx_kp_s_6a;
static PyObject *__pyx_kp_s_6b;
static PyObject *__pyx_kp_s_6c;
static PyObject *__pyx_kp_s_6d;
static PyObject *__pyx_kp_s_6e;
static PyObject *__pyx_kp_s_6f;
static PyObject *__pyx_kp_s_6g;
static PyObject *__pyx_kp_s_6h;
static PyObject *__pyx_kp_s_6i;
static PyObject *__pyx_kp_s_7a;
static PyObject *__pyx_kp_s_7b;
static PyObject *__pyx_kp_s_7c;
static PyObject *__pyx_kp_s_7d;
static PyObject *__pyx_kp_s_7e;
static PyObject *__pyx_kp_s_7f;
static PyObject *__pyx_kp_s_7g;
static PyObject *__pyx_kp_s_7h;
static PyObject *__pyx_kp_s_7i;
static PyObject *__pyx_kp_s_8a;
static PyObject *__pyx_kp_s_8b;
static PyObject *__pyx_kp_s_8c;
static PyObject *__pyx_kp_s_8d;
static PyObject *__pyx_kp_s_8e;
static PyObject *__pyx_kp_s_8f;
static PyObject *__pyx_kp_s_8g;
static PyObject *__pyx_kp_s_8h;
static PyObject *__pyx_kp_s_8i;
static PyObject *__pyx_kp_s_9a;
static PyObject *__pyx_kp_s_9b;
static PyObject *__pyx_kp_s_9c;
static PyObject *__pyx_kp_s_9d;
static PyObject *__pyx_kp_s_9e;
static PyObject *__pyx_kp_s_9f;
static PyObject *__pyx_kp_s_9g;
static PyObject *__pyx_kp_s_9h;
static PyObject *__pyx_kp_s_9i;
static PyObject *__pyx_n_s_A1;
static PyObject *__pyx_n_s_A2;
static PyObject *__pyx_n_s_A3;
static PyObject *__pyx_n_s_A4;
static PyObject *__pyx_n_s_A5;
static PyObject *__pyx_n_s_A6;
static PyObject *__pyx_n_s_A7;
static PyObject *__pyx_n_s_A8;
static PyObject *__pyx_n_s_A9;
static PyObject *__pyx_n_s_B1;
static PyObject *__pyx_n_s_B2;
static PyObject *__pyx_n_s_B3;
static PyObject *__pyx_n_s_B4;
static PyObject *__pyx_n_s_B5;
static PyObject *__pyx_n_s_B6;
static PyObject *__pyx_n_s_B7;
static PyObject *__pyx_n_s_B8;
static PyObject *__pyx_n_s_B9;
static PyObject *__pyx_n_s_BBISHOP;
static PyObject *__pyx_n_s_BGOLD;
static PyObject *__pyx_n_s_BISHOP;
static PyObject *__pyx_n_s_BKING;
static PyObject *__pyx_n_s_BKNIGHT;
static PyObject *__pyx_n_s_BLACK;
static PyObject *__pyx_n_s_BLACK_WIN;
static PyObject *__pyx_n_s_BLANCE;
static PyObject *__pyx_n_s_BPAWN;
static PyObject *__pyx_n_s_BPROM_BISHOP;
static PyObject *__pyx_n_s_BPROM_KNIGHT;
static PyObject *__pyx_n_s_BPROM_LANCE;
static PyObject *__pyx_n_s_BPROM_PAWN;
static PyObject *__pyx_n_s_BPROM_ROOK;
static PyObject *__pyx_n_s_BPROM_SILVER;
static PyObject *__pyx_n_s_BROOK;
static PyObject *__pyx_n_s_BSILVER;
static PyObject *__pyx_n_s_Board;
static PyObject *__pyx_n_s_BookEntry;
static PyObject *__pyx_n_s_C1;
static PyObject *__pyx_n_s_C2;
static PyObject *__pyx_n_s_C3;
static PyObject *__pyx_n_s_C4;
static PyObject *__pyx_n_s_C5;
static PyObject *__pyx_n_s_C6;
static PyObject *__pyx_n_s_C7;
static PyObject *__pyx_n_s_C8;
static PyObject *__pyx_n_s_C9;
static PyObject *__pyx_n_s_COLORS;
static PyObject *__pyx_n_s_D1;
static PyObject *__pyx_n_s_D2;
static PyObject *__pyx_n_s_D3;
static PyObject *__pyx_n_s_D4;
static PyObject *__pyx_n_s_D5;
static PyObject *__pyx_n_s_D6;
static PyObject *__pyx_n_s_D7;
static PyObject *__pyx_n_s_D8;
static PyObject *__pyx_n_s_D9;
static PyObject *__pyx_n_s_DRAW;
static PyObject *__pyx_n_s_DfPn;
static PyObject *__pyx_n_s_E1;
static PyObject *__pyx_n_s_E2;
static PyObject *__pyx_n_s_E3;
static PyObject *__pyx_n_s_E4;
static PyObject *__pyx_n_s_E5;
static PyObject *__pyx_n_s_E6;
static PyObject *__pyx_n_s_E7;
static PyObject *__pyx_n_s_E8;
static PyObject *__pyx_n_s_E9;
static PyObject *__pyx_n_s_Element;
static PyObject *__pyx_n_s_F1;
static PyObject *__pyx_n_s_F2;
static PyObject *__pyx_n_s_F3;
static PyObject *__pyx_n_s_F4;
static PyObject *__pyx_n_s_F5;
static PyObject *__pyx_n_s_F6;
static PyObject *__pyx_n_s_F7;
static PyObject *__pyx_n_s_F8;
static PyObject *__pyx_n_s_F9;
static PyObject *__pyx_n_s_G1;
static PyObject *__pyx_n_s_G2;
static PyObject *__pyx_n_s_G3;
static PyObject *__pyx_n_s_G4;
static PyObject *__pyx_n_s_G5;
static PyObject *__pyx_n_s_G6;
static PyObject *__pyx_n_s_G7;
static PyObject *__pyx_n_s_G8;
static PyObject *__pyx_n_s_G9;
static PyObject *__pyx_n_s_GAME_RESULTS;
static PyObject *__pyx_n_s_GOLD;
static PyObject *__pyx_n_s_H1;
static PyObject *__pyx_n_s_H2;
static PyObject *__pyx_n_s_H3;
static PyObject *__pyx_n_s_H4;
static PyObject *__pyx_n_s_H5;
static PyObject *__pyx_n_s_H6;
static PyObject *__pyx_n_s_H7;
static PyObject *__pyx_n_s_H8;
static PyObject *__pyx_n_s_H9;
static PyObject *__pyx_n_s_HAND_PIECES;
static PyObject *__pyx_n_s_HAND_PIECE_JAPANESE_SYMBOLS;
static PyObject *__pyx_n_s_HBISHOP;
static PyObject *__pyx_n_s_HGOLD;
static PyObject *__pyx_n_s_HKNIGHT;
static PyObject *__pyx_n_s_HLANCE;
static PyObject *__pyx_n_s_HPAWN;
static PyObject *__pyx_n_s_HROOK;
static PyObject *__pyx_n_s_HSILVER;
static PyObject *__pyx_n_s_HuffmanCodedPos;
static PyObject *__pyx_n_s_HuffmanCodedPosAndEval;
static PyObject *__pyx_n_s_I1;
static PyObject *__pyx_n_s_I2;
static PyObject *__pyx_n_s_I3;
static PyObject *__pyx_n_s_I4;
static PyObject *__pyx_n_s_I5;
static PyObject *__pyx_n_s_I6;
static PyObject *__pyx_n_s_I7;
static PyObject *__pyx_n_s_I8;
static PyObject *__pyx_n_s_I9;
static PyObject *__pyx_n_s_ImportError;
static PyObject *__pyx_n_s_KING;
static PyObject *__pyx_n_s_KNIGHT;
static PyObject *__pyx_n_s_LANCE;
static PyObject *__pyx_n_s_LegalMoveList;
static PyObject *__pyx_n_s_MAX_PIECES_IN_HAND;
static PyObject *__pyx_n_s_MOVE_NONE;
static PyObject *__pyx_n_s_NONE;
static PyObject *__pyx_n_s_NOTUSE;
static PyObject *__pyx_n_s_NOT_REPETITION;
static PyObject *__pyx_n_s_NUMBER_JAPANESE_KANJI_SYMBOLS;
static PyObject *__pyx_n_s_NUMBER_JAPANESE_NUMBER_SYMBOLS;
static PyObject *__pyx_n_s_PAWN;
static PyObject *__pyx_n_s_PIECES;
static PyObject *__pyx_n_s_PIECE_JAPANESE_SYMBOLS;
static PyObject *__pyx_n_s_PIECE_SYMBOLS;
static PyObject *__pyx_n_s_PIECE_TYPES;
static PyObject *__pyx_n_s_PIECE_TYPES_WITH_NONE;
static PyObject *__pyx_n_s_PROM_BISHOP;
static PyObject *__pyx_n_s_PROM_KNIGHT;
static PyObject *__pyx_n_s_PROM_LANCE;
static PyObject *__pyx_n_s_PROM_PAWN;
static PyObject *__pyx_n_s_PROM_ROOK;
static PyObject *__pyx_n_s_PROM_SILVER;
static PyObject *__pyx_n_s_PackedSfen;
static PyObject *__pyx_n_s_PackedSfenValue;
static PyObject *__pyx_n_s_Parser;
static PyObject *__pyx_n_s_REPETITION_DRAW;
static PyObject *__pyx_n_s_REPETITION_INFERIOR;
static PyObject *__pyx_n_s_REPETITION_LOSE;
static PyObject *__pyx_n_s_REPETITION_SUPERIOR;
static PyObject *__pyx_n_s_REPETITION_TYPES;
static PyObject *__pyx_n_s_REPETITION_WIN;
static PyObject *__pyx_n_s_ROOK;
static PyObject *__pyx_n_s_SILVER;
static PyObject *__pyx_n_s_SQUARES;
static PyObject *__pyx_n_s_SQUARE_NAMES;
static PyObject *__pyx_n_s_STARTING_SFEN;
static PyObject *__pyx_n_s_SVG_COORDINATES;
static PyObject *__pyx_n_s_SVG_PIECE_DEFS;
static PyObject *__pyx_n_s_SVG_PIECE_DEF_IDS;
static PyObject *__pyx_n_s_SVG_SQUARES;
static PyObject *__pyx_n_s_StopIteration;
static PyObject *__pyx_n_s_SubElement;
static PyObject *__pyx_n_s_SvgWrapper;
static PyObject *__pyx_n_s_SvgWrapper__repr_svg;
static PyObject *__pyx_n_s_TypeError;
static PyObject *__pyx_n_s_WBISHOP;
static PyObject *__pyx_n_s_WGOLD;
static PyObject *__pyx_n_s_WHITE;
static PyObject *__pyx_n_s_WHITE_WIN;
static PyObject *__pyx_n_s_WKING;
static PyObject *__pyx_n_s_WKNIGHT;
static PyObject *__pyx_n_s_WLANCE;
static PyObject *__pyx_n_s_WPAWN;
static PyObject *__pyx_n_s_WPROM_BISHOP;
static PyObject *__pyx_n_s_WPROM_KNIGHT;
static PyObject *__pyx_n_s_WPROM_LANCE;
static PyObject *__pyx_n_s_WPROM_PAWN;
static PyObject *__pyx_n_s_WPROM_ROOK;
static PyObject *__pyx_n_s_WPROM_SILVER;
static PyObject *__pyx_n_s_WROOK;
static PyObject *__pyx_n_s_WSILVER;
static PyObject *__pyx_kp_s__15;
static PyObject *__pyx_kp_s__16;
static PyObject *__pyx_kp_s__3;
static PyObject *__pyx_kp_s__31;
static PyObject *__pyx_kp_s__32;
static PyObject *__pyx_kp_s__33;
static PyObject *__pyx_kp_s__34;
static PyObject *__pyx_kp_s__35;
static PyObject *__pyx_kp_s__36;
static PyObject *__pyx_kp_s__37;
static PyObject *__pyx_kp_s__38;
static PyObject *__pyx_kp_s__39;
static PyObject *__pyx_kp_s__4;
static PyObject *__pyx_kp_s__40;
static PyObject *__pyx_kp_s__41;
static PyObject *__pyx_kp_s__42;
static PyObject *__pyx_kp_s__43;
static PyObject *__pyx_kp_s__44;
static PyObject *__pyx_kp_s__45;
static PyObject *__pyx_kp_s__46;
static PyObject *__pyx_kp_s__47;
static PyObject *__pyx_kp_s__48;
static PyObject *__pyx_kp_s__49;
static PyObject *__pyx_kp_s__5;
static PyObject *__pyx_kp_s__50;
static PyObject *__pyx_kp_s__51;
static PyObject *__pyx_kp_s__52;
static PyObject *__pyx_kp_s__53;
static PyObject *__pyx_kp_s__54;
static PyObject *__pyx_kp_s__55;
static PyObject *__pyx_kp_s__56;
static PyObject *__pyx_kp_s__57;
static PyObject *__pyx_kp_s__58;
static PyObject *__pyx_kp_s__59;
static PyObject *__pyx_kp_s__6;
static PyObject *__pyx_kp_s__60;
static PyObject *__pyx_kp_s__61;
static PyObject *__pyx_kp_s__62;
static PyObject *__pyx_kp_s__63;
static PyObject *__pyx_kp_s__64;
static PyObject *__pyx_kp_s__7;
static PyObject *__pyx_kp_s__8;
static PyObject *__pyx_n_s_append;
static PyObject *__pyx_n_s_ascii;
static PyObject *__pyx_n_s_b;
static PyObject *__pyx_kp_s_b_2;
static PyObject *__pyx_n_s_bestMove16;
static PyObject *__pyx_kp_s_black_bishop;
static PyObject *__pyx_kp_s_black_dragon;
static PyObject *__pyx_kp_s_black_gold;
static PyObject *__pyx_kp_s_black_horse;
static PyObject *__pyx_kp_s_black_king;
static PyObject *__pyx_kp_s_black_knight;
static PyObject *__pyx_kp_s_black_lance;
static PyObject *__pyx_kp_s_black_pawn;
static PyObject *__pyx_kp_s_black_pro_knight;
static PyObject *__pyx_kp_s_black_pro_lance;
static PyObject *__pyx_kp_s_black_pro_pawn;
static PyObject *__pyx_kp_s_black_pro_silver;
static PyObject *__pyx_kp_s_black_rook;
static PyObject *__pyx_kp_s_black_silver;
static PyObject *__pyx_n_s_board;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_color;
static PyObject *__pyx_n_s_count;
static PyObject *__pyx_n_s_csa;
static PyObject *__pyx_n_s_csa_b;
static PyObject *__pyx_n_s_csa_str;
static PyObject *__pyx_n_s_cshogi__cshogi;
static PyObject *__pyx_kp_s_cshogi__cshogi_pyx;
static PyObject *__pyx_n_s_decode;
static PyObject *__pyx_n_s_defs;
static PyObject *__pyx_n_s_depth;
static PyObject *__pyx_n_s_dlshogi_FEATURES1_NUM;
static PyObject *__pyx_n_s_dlshogi_FEATURES2_NUM;
static PyObject *__pyx_n_s_dlshogi_make_move_label;
static PyObject *__pyx_n_s_doc;
static PyObject *__pyx_n_s_draw_ply;
static PyObject *__pyx_n_s_drop_piece_type;
static PyObject *__pyx_n_s_dtypeEval;
static PyObject *__pyx_n_s_dtypeGameResult;
static PyObject *__pyx_n_s_dtypeHcp;
static PyObject *__pyx_n_s_dtypeKey;
static PyObject *__pyx_n_s_dtypeMove16;
static PyObject *__pyx_n_s_dummy;
static PyObject *__pyx_n_s_encode;
static PyObject *__pyx_n_s_encoding;
static PyObject *__pyx_n_s_enter;
static PyObject *__pyx_n_s_eval;
static PyObject *__pyx_n_s_exit;
static PyObject *__pyx_n_s_f;
static PyObject *__pyx_kp_s_f6b94d;
static PyObject *__pyx_kp_s_fdf0e3;
static PyObject *__pyx_n_s_features1;
static PyObject *__pyx_n_s_features2;
static PyObject *__pyx_n_s_file;
static PyObject *__pyx_n_s_fill;
static PyObject *__pyx_kp_s_font_family;
static PyObject *__pyx_kp_s_font_size;
static PyObject *__pyx_n_s_format;
static PyObject *__pyx_n_s_fromToPro;
static PyObject *__pyx_n_s_from_square;
static PyObject *__pyx_n_s_fromstring;
static PyObject *__pyx_n_s_g;
static PyObject *__pyx_kp_s_g_id_black_bishop_text_font_fam;
static PyObject *__pyx_kp_s_g_id_black_dragon_text_font_fam;
static PyObject *__pyx_kp_s_g_id_black_gold_text_font_famil;
static PyObject *__pyx_kp_s_g_id_black_horse_text_font_fami;
static PyObject *__pyx_kp_s_g_id_black_king_text_font_famil;
static PyObject *__pyx_kp_s_g_id_black_knight_text_font_fam;
static PyObject *__pyx_kp_s_g_id_black_lance_text_font_fami;
static PyObject *__pyx_kp_s_g_id_black_pawn_text_font_famil;
static PyObject *__pyx_kp_s_g_id_black_pro_knight_transform;
static PyObject *__pyx_kp_s_g_id_black_pro_lance_transform;
static PyObject *__pyx_kp_s_g_id_black_pro_pawn_text_font_f;
static PyObject *__pyx_kp_s_g_id_black_pro_silver_transform;
static PyObject *__pyx_kp_s_g_id_black_rook_text_font_famil;
static PyObject *__pyx_kp_s_g_id_black_silver_text_font_fam;
static PyObject *__pyx_kp_s_g_id_white_bishop_transform_rot;
static PyObject *__pyx_kp_s_g_id_white_dragon_transform_rot;
static PyObject *__pyx_kp_s_g_id_white_gold_transform_rotat;
static PyObject *__pyx_kp_s_g_id_white_horse_transform_rota;
static PyObject *__pyx_kp_s_g_id_white_king_transform_rotat;
static PyObject *__pyx_kp_s_g_id_white_knight_transform_rot;
static PyObject *__pyx_kp_s_g_id_white_lance_transform_rota;
static PyObject *__pyx_kp_s_g_id_white_pawn_transform_rotat;
static PyObject *__pyx_kp_s_g_id_white_pro_knight_transform;
static PyObject *__pyx_kp_s_g_id_white_pro_lance_transform;
static PyObject *__pyx_kp_s_g_id_white_pro_pawn_transform_r;
static PyObject *__pyx_kp_s_g_id_white_pro_silver_transform;
static PyObject *__pyx_kp_s_g_id_white_rook_transform_rotat;
static PyObject *__pyx_kp_s_g_id_white_silver_transform_rot;
static PyObject *__pyx_kp_s_g_stroke_black_rect_x_20_y_10_w;
static PyObject *__pyx_kp_s_g_text_font_family_serif_text_a;
static PyObject *__pyx_n_s_gamePly;
static PyObject *__pyx_n_s_gameResult;
static PyObject *__pyx_n_s_game_result;
static PyObject *__pyx_n_s_getpreferredencoding;
static PyObject *__pyx_n_s_getstate;
static PyObject *__pyx_n_s_hcp;
static PyObject *__pyx_n_s_height;
static PyObject *__pyx_kp_s_http_www_w3_org_1999_xlink;
static PyObject *__pyx_kp_s_http_www_w3_org_2000_svg;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_int16;
static PyObject *__pyx_n_s_int32;
static PyObject *__pyx_n_s_int8;
static PyObject *__pyx_n_s_is_check;
static PyObject *__pyx_n_s_k;
static PyObject *__pyx_n_s_key;
static PyObject *__pyx_n_s_l;
static PyObject *__pyx_kp_s_l_2;
static PyObject *__pyx_n_s_lastmove;
static PyObject *__pyx_kp_s_lnsgkgsnl_1r5b1_ppppppppp_9_9_9;
static PyObject *__pyx_n_s_locale;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_matches;
static PyObject *__pyx_n_s_metaclass;
static PyObject *__pyx_n_s_module;
static PyObject *__pyx_n_s_move;
static PyObject *__pyx_n_s_move16;
static PyObject *__pyx_n_s_move16_from_psv;
static PyObject *__pyx_n_s_move16_to_psv;
static PyObject *__pyx_n_s_move_cap;
static PyObject *__pyx_n_s_move_drop_hand_piece;
static PyObject *__pyx_n_s_move_from;
static PyObject *__pyx_n_s_move_from_csa;
static PyObject *__pyx_n_s_move_from_piece_type;
static PyObject *__pyx_n_s_move_is_drop;
static PyObject *__pyx_n_s_move_is_promotion;
static PyObject *__pyx_n_s_move_rotate;
static PyObject *__pyx_n_s_move_to;
static PyObject *__pyx_n_s_move_to_csa;
static PyObject *__pyx_n_s_move_to_usi;
static PyObject *__pyx_n_s_n;
static PyObject *__pyx_kp_s_n_2;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_kp_s_no_default___reduce___due_to_non;
static PyObject *__pyx_n_s_nodes;
static PyObject *__pyx_n_s_np;
static PyObject *__pyx_n_s_numpy;
static PyObject *__pyx_kp_s_numpy_core_multiarray_failed_to;
static PyObject *__pyx_kp_s_numpy_core_umath_failed_to_impor;
static PyObject *__pyx_n_s_one_csa_str;
static PyObject *__pyx_n_s_open;
static PyObject *__pyx_n_s_opponent;
static PyObject *__pyx_n_s_p;
static PyObject *__pyx_kp_s_p_2;
static PyObject *__pyx_n_s_padding;
static PyObject *__pyx_n_s_parse_csa_str;
static PyObject *__pyx_n_s_parse_file;
static PyObject *__pyx_n_s_parse_str;
static PyObject *__pyx_n_s_parser;
static PyObject *__pyx_n_s_parsers;
static PyObject *__pyx_n_s_piece_to_piece_type;
static PyObject *__pyx_n_s_ply;
static PyObject *__pyx_n_s_prepare;
static PyObject *__pyx_n_s_promotion;
static PyObject *__pyx_n_s_qualname;
static PyObject *__pyx_n_s_r;
static PyObject *__pyx_kp_s_r_2;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_read;
static PyObject *__pyx_n_s_rect;
static PyObject *__pyx_n_s_reduce;
static PyObject *__pyx_n_s_reduce_cython;
static PyObject *__pyx_n_s_reduce_ex;
static PyObject *__pyx_n_s_repr_svg;
static PyObject *__pyx_kp_s_rotate_180;
static PyObject *__pyx_n_s_s;
static PyObject *__pyx_kp_s_s_2;
static PyObject *__pyx_n_s_scale;
static PyObject *__pyx_n_s_score;
static PyObject *__pyx_n_s_self;
static PyObject *__pyx_n_s_serif;
static PyObject *__pyx_n_s_set;
static PyObject *__pyx_n_s_setstate;
static PyObject *__pyx_n_s_setstate_cython;
static PyObject *__pyx_n_s_sfen;
static PyObject *__pyx_n_s_split;
static PyObject *__pyx_n_s_staticmethod;
static PyObject *__pyx_n_s_svg;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_text;
static PyObject *__pyx_n_s_to_csa;
static PyObject *__pyx_n_s_to_square;
static PyObject *__pyx_n_s_to_svg;
static PyObject *__pyx_n_s_to_usi;
static PyObject *__pyx_n_s_tostring;
static PyObject *__pyx_n_s_transform;
static PyObject *__pyx_n_s_uint16;
static PyObject *__pyx_n_s_uint64;
static PyObject *__pyx_n_s_uint8;
static PyObject *__pyx_n_s_use;
static PyObject *__pyx_kp_s_utf_8;
static PyObject *__pyx_n_s_version;
static PyObject *__pyx_n_s_viewBox;
static PyObject *__pyx_kp_s_white_bishop;
static PyObject *__pyx_kp_s_white_dragon;
static PyObject *__pyx_kp_s_white_gold;
static PyObject *__pyx_kp_s_white_horse;
static PyObject *__pyx_kp_s_white_king;
static PyObject *__pyx_kp_s_white_knight;
static PyObject *__pyx_kp_s_white_lance;
static PyObject *__pyx_kp_s_white_pawn;
static PyObject *__pyx_kp_s_white_pro_knight;
static PyObject *__pyx_kp_s_white_pro_lance;
static PyObject *__pyx_kp_s_white_pro_pawn;
static PyObject *__pyx_kp_s_white_pro_silver;
static PyObject *__pyx_kp_s_white_rook;
static PyObject *__pyx_kp_s_white_silver;
static PyObject *__pyx_n_s_width;
static PyObject *__pyx_n_s_x;
static PyObject *__pyx_kp_s_xlink_href;
static PyObject *__pyx_n_s_xml_etree_ElementTree;
static PyObject *__pyx_n_s_xmlns;
static PyObject *__pyx_kp_s_xmlns_xlink;
static PyObject *__pyx_n_s_y;
static PyObject *__pyx_n_s_zip;
static PyObject *__pyx_pf_6cshogi_7_cshogi_10SvgWrapper__repr_svg_(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_to_usi(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_2to_csa(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move); /* proto */
static int __pyx_pf_6cshogi_7_cshogi_5Board___cinit__(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyObject *__pyx_v_sfen, struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_board); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_2__copy__(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_4copy(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_6set_sfen(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyObject *__pyx_v_sfen); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_8set_position(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyObject *__pyx_v_position); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_10set_hcp(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyArrayObject *__pyx_v_hcp); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_12set_psfen(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyArrayObject *__pyx_v_psfen); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_14reset(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_16__repr__(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_18push(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, int __pyx_v_move); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_20push_usi(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyObject *__pyx_v_usi); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_22push_csa(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyObject *__pyx_v_csa); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_24push_move16(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, unsigned short __pyx_v_move16); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_26push_psv(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, unsigned short __pyx_v_move16); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_28push_pass(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_30pop_pass(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_32pop(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_34peek(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_36is_game_over(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_38is_draw(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyObject *__pyx_v_ply); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_40move(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, int __pyx_v_from_square, int __pyx_v_to_square, bool __pyx_v_promotion); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_42drop_move(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, int __pyx_v_to_square, int __pyx_v_drop_piece_type); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_44move_from_usi(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyObject *__pyx_v_usi); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_46move_from_csa(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyObject *__pyx_v_csa); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_48move_from_move16(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, unsigned short __pyx_v_move16); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_50move_from_psv(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, unsigned short __pyx_v_move16); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_11legal_moves___get__(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_4turn___get__(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_11move_number___get__(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_52sfen(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_54csa_pos(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_56to_hcp(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyArrayObject *__pyx_v_hcp); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_58to_psfen(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyArrayObject *__pyx_v_hcp); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_60piece(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, int __pyx_v_sq); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_62piece_type(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, int __pyx_v_sq); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_64is_check(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_66mate_move_in_1ply(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_68mate_move(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, int __pyx_v_ply); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_70is_mate(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, int __pyx_v_ply); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_72zobrist_hash(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_74is_pseudo_legal(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, int __pyx_v_move); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_76is_legal(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, int __pyx_v_move); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_14pieces_in_hand___get__(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_6pieces___get__(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_78is_nyugyoku(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_80piece_planes(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyArrayObject *__pyx_v_features); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_82piece_planes_rotate(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyArrayObject *__pyx_v_features); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_84_dlshogi_make_input_features(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyArrayObject *__pyx_v_features1, PyArrayObject *__pyx_v_features2); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_86is_ok(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_88book_key(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_90to_svg(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyObject *__pyx_v_lastmove, PyObject *__pyx_v_scale); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_92_repr_svg_(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_94__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_96__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_4piece_to_piece_type(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_p); /* proto */
static int __pyx_pf_6cshogi_7_cshogi_13LegalMoveList___cinit__(struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *__pyx_v_self, struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_board); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_13LegalMoveList_2__iter__(struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_13LegalMoveList_4__next__(struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *__pyx_v_self); /* proto */
static Py_ssize_t __pyx_pf_6cshogi_7_cshogi_13LegalMoveList_6__len__(struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_13LegalMoveList_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_13LegalMoveList_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_6move_to(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_8move_from(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_10move_cap(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_12move_is_promotion(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_14move_is_drop(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_16move_from_piece_type(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_18move_drop_hand_piece(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_20move16(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_22move16_from_psv(CYTHON_UNUSED PyObject *__pyx_self, unsigned short __pyx_v_move16); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_24move16_to_psv(CYTHON_UNUSED PyObject *__pyx_self, unsigned short __pyx_v_move16); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_26move_rotate(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_28move_to_usi(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_30move_to_csa(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_32move_from_csa(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_csa); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_34opponent(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_color); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_36_dlshogi_make_move_label(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move, int __pyx_v_color); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_parse_file(PyObject *__pyx_v_file, PyObject *__pyx_v_encoding); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_2parse_str(PyObject *__pyx_v_csa_str); /* proto */
static int __pyx_pf_6cshogi_7_cshogi_6Parser_4__cinit__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_6parse_csa_file(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self, PyObject *__pyx_v_path); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_8parse_csa_str(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self, PyObject *__pyx_v_csa_str); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_7version___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_8var_info___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_4sfen___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_7endgame___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_5names___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_7ratings___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_5moves___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_5times___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_6scores___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_8comments___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_3win___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_7comment___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6cshogi_7_cshogi_4DfPn___cinit__(struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self, PyObject *__pyx_v_depth, PyObject *__pyx_v_nodes, PyObject *__pyx_v_draw_ply); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_2search(struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self, struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_board); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_4search_andnode(struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self, struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_board); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_6stop(struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self, bool __pyx_v_stop); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_8get_move(struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self, struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_board); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_10get_pv(struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self, struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_board); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_12set_draw_ply(struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self, int __pyx_v_draw_ply); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_14set_max_depth(struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self, int __pyx_v_max_depth); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_16set_max_search_node(struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self, int __pyx_v_max_search_node); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_13searched_node___get__(struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_18__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_20__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_tp_new_6cshogi_7_cshogi_Board(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6cshogi_7_cshogi_LegalMoveList(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6cshogi_7_cshogi_Parser(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6cshogi_7_cshogi_DfPn(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static __Pyx_CachedCFunction __pyx_umethod_PyString_Type_encode = {0, &__pyx_n_s_encode, 0, 0, 0};
static PyObject *__pyx_float_1_0;
static PyObject *__pyx_float_10_5;
static PyObject *__pyx_float_20_5;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_2;
static PyObject *__pyx_int_3;
static PyObject *__pyx_int_4;
static PyObject *__pyx_int_6;
static PyObject *__pyx_int_7;
static PyObject *__pyx_int_8;
static PyObject *__pyx_int_9;
static PyObject *__pyx_int_10;
static PyObject *__pyx_int_11;
static PyObject *__pyx_int_14;
static PyObject *__pyx_int_15;
static PyObject *__pyx_int_18;
static PyObject *__pyx_int_20;
static PyObject *__pyx_int_31;
static PyObject *__pyx_int_32;
static PyObject *__pyx_int_81;
static PyObject *__pyx_int_190;
static PyObject *__pyx_int_192;
static PyObject *__pyx_int_214;
static PyObject *__pyx_int_230;
static PyObject *__pyx_int_32767;
static PyObject *__pyx_int_1048576;
static PyObject *__pyx_int_neg_10;
static PyObject *__pyx_int_neg_16;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__9;
static PyObject *__pyx_slice__17;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__13;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__19;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_tuple__21;
static PyObject *__pyx_tuple__22;
static PyObject *__pyx_tuple__23;
static PyObject *__pyx_tuple__24;
static PyObject *__pyx_tuple__25;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__27;
static PyObject *__pyx_tuple__28;
static PyObject *__pyx_tuple__29;
static PyObject *__pyx_tuple__30;
static PyObject *__pyx_tuple__65;
static PyObject *__pyx_tuple__67;
static PyObject *__pyx_tuple__69;
static PyObject *__pyx_tuple__71;
static PyObject *__pyx_tuple__73;
static PyObject *__pyx_tuple__75;
static PyObject *__pyx_tuple__77;
static PyObject *__pyx_tuple__79;
static PyObject *__pyx_tuple__81;
static PyObject *__pyx_tuple__83;
static PyObject *__pyx_tuple__85;
static PyObject *__pyx_tuple__87;
static PyObject *__pyx_tuple__89;
static PyObject *__pyx_tuple__91;
static PyObject *__pyx_tuple__93;
static PyObject *__pyx_tuple__95;
static PyObject *__pyx_tuple__97;
static PyObject *__pyx_tuple__99;
static PyObject *__pyx_tuple__101;
static PyObject *__pyx_tuple__103;
static PyObject *__pyx_tuple__105;
static PyObject *__pyx_tuple__107;
static PyObject *__pyx_codeobj__66;
static PyObject *__pyx_codeobj__68;
static PyObject *__pyx_codeobj__70;
static PyObject *__pyx_codeobj__72;
static PyObject *__pyx_codeobj__74;
static PyObject *__pyx_codeobj__76;
static PyObject *__pyx_codeobj__78;
static PyObject *__pyx_codeobj__80;
static PyObject *__pyx_codeobj__82;
static PyObject *__pyx_codeobj__84;
static PyObject *__pyx_codeobj__86;
static PyObject *__pyx_codeobj__88;
static PyObject *__pyx_codeobj__90;
static PyObject *__pyx_codeobj__92;
static PyObject *__pyx_codeobj__94;
static PyObject *__pyx_codeobj__96;
static PyObject *__pyx_codeobj__98;
static PyObject *__pyx_codeobj__100;
static PyObject *__pyx_codeobj__102;
static PyObject *__pyx_codeobj__104;
static PyObject *__pyx_codeobj__106;
static PyObject *__pyx_codeobj__108;
/* Late includes */

/* "cshogi/_cshogi.pyx":196
 * 
 * class SvgWrapper(str):
 * 	def _repr_svg_(self):             # <<<<<<<<<<<<<<
 * 		return self
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_10SvgWrapper_1_repr_svg_(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_10SvgWrapper_1_repr_svg_ = {"_repr_svg_", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_10SvgWrapper_1_repr_svg_, METH_O, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_10SvgWrapper_1_repr_svg_(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_repr_svg_ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_10SvgWrapper__repr_svg_(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_10SvgWrapper__repr_svg_(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_repr_svg_", 0);

  /* "cshogi/_cshogi.pyx":197
 * class SvgWrapper(str):
 * 	def _repr_svg_(self):
 * 		return self             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "init.hpp":
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self);
  __pyx_r = __pyx_v_self;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":196
 * 
 * class SvgWrapper(str):
 * 	def _repr_svg_(self):             # <<<<<<<<<<<<<<
 * 		return self
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":224
 * 	string __to_csa(const int move)
 * 
 * def to_usi(int move):             # <<<<<<<<<<<<<<
 * 	return __to_usi(move)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_1to_usi(PyObject *__pyx_self, PyObject *__pyx_arg_move); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_1to_usi = {"to_usi", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_1to_usi, METH_O, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_1to_usi(PyObject *__pyx_self, PyObject *__pyx_arg_move) {
  int __pyx_v_move;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("to_usi (wrapper)", 0);
  assert(__pyx_arg_move); {
    __pyx_v_move = __Pyx_PyInt_As_int(__pyx_arg_move); if (unlikely((__pyx_v_move == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 224, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.to_usi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_to_usi(__pyx_self, ((int)__pyx_v_move));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_to_usi(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("to_usi", 0);

  /* "cshogi/_cshogi.pyx":225
 * 
 * def to_usi(int move):
 * 	return __to_usi(move)             # <<<<<<<<<<<<<<
 * 
 * def to_csa(int move):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_PyBytes_string_to_py_std__in_string(__to_usi(__pyx_v_move)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 225, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":224
 * 	string __to_csa(const int move)
 * 
 * def to_usi(int move):             # <<<<<<<<<<<<<<
 * 	return __to_usi(move)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.to_usi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":227
 * 	return __to_usi(move)
 * 
 * def to_csa(int move):             # <<<<<<<<<<<<<<
 * 	return __to_csa(move)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_3to_csa(PyObject *__pyx_self, PyObject *__pyx_arg_move); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_3to_csa = {"to_csa", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_3to_csa, METH_O, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_3to_csa(PyObject *__pyx_self, PyObject *__pyx_arg_move) {
  int __pyx_v_move;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("to_csa (wrapper)", 0);
  assert(__pyx_arg_move); {
    __pyx_v_move = __Pyx_PyInt_As_int(__pyx_arg_move); if (unlikely((__pyx_v_move == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 227, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.to_csa", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_2to_csa(__pyx_self, ((int)__pyx_v_move));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_2to_csa(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("to_csa", 0);

  /* "cshogi/_cshogi.pyx":228
 * 
 * def to_csa(int move):
 * 	return __to_csa(move)             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "cshogi.h":
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_PyBytes_string_to_py_std__in_string(__to_csa(__pyx_v_move)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":227
 * 	return __to_usi(move)
 * 
 * def to_csa(int move):             # <<<<<<<<<<<<<<
 * 	return __to_csa(move)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.to_csa", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":282
 * 	cdef __Board __board
 * 
 * 	def __cinit__(self, str sfen=None, Board board=None):             # <<<<<<<<<<<<<<
 * 		cdef string sfen_b
 * 		if sfen:
 */

/* Python wrapper */
static int __pyx_pw_6cshogi_7_cshogi_5Board_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6cshogi_7_cshogi_5Board_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_sfen = 0;
  struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_board = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_sfen,&__pyx_n_s_board,0};
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject*)Py_None);
    values[1] = (PyObject *)((struct __pyx_obj_6cshogi_7_cshogi_Board *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sfen);
          if (value) { values[0] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_board);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 282, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_sfen = ((PyObject*)values[0]);
    __pyx_v_board = ((struct __pyx_obj_6cshogi_7_cshogi_Board *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 282, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.Board.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sfen), (&PyString_Type), 1, "sfen", 1))) __PYX_ERR(0, 282, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_board), __pyx_ptype_6cshogi_7_cshogi_Board, 1, "board", 0))) __PYX_ERR(0, 282, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board___cinit__(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), __pyx_v_sfen, __pyx_v_board);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6cshogi_7_cshogi_5Board___cinit__(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyObject *__pyx_v_sfen, struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_board) {
  std::string __pyx_v_sfen_b;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  std::string __pyx_t_3;
  __Board __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cshogi/_cshogi.pyx":284
 * 	def __cinit__(self, str sfen=None, Board board=None):
 * 		cdef string sfen_b
 * 		if sfen:             # <<<<<<<<<<<<<<
 * 			sfen_b = sfen.encode('ascii')
 * 			self.__board = __Board(sfen_b)
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_sfen); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 284, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cshogi/_cshogi.pyx":285
 * 		cdef string sfen_b
 * 		if sfen:
 * 			sfen_b = sfen.encode('ascii')             # <<<<<<<<<<<<<<
 * 			self.__board = __Board(sfen_b)
 * 		elif board is not None:
 */
    __pyx_t_2 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyString_Type_encode, __pyx_v_sfen, __pyx_n_s_ascii); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 285, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_convert_string_from_py_std__in_string(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 285, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_sfen_b = __pyx_t_3;

    /* "cshogi/_cshogi.pyx":286
 * 		if sfen:
 * 			sfen_b = sfen.encode('ascii')
 * 			self.__board = __Board(sfen_b)             # <<<<<<<<<<<<<<
 * 		elif board is not None:
 * 			self.__board = __Board(board.__board)
 */
    try {
      __pyx_t_4 = __Board(__pyx_v_sfen_b);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 286, __pyx_L1_error)
    }
    __pyx_v_self->__pyx___board = __pyx_t_4;

    /* "cshogi/_cshogi.pyx":284
 * 	def __cinit__(self, str sfen=None, Board board=None):
 * 		cdef string sfen_b
 * 		if sfen:             # <<<<<<<<<<<<<<
 * 			sfen_b = sfen.encode('ascii')
 * 			self.__board = __Board(sfen_b)
 */
    goto __pyx_L3;
  }

  /* "cshogi/_cshogi.pyx":287
 * 			sfen_b = sfen.encode('ascii')
 * 			self.__board = __Board(sfen_b)
 * 		elif board is not None:             # <<<<<<<<<<<<<<
 * 			self.__board = __Board(board.__board)
 * 		else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_board) != Py_None);
  __pyx_t_5 = (__pyx_t_1 != 0);
  if (__pyx_t_5) {

    /* "cshogi/_cshogi.pyx":288
 * 			self.__board = __Board(sfen_b)
 * 		elif board is not None:
 * 			self.__board = __Board(board.__board)             # <<<<<<<<<<<<<<
 * 		else:
 * 			self.__board = __Board()
 */
    try {
      __pyx_t_4 = __Board(__pyx_v_board->__pyx___board);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 288, __pyx_L1_error)
    }
    __pyx_v_self->__pyx___board = __pyx_t_4;

    /* "cshogi/_cshogi.pyx":287
 * 			sfen_b = sfen.encode('ascii')
 * 			self.__board = __Board(sfen_b)
 * 		elif board is not None:             # <<<<<<<<<<<<<<
 * 			self.__board = __Board(board.__board)
 * 		else:
 */
    goto __pyx_L3;
  }

  /* "cshogi/_cshogi.pyx":290
 * 			self.__board = __Board(board.__board)
 * 		else:
 * 			self.__board = __Board()             # <<<<<<<<<<<<<<
 * 
 * 	def __copy__(self):
 */
  /*else*/ {
    try {
      __pyx_t_4 = __Board();
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 290, __pyx_L1_error)
    }
    __pyx_v_self->__pyx___board = __pyx_t_4;
  }
  __pyx_L3:;

  /* "cshogi/_cshogi.pyx":282
 * 	cdef __Board __board
 * 
 * 	def __cinit__(self, str sfen=None, Board board=None):             # <<<<<<<<<<<<<<
 * 		cdef string sfen_b
 * 		if sfen:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cshogi._cshogi.Board.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":292
 * 			self.__board = __Board()
 * 
 * 	def __copy__(self):             # <<<<<<<<<<<<<<
 * 		return Board(board=self)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_3__copy__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_3__copy__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__copy__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_2__copy__(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_2__copy__(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__copy__", 0);

  /* "cshogi/_cshogi.pyx":293
 * 
 * 	def __copy__(self):
 * 		return Board(board=self)             # <<<<<<<<<<<<<<
 * 
 * 	def copy(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 293, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_board, ((PyObject *)__pyx_v_self)) < 0) __PYX_ERR(0, 293, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6cshogi_7_cshogi_Board), __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 293, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":292
 * 			self.__board = __Board()
 * 
 * 	def __copy__(self):             # <<<<<<<<<<<<<<
 * 		return Board(board=self)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cshogi._cshogi.Board.__copy__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":295
 * 		return Board(board=self)
 * 
 * 	def copy(self):             # <<<<<<<<<<<<<<
 * 		return Board(board=self)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_5copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_5copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("copy (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_4copy(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_4copy(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("copy", 0);

  /* "cshogi/_cshogi.pyx":296
 * 
 * 	def copy(self):
 * 		return Board(board=self)             # <<<<<<<<<<<<<<
 * 
 * 	def set_sfen(self, str sfen):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 296, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_board, ((PyObject *)__pyx_v_self)) < 0) __PYX_ERR(0, 296, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6cshogi_7_cshogi_Board), __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 296, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":295
 * 		return Board(board=self)
 * 
 * 	def copy(self):             # <<<<<<<<<<<<<<
 * 		return Board(board=self)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cshogi._cshogi.Board.copy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":298
 * 		return Board(board=self)
 * 
 * 	def set_sfen(self, str sfen):             # <<<<<<<<<<<<<<
 * 		cdef string sfen_b = sfen.encode('ascii')
 * 		self.__board.set(sfen_b)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_7set_sfen(PyObject *__pyx_v_self, PyObject *__pyx_v_sfen); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_7set_sfen(PyObject *__pyx_v_self, PyObject *__pyx_v_sfen) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_sfen (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sfen), (&PyString_Type), 1, "sfen", 1))) __PYX_ERR(0, 298, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_6set_sfen(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((PyObject*)__pyx_v_sfen));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_6set_sfen(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyObject *__pyx_v_sfen) {
  std::string __pyx_v_sfen_b;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  std::string __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_sfen", 0);

  /* "cshogi/_cshogi.pyx":299
 * 
 * 	def set_sfen(self, str sfen):
 * 		cdef string sfen_b = sfen.encode('ascii')             # <<<<<<<<<<<<<<
 * 		self.__board.set(sfen_b)
 * 
 */
  __pyx_t_1 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyString_Type_encode, __pyx_v_sfen, __pyx_n_s_ascii); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_convert_string_from_py_std__in_string(__pyx_t_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 299, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_sfen_b = __pyx_t_2;

  /* "cshogi/_cshogi.pyx":300
 * 	def set_sfen(self, str sfen):
 * 		cdef string sfen_b = sfen.encode('ascii')
 * 		self.__board.set(sfen_b)             # <<<<<<<<<<<<<<
 * 
 * 	def set_position(self, str position):
 */
  __pyx_v_self->__pyx___board.set(__pyx_v_sfen_b);

  /* "cshogi/_cshogi.pyx":298
 * 		return Board(board=self)
 * 
 * 	def set_sfen(self, str sfen):             # <<<<<<<<<<<<<<
 * 		cdef string sfen_b = sfen.encode('ascii')
 * 		self.__board.set(sfen_b)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.set_sfen", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":302
 * 		self.__board.set(sfen_b)
 * 
 * 	def set_position(self, str position):             # <<<<<<<<<<<<<<
 * 		cdef string position_b = position.encode('ascii')
 * 		return self.__board.set_position(position_b)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_9set_position(PyObject *__pyx_v_self, PyObject *__pyx_v_position); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_9set_position(PyObject *__pyx_v_self, PyObject *__pyx_v_position) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_position (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_position), (&PyString_Type), 1, "position", 1))) __PYX_ERR(0, 302, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_8set_position(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((PyObject*)__pyx_v_position));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_8set_position(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyObject *__pyx_v_position) {
  std::string __pyx_v_position_b;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  std::string __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_position", 0);

  /* "cshogi/_cshogi.pyx":303
 * 
 * 	def set_position(self, str position):
 * 		cdef string position_b = position.encode('ascii')             # <<<<<<<<<<<<<<
 * 		return self.__board.set_position(position_b)
 * 
 */
  __pyx_t_1 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyString_Type_encode, __pyx_v_position, __pyx_n_s_ascii); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 303, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_convert_string_from_py_std__in_string(__pyx_t_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 303, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_position_b = __pyx_t_2;

  /* "cshogi/_cshogi.pyx":304
 * 	def set_position(self, str position):
 * 		cdef string position_b = position.encode('ascii')
 * 		return self.__board.set_position(position_b)             # <<<<<<<<<<<<<<
 * 
 * 	def set_hcp(self, np.ndarray hcp):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->__pyx___board.set_position(__pyx_v_position_b)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 304, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":302
 * 		self.__board.set(sfen_b)
 * 
 * 	def set_position(self, str position):             # <<<<<<<<<<<<<<
 * 		cdef string position_b = position.encode('ascii')
 * 		return self.__board.set_position(position_b)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.set_position", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":306
 * 		return self.__board.set_position(position_b)
 * 
 * 	def set_hcp(self, np.ndarray hcp):             # <<<<<<<<<<<<<<
 * 		return self.__board.set_hcp(hcp.data)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_11set_hcp(PyObject *__pyx_v_self, PyObject *__pyx_v_hcp); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_11set_hcp(PyObject *__pyx_v_self, PyObject *__pyx_v_hcp) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_hcp (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_hcp), __pyx_ptype_5numpy_ndarray, 1, "hcp", 0))) __PYX_ERR(0, 306, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_10set_hcp(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((PyArrayObject *)__pyx_v_hcp));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_10set_hcp(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyArrayObject *__pyx_v_hcp) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_hcp", 0);

  /* "cshogi/_cshogi.pyx":307
 * 
 * 	def set_hcp(self, np.ndarray hcp):
 * 		return self.__board.set_hcp(hcp.data)             # <<<<<<<<<<<<<<
 * 
 * 	def set_psfen(self, np.ndarray psfen):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->__pyx___board.set_hcp(__pyx_v_hcp->data)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":306
 * 		return self.__board.set_position(position_b)
 * 
 * 	def set_hcp(self, np.ndarray hcp):             # <<<<<<<<<<<<<<
 * 		return self.__board.set_hcp(hcp.data)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.set_hcp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":309
 * 		return self.__board.set_hcp(hcp.data)
 * 
 * 	def set_psfen(self, np.ndarray psfen):             # <<<<<<<<<<<<<<
 * 		return self.__board.set_psfen(psfen.data)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_13set_psfen(PyObject *__pyx_v_self, PyObject *__pyx_v_psfen); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_13set_psfen(PyObject *__pyx_v_self, PyObject *__pyx_v_psfen) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_psfen (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_psfen), __pyx_ptype_5numpy_ndarray, 1, "psfen", 0))) __PYX_ERR(0, 309, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_12set_psfen(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((PyArrayObject *)__pyx_v_psfen));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_12set_psfen(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyArrayObject *__pyx_v_psfen) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_psfen", 0);

  /* "cshogi/_cshogi.pyx":310
 * 
 * 	def set_psfen(self, np.ndarray psfen):
 * 		return self.__board.set_psfen(psfen.data)             # <<<<<<<<<<<<<<
 * 
 * 	def reset(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->__pyx___board.set_psfen(__pyx_v_psfen->data)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 310, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":309
 * 		return self.__board.set_hcp(hcp.data)
 * 
 * 	def set_psfen(self, np.ndarray psfen):             # <<<<<<<<<<<<<<
 * 		return self.__board.set_psfen(psfen.data)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.set_psfen", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":312
 * 		return self.__board.set_psfen(psfen.data)
 * 
 * 	def reset(self):             # <<<<<<<<<<<<<<
 * 		self.__board.reset()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_15reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_15reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_14reset(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_14reset(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset", 0);

  /* "cshogi/_cshogi.pyx":313
 * 
 * 	def reset(self):
 * 		self.__board.reset()             # <<<<<<<<<<<<<<
 * 
 * 	def __repr__(self):
 */
  __pyx_v_self->__pyx___board.reset();

  /* "cshogi/_cshogi.pyx":312
 * 		return self.__board.set_psfen(psfen.data)
 * 
 * 	def reset(self):             # <<<<<<<<<<<<<<
 * 		self.__board.reset()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":315
 * 		self.__board.reset()
 * 
 * 	def __repr__(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.dump().decode('ascii')
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_17__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_17__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_16__repr__(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_16__repr__(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "cshogi/_cshogi.pyx":316
 * 
 * 	def __repr__(self):
 * 		return self.__board.dump().decode('ascii')             # <<<<<<<<<<<<<<
 * 
 * 	def push(self, int move):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_decode_cpp_string(__pyx_v_self->__pyx___board.dump(), 0, PY_SSIZE_T_MAX, NULL, NULL, PyUnicode_DecodeASCII); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 316, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":315
 * 		self.__board.reset()
 * 
 * 	def __repr__(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.dump().decode('ascii')
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":318
 * 		return self.__board.dump().decode('ascii')
 * 
 * 	def push(self, int move):             # <<<<<<<<<<<<<<
 * 		self.__board.push(move)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_19push(PyObject *__pyx_v_self, PyObject *__pyx_arg_move); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_19push(PyObject *__pyx_v_self, PyObject *__pyx_arg_move) {
  int __pyx_v_move;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("push (wrapper)", 0);
  assert(__pyx_arg_move); {
    __pyx_v_move = __Pyx_PyInt_As_int(__pyx_arg_move); if (unlikely((__pyx_v_move == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 318, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.Board.push", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_18push(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((int)__pyx_v_move));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_18push(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, int __pyx_v_move) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("push", 0);

  /* "cshogi/_cshogi.pyx":319
 * 
 * 	def push(self, int move):
 * 		self.__board.push(move)             # <<<<<<<<<<<<<<
 * 
 * 	def push_usi(self, str usi):
 */
  __pyx_v_self->__pyx___board.push(__pyx_v_move);

  /* "cshogi/_cshogi.pyx":318
 * 		return self.__board.dump().decode('ascii')
 * 
 * 	def push(self, int move):             # <<<<<<<<<<<<<<
 * 		self.__board.push(move)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":321
 * 		self.__board.push(move)
 * 
 * 	def push_usi(self, str usi):             # <<<<<<<<<<<<<<
 * 		cdef string usi_b = usi.encode('ascii')
 * 		cdef int move = self.__board.move_from_usi(usi_b)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_21push_usi(PyObject *__pyx_v_self, PyObject *__pyx_v_usi); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_21push_usi(PyObject *__pyx_v_self, PyObject *__pyx_v_usi) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("push_usi (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_usi), (&PyString_Type), 1, "usi", 1))) __PYX_ERR(0, 321, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_20push_usi(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((PyObject*)__pyx_v_usi));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_20push_usi(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyObject *__pyx_v_usi) {
  std::string __pyx_v_usi_b;
  int __pyx_v_move;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  std::string __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("push_usi", 0);

  /* "cshogi/_cshogi.pyx":322
 * 
 * 	def push_usi(self, str usi):
 * 		cdef string usi_b = usi.encode('ascii')             # <<<<<<<<<<<<<<
 * 		cdef int move = self.__board.move_from_usi(usi_b)
 * 		if move != 0:
 */
  __pyx_t_1 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyString_Type_encode, __pyx_v_usi, __pyx_n_s_ascii); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 322, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_convert_string_from_py_std__in_string(__pyx_t_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 322, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_usi_b = __pyx_t_2;

  /* "cshogi/_cshogi.pyx":323
 * 	def push_usi(self, str usi):
 * 		cdef string usi_b = usi.encode('ascii')
 * 		cdef int move = self.__board.move_from_usi(usi_b)             # <<<<<<<<<<<<<<
 * 		if move != 0:
 * 			self.__board.push(move)
 */
  __pyx_v_move = __pyx_v_self->__pyx___board.move_from_usi(__pyx_v_usi_b);

  /* "cshogi/_cshogi.pyx":324
 * 		cdef string usi_b = usi.encode('ascii')
 * 		cdef int move = self.__board.move_from_usi(usi_b)
 * 		if move != 0:             # <<<<<<<<<<<<<<
 * 			self.__board.push(move)
 * 		return move
 */
  __pyx_t_3 = ((__pyx_v_move != 0) != 0);
  if (__pyx_t_3) {

    /* "cshogi/_cshogi.pyx":325
 * 		cdef int move = self.__board.move_from_usi(usi_b)
 * 		if move != 0:
 * 			self.__board.push(move)             # <<<<<<<<<<<<<<
 * 		return move
 * 
 */
    __pyx_v_self->__pyx___board.push(__pyx_v_move);

    /* "cshogi/_cshogi.pyx":324
 * 		cdef string usi_b = usi.encode('ascii')
 * 		cdef int move = self.__board.move_from_usi(usi_b)
 * 		if move != 0:             # <<<<<<<<<<<<<<
 * 			self.__board.push(move)
 * 		return move
 */
  }

  /* "cshogi/_cshogi.pyx":326
 * 		if move != 0:
 * 			self.__board.push(move)
 * 		return move             # <<<<<<<<<<<<<<
 * 
 * 	def push_csa(self, str csa):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_move); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 326, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":321
 * 		self.__board.push(move)
 * 
 * 	def push_usi(self, str usi):             # <<<<<<<<<<<<<<
 * 		cdef string usi_b = usi.encode('ascii')
 * 		cdef int move = self.__board.move_from_usi(usi_b)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.push_usi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":328
 * 		return move
 * 
 * 	def push_csa(self, str csa):             # <<<<<<<<<<<<<<
 * 		cdef string csa_b = csa.encode('ascii')
 * 		cdef int move = self.__board.move_from_csa(csa_b)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_23push_csa(PyObject *__pyx_v_self, PyObject *__pyx_v_csa); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_23push_csa(PyObject *__pyx_v_self, PyObject *__pyx_v_csa) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("push_csa (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_csa), (&PyString_Type), 1, "csa", 1))) __PYX_ERR(0, 328, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_22push_csa(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((PyObject*)__pyx_v_csa));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_22push_csa(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyObject *__pyx_v_csa) {
  std::string __pyx_v_csa_b;
  int __pyx_v_move;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  std::string __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("push_csa", 0);

  /* "cshogi/_cshogi.pyx":329
 * 
 * 	def push_csa(self, str csa):
 * 		cdef string csa_b = csa.encode('ascii')             # <<<<<<<<<<<<<<
 * 		cdef int move = self.__board.move_from_csa(csa_b)
 * 		if move != 0:
 */
  __pyx_t_1 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyString_Type_encode, __pyx_v_csa, __pyx_n_s_ascii); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 329, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_convert_string_from_py_std__in_string(__pyx_t_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 329, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_csa_b = __pyx_t_2;

  /* "cshogi/_cshogi.pyx":330
 * 	def push_csa(self, str csa):
 * 		cdef string csa_b = csa.encode('ascii')
 * 		cdef int move = self.__board.move_from_csa(csa_b)             # <<<<<<<<<<<<<<
 * 		if move != 0:
 * 			self.__board.push(move)
 */
  __pyx_v_move = __pyx_v_self->__pyx___board.move_from_csa(__pyx_v_csa_b);

  /* "cshogi/_cshogi.pyx":331
 * 		cdef string csa_b = csa.encode('ascii')
 * 		cdef int move = self.__board.move_from_csa(csa_b)
 * 		if move != 0:             # <<<<<<<<<<<<<<
 * 			self.__board.push(move)
 * 		return move
 */
  __pyx_t_3 = ((__pyx_v_move != 0) != 0);
  if (__pyx_t_3) {

    /* "cshogi/_cshogi.pyx":332
 * 		cdef int move = self.__board.move_from_csa(csa_b)
 * 		if move != 0:
 * 			self.__board.push(move)             # <<<<<<<<<<<<<<
 * 		return move
 * 
 */
    __pyx_v_self->__pyx___board.push(__pyx_v_move);

    /* "cshogi/_cshogi.pyx":331
 * 		cdef string csa_b = csa.encode('ascii')
 * 		cdef int move = self.__board.move_from_csa(csa_b)
 * 		if move != 0:             # <<<<<<<<<<<<<<
 * 			self.__board.push(move)
 * 		return move
 */
  }

  /* "cshogi/_cshogi.pyx":333
 * 		if move != 0:
 * 			self.__board.push(move)
 * 		return move             # <<<<<<<<<<<<<<
 * 
 * 	def push_move16(self, unsigned short move16):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_move); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":328
 * 		return move
 * 
 * 	def push_csa(self, str csa):             # <<<<<<<<<<<<<<
 * 		cdef string csa_b = csa.encode('ascii')
 * 		cdef int move = self.__board.move_from_csa(csa_b)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.push_csa", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":335
 * 		return move
 * 
 * 	def push_move16(self, unsigned short move16):             # <<<<<<<<<<<<<<
 * 		cdef int move = self.__board.move_from_move16(move16)
 * 		self.__board.push(move)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_25push_move16(PyObject *__pyx_v_self, PyObject *__pyx_arg_move16); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_25push_move16(PyObject *__pyx_v_self, PyObject *__pyx_arg_move16) {
  unsigned short __pyx_v_move16;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("push_move16 (wrapper)", 0);
  assert(__pyx_arg_move16); {
    __pyx_v_move16 = __Pyx_PyInt_As_unsigned_short(__pyx_arg_move16); if (unlikely((__pyx_v_move16 == (unsigned short)-1) && PyErr_Occurred())) __PYX_ERR(0, 335, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.Board.push_move16", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_24push_move16(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((unsigned short)__pyx_v_move16));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_24push_move16(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, unsigned short __pyx_v_move16) {
  int __pyx_v_move;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("push_move16", 0);

  /* "cshogi/_cshogi.pyx":336
 * 
 * 	def push_move16(self, unsigned short move16):
 * 		cdef int move = self.__board.move_from_move16(move16)             # <<<<<<<<<<<<<<
 * 		self.__board.push(move)
 * 		return move
 */
  __pyx_v_move = __pyx_v_self->__pyx___board.move_from_move16(__pyx_v_move16);

  /* "cshogi/_cshogi.pyx":337
 * 	def push_move16(self, unsigned short move16):
 * 		cdef int move = self.__board.move_from_move16(move16)
 * 		self.__board.push(move)             # <<<<<<<<<<<<<<
 * 		return move
 * 
 */
  __pyx_v_self->__pyx___board.push(__pyx_v_move);

  /* "cshogi/_cshogi.pyx":338
 * 		cdef int move = self.__board.move_from_move16(move16)
 * 		self.__board.push(move)
 * 		return move             # <<<<<<<<<<<<<<
 * 
 * 	def push_psv(self, unsigned short move16):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_move); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 338, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":335
 * 		return move
 * 
 * 	def push_move16(self, unsigned short move16):             # <<<<<<<<<<<<<<
 * 		cdef int move = self.__board.move_from_move16(move16)
 * 		self.__board.push(move)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.push_move16", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":340
 * 		return move
 * 
 * 	def push_psv(self, unsigned short move16):             # <<<<<<<<<<<<<<
 * 		cdef int move = self.__board.move_from_psv(move16)
 * 		self.__board.push(move)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_27push_psv(PyObject *__pyx_v_self, PyObject *__pyx_arg_move16); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_27push_psv(PyObject *__pyx_v_self, PyObject *__pyx_arg_move16) {
  unsigned short __pyx_v_move16;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("push_psv (wrapper)", 0);
  assert(__pyx_arg_move16); {
    __pyx_v_move16 = __Pyx_PyInt_As_unsigned_short(__pyx_arg_move16); if (unlikely((__pyx_v_move16 == (unsigned short)-1) && PyErr_Occurred())) __PYX_ERR(0, 340, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.Board.push_psv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_26push_psv(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((unsigned short)__pyx_v_move16));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_26push_psv(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, unsigned short __pyx_v_move16) {
  int __pyx_v_move;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("push_psv", 0);

  /* "cshogi/_cshogi.pyx":341
 * 
 * 	def push_psv(self, unsigned short move16):
 * 		cdef int move = self.__board.move_from_psv(move16)             # <<<<<<<<<<<<<<
 * 		self.__board.push(move)
 * 		return move
 */
  __pyx_v_move = __pyx_v_self->__pyx___board.move_from_psv(__pyx_v_move16);

  /* "cshogi/_cshogi.pyx":342
 * 	def push_psv(self, unsigned short move16):
 * 		cdef int move = self.__board.move_from_psv(move16)
 * 		self.__board.push(move)             # <<<<<<<<<<<<<<
 * 		return move
 * 
 */
  __pyx_v_self->__pyx___board.push(__pyx_v_move);

  /* "cshogi/_cshogi.pyx":343
 * 		cdef int move = self.__board.move_from_psv(move16)
 * 		self.__board.push(move)
 * 		return move             # <<<<<<<<<<<<<<
 * 
 * 	def push_pass(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_move); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":340
 * 		return move
 * 
 * 	def push_psv(self, unsigned short move16):             # <<<<<<<<<<<<<<
 * 		cdef int move = self.__board.move_from_psv(move16)
 * 		self.__board.push(move)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.push_psv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":345
 * 		return move
 * 
 * 	def push_pass(self):             # <<<<<<<<<<<<<<
 * 		assert not self.is_check()
 * 		return self.__board.push_pass()
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_29push_pass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_29push_pass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("push_pass (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_28push_pass(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_28push_pass(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("push_pass", 0);

  /* "cshogi/_cshogi.pyx":346
 * 
 * 	def push_pass(self):
 * 		assert not self.is_check()             # <<<<<<<<<<<<<<
 * 		return self.__board.push_pass()
 * 
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_is_check); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 346, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 346, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 346, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!((!__pyx_t_4) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 346, __pyx_L1_error)
    }
  }
  #endif

  /* "cshogi/_cshogi.pyx":347
 * 	def push_pass(self):
 * 		assert not self.is_check()
 * 		return self.__board.push_pass()             # <<<<<<<<<<<<<<
 * 
 * 	def pop_pass(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_v_self->__pyx___board.push_pass()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":345
 * 		return move
 * 
 * 	def push_pass(self):             # <<<<<<<<<<<<<<
 * 		assert not self.is_check()
 * 		return self.__board.push_pass()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cshogi._cshogi.Board.push_pass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":349
 * 		return self.__board.push_pass()
 * 
 * 	def pop_pass(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.pop_pass()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_31pop_pass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_31pop_pass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pop_pass (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_30pop_pass(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_30pop_pass(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pop_pass", 0);

  /* "cshogi/_cshogi.pyx":350
 * 
 * 	def pop_pass(self):
 * 		return self.__board.pop_pass()             # <<<<<<<<<<<<<<
 * 
 * 	def pop(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_v_self->__pyx___board.pop_pass()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":349
 * 		return self.__board.push_pass()
 * 
 * 	def pop_pass(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.pop_pass()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.pop_pass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":352
 * 		return self.__board.pop_pass()
 * 
 * 	def pop(self):             # <<<<<<<<<<<<<<
 * 		self.__board.pop()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_33pop(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_33pop(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pop (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_32pop(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_32pop(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pop", 0);

  /* "cshogi/_cshogi.pyx":353
 * 
 * 	def pop(self):
 * 		self.__board.pop()             # <<<<<<<<<<<<<<
 * 
 * 	def peek(self):
 */
  __pyx_v_self->__pyx___board.pop();

  /* "cshogi/_cshogi.pyx":352
 * 		return self.__board.pop_pass()
 * 
 * 	def pop(self):             # <<<<<<<<<<<<<<
 * 		self.__board.pop()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":355
 * 		self.__board.pop()
 * 
 * 	def peek(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.peek()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_35peek(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_35peek(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("peek (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_34peek(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_34peek(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("peek", 0);

  /* "cshogi/_cshogi.pyx":356
 * 
 * 	def peek(self):
 * 		return self.__board.peek()             # <<<<<<<<<<<<<<
 * 
 * 	def is_game_over(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->__pyx___board.peek()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 356, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":355
 * 		self.__board.pop()
 * 
 * 	def peek(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.peek()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.peek", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":358
 * 		return self.__board.peek()
 * 
 * 	def is_game_over(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.is_game_over()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_37is_game_over(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_37is_game_over(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_game_over (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_36is_game_over(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_36is_game_over(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_game_over", 0);

  /* "cshogi/_cshogi.pyx":359
 * 
 * 	def is_game_over(self):
 * 		return self.__board.is_game_over()             # <<<<<<<<<<<<<<
 * 
 * 	def is_draw(self, ply=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->__pyx___board.is_game_over()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 359, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":358
 * 		return self.__board.peek()
 * 
 * 	def is_game_over(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.is_game_over()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.is_game_over", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":361
 * 		return self.__board.is_game_over()
 * 
 * 	def is_draw(self, ply=None):             # <<<<<<<<<<<<<<
 * 		cdef int _ply
 * 		if ply:
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_39is_draw(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_39is_draw(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ply = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_draw (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ply,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ply);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "is_draw") < 0)) __PYX_ERR(0, 361, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_ply = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("is_draw", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 361, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.Board.is_draw", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_38is_draw(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), __pyx_v_ply);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_38is_draw(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyObject *__pyx_v_ply) {
  int __pyx_v__ply;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_draw", 0);

  /* "cshogi/_cshogi.pyx":363
 * 	def is_draw(self, ply=None):
 * 		cdef int _ply
 * 		if ply:             # <<<<<<<<<<<<<<
 * 			_ply = ply
 * 		else:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_ply); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 363, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cshogi/_cshogi.pyx":364
 * 		cdef int _ply
 * 		if ply:
 * 			_ply = ply             # <<<<<<<<<<<<<<
 * 		else:
 * 			_ply = 2147483647
 */
    __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_v_ply); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 364, __pyx_L1_error)
    __pyx_v__ply = __pyx_t_2;

    /* "cshogi/_cshogi.pyx":363
 * 	def is_draw(self, ply=None):
 * 		cdef int _ply
 * 		if ply:             # <<<<<<<<<<<<<<
 * 			_ply = ply
 * 		else:
 */
    goto __pyx_L3;
  }

  /* "cshogi/_cshogi.pyx":366
 * 			_ply = ply
 * 		else:
 * 			_ply = 2147483647             # <<<<<<<<<<<<<<
 * 		return self.__board.isDraw(_ply)
 * 
 */
  /*else*/ {
    __pyx_v__ply = 0x7FFFFFFF;
  }
  __pyx_L3:;

  /* "cshogi/_cshogi.pyx":367
 * 		else:
 * 			_ply = 2147483647
 * 		return self.__board.isDraw(_ply)             # <<<<<<<<<<<<<<
 * 
 * 	def move(self, int from_square, int to_square, bool promotion):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->__pyx___board.isDraw(__pyx_v__ply)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 367, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":361
 * 		return self.__board.is_game_over()
 * 
 * 	def is_draw(self, ply=None):             # <<<<<<<<<<<<<<
 * 		cdef int _ply
 * 		if ply:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cshogi._cshogi.Board.is_draw", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":369
 * 		return self.__board.isDraw(_ply)
 * 
 * 	def move(self, int from_square, int to_square, bool promotion):             # <<<<<<<<<<<<<<
 * 		return self.__board.move(from_square, to_square, promotion)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_41move(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_41move(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_from_square;
  int __pyx_v_to_square;
  bool __pyx_v_promotion;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_from_square,&__pyx_n_s_to_square,&__pyx_n_s_promotion,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_from_square)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_to_square)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("move", 1, 3, 3, 1); __PYX_ERR(0, 369, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_promotion)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("move", 1, 3, 3, 2); __PYX_ERR(0, 369, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "move") < 0)) __PYX_ERR(0, 369, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_from_square = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_from_square == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 369, __pyx_L3_error)
    __pyx_v_to_square = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_to_square == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 369, __pyx_L3_error)
    __pyx_v_promotion = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_promotion == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 369, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 369, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.Board.move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_40move(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), __pyx_v_from_square, __pyx_v_to_square, __pyx_v_promotion);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_40move(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, int __pyx_v_from_square, int __pyx_v_to_square, bool __pyx_v_promotion) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move", 0);

  /* "cshogi/_cshogi.pyx":370
 * 
 * 	def move(self, int from_square, int to_square, bool promotion):
 * 		return self.__board.move(from_square, to_square, promotion)             # <<<<<<<<<<<<<<
 * 
 * 	def drop_move(self, int to_square, int drop_piece_type):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->__pyx___board.move(__pyx_v_from_square, __pyx_v_to_square, __pyx_v_promotion)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 370, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":369
 * 		return self.__board.isDraw(_ply)
 * 
 * 	def move(self, int from_square, int to_square, bool promotion):             # <<<<<<<<<<<<<<
 * 		return self.__board.move(from_square, to_square, promotion)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":372
 * 		return self.__board.move(from_square, to_square, promotion)
 * 
 * 	def drop_move(self, int to_square, int drop_piece_type):             # <<<<<<<<<<<<<<
 * 		return self.__board.drop_move(to_square, drop_piece_type)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_43drop_move(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_43drop_move(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_to_square;
  int __pyx_v_drop_piece_type;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("drop_move (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_to_square,&__pyx_n_s_drop_piece_type,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_to_square)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_drop_piece_type)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("drop_move", 1, 2, 2, 1); __PYX_ERR(0, 372, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "drop_move") < 0)) __PYX_ERR(0, 372, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_to_square = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_to_square == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 372, __pyx_L3_error)
    __pyx_v_drop_piece_type = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_drop_piece_type == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 372, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("drop_move", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 372, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.Board.drop_move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_42drop_move(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), __pyx_v_to_square, __pyx_v_drop_piece_type);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_42drop_move(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, int __pyx_v_to_square, int __pyx_v_drop_piece_type) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("drop_move", 0);

  /* "cshogi/_cshogi.pyx":373
 * 
 * 	def drop_move(self, int to_square, int drop_piece_type):
 * 		return self.__board.drop_move(to_square, drop_piece_type)             # <<<<<<<<<<<<<<
 * 
 * 	def move_from_usi(self, str usi):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->__pyx___board.drop_move(__pyx_v_to_square, __pyx_v_drop_piece_type)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 373, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":372
 * 		return self.__board.move(from_square, to_square, promotion)
 * 
 * 	def drop_move(self, int to_square, int drop_piece_type):             # <<<<<<<<<<<<<<
 * 		return self.__board.drop_move(to_square, drop_piece_type)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.drop_move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":375
 * 		return self.__board.drop_move(to_square, drop_piece_type)
 * 
 * 	def move_from_usi(self, str usi):             # <<<<<<<<<<<<<<
 * 		cdef string usi_b = usi.encode('ascii')
 * 		return self.__board.move_from_usi(usi_b)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_45move_from_usi(PyObject *__pyx_v_self, PyObject *__pyx_v_usi); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_45move_from_usi(PyObject *__pyx_v_self, PyObject *__pyx_v_usi) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_from_usi (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_usi), (&PyString_Type), 1, "usi", 1))) __PYX_ERR(0, 375, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_44move_from_usi(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((PyObject*)__pyx_v_usi));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_44move_from_usi(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyObject *__pyx_v_usi) {
  std::string __pyx_v_usi_b;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  std::string __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_from_usi", 0);

  /* "cshogi/_cshogi.pyx":376
 * 
 * 	def move_from_usi(self, str usi):
 * 		cdef string usi_b = usi.encode('ascii')             # <<<<<<<<<<<<<<
 * 		return self.__board.move_from_usi(usi_b)
 * 
 */
  __pyx_t_1 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyString_Type_encode, __pyx_v_usi, __pyx_n_s_ascii); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 376, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_convert_string_from_py_std__in_string(__pyx_t_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 376, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_usi_b = __pyx_t_2;

  /* "cshogi/_cshogi.pyx":377
 * 	def move_from_usi(self, str usi):
 * 		cdef string usi_b = usi.encode('ascii')
 * 		return self.__board.move_from_usi(usi_b)             # <<<<<<<<<<<<<<
 * 
 * 	def move_from_csa(self, str csa):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->__pyx___board.move_from_usi(__pyx_v_usi_b)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 377, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":375
 * 		return self.__board.drop_move(to_square, drop_piece_type)
 * 
 * 	def move_from_usi(self, str usi):             # <<<<<<<<<<<<<<
 * 		cdef string usi_b = usi.encode('ascii')
 * 		return self.__board.move_from_usi(usi_b)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.move_from_usi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":379
 * 		return self.__board.move_from_usi(usi_b)
 * 
 * 	def move_from_csa(self, str csa):             # <<<<<<<<<<<<<<
 * 		cdef string csa_b = csa.encode('ascii')
 * 		return self.__board.move_from_csa(csa_b)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_47move_from_csa(PyObject *__pyx_v_self, PyObject *__pyx_v_csa); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_47move_from_csa(PyObject *__pyx_v_self, PyObject *__pyx_v_csa) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_from_csa (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_csa), (&PyString_Type), 1, "csa", 1))) __PYX_ERR(0, 379, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_46move_from_csa(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((PyObject*)__pyx_v_csa));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_46move_from_csa(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyObject *__pyx_v_csa) {
  std::string __pyx_v_csa_b;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  std::string __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_from_csa", 0);

  /* "cshogi/_cshogi.pyx":380
 * 
 * 	def move_from_csa(self, str csa):
 * 		cdef string csa_b = csa.encode('ascii')             # <<<<<<<<<<<<<<
 * 		return self.__board.move_from_csa(csa_b)
 * 
 */
  __pyx_t_1 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyString_Type_encode, __pyx_v_csa, __pyx_n_s_ascii); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_convert_string_from_py_std__in_string(__pyx_t_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 380, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_csa_b = __pyx_t_2;

  /* "cshogi/_cshogi.pyx":381
 * 	def move_from_csa(self, str csa):
 * 		cdef string csa_b = csa.encode('ascii')
 * 		return self.__board.move_from_csa(csa_b)             # <<<<<<<<<<<<<<
 * 
 * 	def move_from_move16(self, unsigned short move16):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->__pyx___board.move_from_csa(__pyx_v_csa_b)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 381, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":379
 * 		return self.__board.move_from_usi(usi_b)
 * 
 * 	def move_from_csa(self, str csa):             # <<<<<<<<<<<<<<
 * 		cdef string csa_b = csa.encode('ascii')
 * 		return self.__board.move_from_csa(csa_b)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.move_from_csa", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":383
 * 		return self.__board.move_from_csa(csa_b)
 * 
 * 	def move_from_move16(self, unsigned short move16):             # <<<<<<<<<<<<<<
 * 		return self.__board.move_from_move16(move16)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_49move_from_move16(PyObject *__pyx_v_self, PyObject *__pyx_arg_move16); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_49move_from_move16(PyObject *__pyx_v_self, PyObject *__pyx_arg_move16) {
  unsigned short __pyx_v_move16;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_from_move16 (wrapper)", 0);
  assert(__pyx_arg_move16); {
    __pyx_v_move16 = __Pyx_PyInt_As_unsigned_short(__pyx_arg_move16); if (unlikely((__pyx_v_move16 == (unsigned short)-1) && PyErr_Occurred())) __PYX_ERR(0, 383, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.Board.move_from_move16", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_48move_from_move16(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((unsigned short)__pyx_v_move16));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_48move_from_move16(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, unsigned short __pyx_v_move16) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_from_move16", 0);

  /* "cshogi/_cshogi.pyx":384
 * 
 * 	def move_from_move16(self, unsigned short move16):
 * 		return self.__board.move_from_move16(move16)             # <<<<<<<<<<<<<<
 * 
 * 	def move_from_psv(self, unsigned short move16):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->__pyx___board.move_from_move16(__pyx_v_move16)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 384, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":383
 * 		return self.__board.move_from_csa(csa_b)
 * 
 * 	def move_from_move16(self, unsigned short move16):             # <<<<<<<<<<<<<<
 * 		return self.__board.move_from_move16(move16)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.move_from_move16", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":386
 * 		return self.__board.move_from_move16(move16)
 * 
 * 	def move_from_psv(self, unsigned short move16):             # <<<<<<<<<<<<<<
 * 		return self.__board.move_from_psv(move16)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_51move_from_psv(PyObject *__pyx_v_self, PyObject *__pyx_arg_move16); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_51move_from_psv(PyObject *__pyx_v_self, PyObject *__pyx_arg_move16) {
  unsigned short __pyx_v_move16;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_from_psv (wrapper)", 0);
  assert(__pyx_arg_move16); {
    __pyx_v_move16 = __Pyx_PyInt_As_unsigned_short(__pyx_arg_move16); if (unlikely((__pyx_v_move16 == (unsigned short)-1) && PyErr_Occurred())) __PYX_ERR(0, 386, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.Board.move_from_psv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_50move_from_psv(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((unsigned short)__pyx_v_move16));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_50move_from_psv(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, unsigned short __pyx_v_move16) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_from_psv", 0);

  /* "cshogi/_cshogi.pyx":387
 * 
 * 	def move_from_psv(self, unsigned short move16):
 * 		return self.__board.move_from_psv(move16)             # <<<<<<<<<<<<<<
 * 
 * 	@property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->__pyx___board.move_from_psv(__pyx_v_move16)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":386
 * 		return self.__board.move_from_move16(move16)
 * 
 * 	def move_from_psv(self, unsigned short move16):             # <<<<<<<<<<<<<<
 * 		return self.__board.move_from_psv(move16)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.move_from_psv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":390
 * 
 * 	@property
 * 	def legal_moves(self):             # <<<<<<<<<<<<<<
 * 		return LegalMoveList(self)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_11legal_moves_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_11legal_moves_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_11legal_moves___get__(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_11legal_moves___get__(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cshogi/_cshogi.pyx":391
 * 	@property
 * 	def legal_moves(self):
 * 		return LegalMoveList(self)             # <<<<<<<<<<<<<<
 * 
 * 	@property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_6cshogi_7_cshogi_LegalMoveList), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 391, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":390
 * 
 * 	@property
 * 	def legal_moves(self):             # <<<<<<<<<<<<<<
 * 		return LegalMoveList(self)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.legal_moves.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":394
 * 
 * 	@property
 * 	def turn(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.turn()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_4turn_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_4turn_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_4turn___get__(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_4turn___get__(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cshogi/_cshogi.pyx":395
 * 	@property
 * 	def turn(self):
 * 		return self.__board.turn()             # <<<<<<<<<<<<<<
 * 
 * 	@property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->__pyx___board.turn()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":394
 * 
 * 	@property
 * 	def turn(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.turn()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.turn.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":398
 * 
 * 	@property
 * 	def move_number(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.ply()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_11move_number_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_11move_number_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_11move_number___get__(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_11move_number___get__(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cshogi/_cshogi.pyx":399
 * 	@property
 * 	def move_number(self):
 * 		return self.__board.ply()             # <<<<<<<<<<<<<<
 * 
 * 	def sfen(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->__pyx___board.ply()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":398
 * 
 * 	@property
 * 	def move_number(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.ply()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.move_number.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":401
 * 		return self.__board.ply()
 * 
 * 	def sfen(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.toSFEN().decode('ascii')
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_53sfen(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_53sfen(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sfen (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_52sfen(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_52sfen(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("sfen", 0);

  /* "cshogi/_cshogi.pyx":402
 * 
 * 	def sfen(self):
 * 		return self.__board.toSFEN().decode('ascii')             # <<<<<<<<<<<<<<
 * 
 * 	def csa_pos(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_decode_cpp_string(__pyx_v_self->__pyx___board.toSFEN(), 0, PY_SSIZE_T_MAX, NULL, NULL, PyUnicode_DecodeASCII); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 402, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":401
 * 		return self.__board.ply()
 * 
 * 	def sfen(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.toSFEN().decode('ascii')
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.sfen", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":404
 * 		return self.__board.toSFEN().decode('ascii')
 * 
 * 	def csa_pos(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.toCSAPos().decode('ascii')
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_55csa_pos(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_55csa_pos(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("csa_pos (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_54csa_pos(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_54csa_pos(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("csa_pos", 0);

  /* "cshogi/_cshogi.pyx":405
 * 
 * 	def csa_pos(self):
 * 		return self.__board.toCSAPos().decode('ascii')             # <<<<<<<<<<<<<<
 * 
 * 	def to_hcp(self, np.ndarray hcp):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_decode_cpp_string(__pyx_v_self->__pyx___board.toCSAPos(), 0, PY_SSIZE_T_MAX, NULL, NULL, PyUnicode_DecodeASCII); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":404
 * 		return self.__board.toSFEN().decode('ascii')
 * 
 * 	def csa_pos(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.toCSAPos().decode('ascii')
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.csa_pos", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":407
 * 		return self.__board.toCSAPos().decode('ascii')
 * 
 * 	def to_hcp(self, np.ndarray hcp):             # <<<<<<<<<<<<<<
 * 		return self.__board.toHuffmanCodedPos(hcp.data)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_57to_hcp(PyObject *__pyx_v_self, PyObject *__pyx_v_hcp); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_57to_hcp(PyObject *__pyx_v_self, PyObject *__pyx_v_hcp) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("to_hcp (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_hcp), __pyx_ptype_5numpy_ndarray, 1, "hcp", 0))) __PYX_ERR(0, 407, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_56to_hcp(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((PyArrayObject *)__pyx_v_hcp));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_56to_hcp(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyArrayObject *__pyx_v_hcp) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("to_hcp", 0);

  /* "cshogi/_cshogi.pyx":408
 * 
 * 	def to_hcp(self, np.ndarray hcp):
 * 		return self.__board.toHuffmanCodedPos(hcp.data)             # <<<<<<<<<<<<<<
 * 
 * 	def to_psfen(self, np.ndarray hcp):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_v_self->__pyx___board.toHuffmanCodedPos(__pyx_v_hcp->data)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 408, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":407
 * 		return self.__board.toCSAPos().decode('ascii')
 * 
 * 	def to_hcp(self, np.ndarray hcp):             # <<<<<<<<<<<<<<
 * 		return self.__board.toHuffmanCodedPos(hcp.data)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.to_hcp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":410
 * 		return self.__board.toHuffmanCodedPos(hcp.data)
 * 
 * 	def to_psfen(self, np.ndarray hcp):             # <<<<<<<<<<<<<<
 * 		return self.__board.toPackedSfen(hcp.data)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_59to_psfen(PyObject *__pyx_v_self, PyObject *__pyx_v_hcp); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_59to_psfen(PyObject *__pyx_v_self, PyObject *__pyx_v_hcp) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("to_psfen (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_hcp), __pyx_ptype_5numpy_ndarray, 1, "hcp", 0))) __PYX_ERR(0, 410, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_58to_psfen(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((PyArrayObject *)__pyx_v_hcp));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_58to_psfen(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyArrayObject *__pyx_v_hcp) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("to_psfen", 0);

  /* "cshogi/_cshogi.pyx":411
 * 
 * 	def to_psfen(self, np.ndarray hcp):
 * 		return self.__board.toPackedSfen(hcp.data)             # <<<<<<<<<<<<<<
 * 
 * 	def piece(self, int sq):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_v_self->__pyx___board.toPackedSfen(__pyx_v_hcp->data)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":410
 * 		return self.__board.toHuffmanCodedPos(hcp.data)
 * 
 * 	def to_psfen(self, np.ndarray hcp):             # <<<<<<<<<<<<<<
 * 		return self.__board.toPackedSfen(hcp.data)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.to_psfen", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":413
 * 		return self.__board.toPackedSfen(hcp.data)
 * 
 * 	def piece(self, int sq):             # <<<<<<<<<<<<<<
 * 		return self.__board.piece(sq)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_61piece(PyObject *__pyx_v_self, PyObject *__pyx_arg_sq); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_61piece(PyObject *__pyx_v_self, PyObject *__pyx_arg_sq) {
  int __pyx_v_sq;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("piece (wrapper)", 0);
  assert(__pyx_arg_sq); {
    __pyx_v_sq = __Pyx_PyInt_As_int(__pyx_arg_sq); if (unlikely((__pyx_v_sq == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 413, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.Board.piece", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_60piece(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((int)__pyx_v_sq));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_60piece(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, int __pyx_v_sq) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("piece", 0);

  /* "cshogi/_cshogi.pyx":414
 * 
 * 	def piece(self, int sq):
 * 		return self.__board.piece(sq)             # <<<<<<<<<<<<<<
 * 
 * 	def piece_type(self, int sq):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->__pyx___board.piece(__pyx_v_sq)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 414, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":413
 * 		return self.__board.toPackedSfen(hcp.data)
 * 
 * 	def piece(self, int sq):             # <<<<<<<<<<<<<<
 * 		return self.__board.piece(sq)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.piece", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":416
 * 		return self.__board.piece(sq)
 * 
 * 	def piece_type(self, int sq):             # <<<<<<<<<<<<<<
 * 		return 	__piece_to_piece_type(self.__board.piece(sq))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_63piece_type(PyObject *__pyx_v_self, PyObject *__pyx_arg_sq); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_63piece_type(PyObject *__pyx_v_self, PyObject *__pyx_arg_sq) {
  int __pyx_v_sq;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("piece_type (wrapper)", 0);
  assert(__pyx_arg_sq); {
    __pyx_v_sq = __Pyx_PyInt_As_int(__pyx_arg_sq); if (unlikely((__pyx_v_sq == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 416, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.Board.piece_type", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_62piece_type(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((int)__pyx_v_sq));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_62piece_type(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, int __pyx_v_sq) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("piece_type", 0);

  /* "cshogi/_cshogi.pyx":417
 * 
 * 	def piece_type(self, int sq):
 * 		return 	__piece_to_piece_type(self.__board.piece(sq))             # <<<<<<<<<<<<<<
 * 
 * 	def is_check(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__piece_to_piece_type(__pyx_v_self->__pyx___board.piece(__pyx_v_sq))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 417, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":416
 * 		return self.__board.piece(sq)
 * 
 * 	def piece_type(self, int sq):             # <<<<<<<<<<<<<<
 * 		return 	__piece_to_piece_type(self.__board.piece(sq))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.piece_type", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":419
 * 		return 	__piece_to_piece_type(self.__board.piece(sq))
 * 
 * 	def is_check(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.inCheck()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_65is_check(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_65is_check(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_check (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_64is_check(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_64is_check(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_check", 0);

  /* "cshogi/_cshogi.pyx":420
 * 
 * 	def is_check(self):
 * 		return self.__board.inCheck()             # <<<<<<<<<<<<<<
 * 
 * 	def mate_move_in_1ply(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->__pyx___board.inCheck()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 420, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":419
 * 		return 	__piece_to_piece_type(self.__board.piece(sq))
 * 
 * 	def is_check(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.inCheck()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.is_check", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":422
 * 		return self.__board.inCheck()
 * 
 * 	def mate_move_in_1ply(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.mateMoveIn1Ply()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_67mate_move_in_1ply(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_67mate_move_in_1ply(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mate_move_in_1ply (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_66mate_move_in_1ply(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_66mate_move_in_1ply(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("mate_move_in_1ply", 0);

  /* "cshogi/_cshogi.pyx":423
 * 
 * 	def mate_move_in_1ply(self):
 * 		return self.__board.mateMoveIn1Ply()             # <<<<<<<<<<<<<<
 * 
 * 	def mate_move(self, int ply):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->__pyx___board.mateMoveIn1Ply()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 423, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":422
 * 		return self.__board.inCheck()
 * 
 * 	def mate_move_in_1ply(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.mateMoveIn1Ply()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.mate_move_in_1ply", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":425
 * 		return self.__board.mateMoveIn1Ply()
 * 
 * 	def mate_move(self, int ply):             # <<<<<<<<<<<<<<
 * 		assert ply % 2 == 1
 * 		assert ply >= 3
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_69mate_move(PyObject *__pyx_v_self, PyObject *__pyx_arg_ply); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_69mate_move(PyObject *__pyx_v_self, PyObject *__pyx_arg_ply) {
  int __pyx_v_ply;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mate_move (wrapper)", 0);
  assert(__pyx_arg_ply); {
    __pyx_v_ply = __Pyx_PyInt_As_int(__pyx_arg_ply); if (unlikely((__pyx_v_ply == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 425, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.Board.mate_move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_68mate_move(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((int)__pyx_v_ply));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_68mate_move(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, int __pyx_v_ply) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("mate_move", 0);

  /* "cshogi/_cshogi.pyx":426
 * 
 * 	def mate_move(self, int ply):
 * 		assert ply % 2 == 1             # <<<<<<<<<<<<<<
 * 		assert ply >= 3
 * 		return self.__board.mateMove(ply)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__Pyx_mod_long(__pyx_v_ply, 2) == 1) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 426, __pyx_L1_error)
    }
  }
  #endif

  /* "cshogi/_cshogi.pyx":427
 * 	def mate_move(self, int ply):
 * 		assert ply % 2 == 1
 * 		assert ply >= 3             # <<<<<<<<<<<<<<
 * 		return self.__board.mateMove(ply)
 * 
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__pyx_v_ply >= 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 427, __pyx_L1_error)
    }
  }
  #endif

  /* "cshogi/_cshogi.pyx":428
 * 		assert ply % 2 == 1
 * 		assert ply >= 3
 * 		return self.__board.mateMove(ply)             # <<<<<<<<<<<<<<
 * 
 * 	def is_mate(self, int ply):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->__pyx___board.mateMove(__pyx_v_ply)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 428, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":425
 * 		return self.__board.mateMoveIn1Ply()
 * 
 * 	def mate_move(self, int ply):             # <<<<<<<<<<<<<<
 * 		assert ply % 2 == 1
 * 		assert ply >= 3
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.mate_move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":430
 * 		return self.__board.mateMove(ply)
 * 
 * 	def is_mate(self, int ply):             # <<<<<<<<<<<<<<
 * 		assert ply % 2 == 0
 * 		return self.__board.inCheck() and self.__board.is_mate(ply)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_71is_mate(PyObject *__pyx_v_self, PyObject *__pyx_arg_ply); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_71is_mate(PyObject *__pyx_v_self, PyObject *__pyx_arg_ply) {
  int __pyx_v_ply;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_mate (wrapper)", 0);
  assert(__pyx_arg_ply); {
    __pyx_v_ply = __Pyx_PyInt_As_int(__pyx_arg_ply); if (unlikely((__pyx_v_ply == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 430, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.Board.is_mate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_70is_mate(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((int)__pyx_v_ply));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_70is_mate(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, int __pyx_v_ply) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_mate", 0);

  /* "cshogi/_cshogi.pyx":431
 * 
 * 	def is_mate(self, int ply):
 * 		assert ply % 2 == 0             # <<<<<<<<<<<<<<
 * 		return self.__board.inCheck() and self.__board.is_mate(ply)
 * 
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__Pyx_mod_long(__pyx_v_ply, 2) == 0) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 431, __pyx_L1_error)
    }
  }
  #endif

  /* "cshogi/_cshogi.pyx":432
 * 	def is_mate(self, int ply):
 * 		assert ply % 2 == 0
 * 		return self.__board.inCheck() and self.__board.is_mate(ply)             # <<<<<<<<<<<<<<
 * 
 * 	def zobrist_hash(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_v_self->__pyx___board.inCheck();
  if (__pyx_t_2) {
  } else {
    __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 432, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L3_bool_binop_done;
  }
  __pyx_t_2 = __pyx_v_self->__pyx___board.is_mate(__pyx_v_ply);
  __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 432, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __pyx_t_3;
  __pyx_t_3 = 0;
  __pyx_L3_bool_binop_done:;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":430
 * 		return self.__board.mateMove(ply)
 * 
 * 	def is_mate(self, int ply):             # <<<<<<<<<<<<<<
 * 		assert ply % 2 == 0
 * 		return self.__board.inCheck() and self.__board.is_mate(ply)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cshogi._cshogi.Board.is_mate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":434
 * 		return self.__board.inCheck() and self.__board.is_mate(ply)
 * 
 * 	def zobrist_hash(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.getKey()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_73zobrist_hash(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_73zobrist_hash(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zobrist_hash (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_72zobrist_hash(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_72zobrist_hash(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("zobrist_hash", 0);

  /* "cshogi/_cshogi.pyx":435
 * 
 * 	def zobrist_hash(self):
 * 		return self.__board.getKey()             # <<<<<<<<<<<<<<
 * 
 * 	def is_pseudo_legal(self, int move):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_PY_LONG_LONG(__pyx_v_self->__pyx___board.getKey()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":434
 * 		return self.__board.inCheck() and self.__board.is_mate(ply)
 * 
 * 	def zobrist_hash(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.getKey()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.zobrist_hash", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":437
 * 		return self.__board.getKey()
 * 
 * 	def is_pseudo_legal(self, int move):             # <<<<<<<<<<<<<<
 * 		return self.__board.moveIsPseudoLegal(move)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_75is_pseudo_legal(PyObject *__pyx_v_self, PyObject *__pyx_arg_move); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_75is_pseudo_legal(PyObject *__pyx_v_self, PyObject *__pyx_arg_move) {
  int __pyx_v_move;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_pseudo_legal (wrapper)", 0);
  assert(__pyx_arg_move); {
    __pyx_v_move = __Pyx_PyInt_As_int(__pyx_arg_move); if (unlikely((__pyx_v_move == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 437, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.Board.is_pseudo_legal", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_74is_pseudo_legal(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((int)__pyx_v_move));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_74is_pseudo_legal(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, int __pyx_v_move) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_pseudo_legal", 0);

  /* "cshogi/_cshogi.pyx":438
 * 
 * 	def is_pseudo_legal(self, int move):
 * 		return self.__board.moveIsPseudoLegal(move)             # <<<<<<<<<<<<<<
 * 
 * 	def is_legal(self, int move):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->__pyx___board.moveIsPseudoLegal(__pyx_v_move)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 438, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":437
 * 		return self.__board.getKey()
 * 
 * 	def is_pseudo_legal(self, int move):             # <<<<<<<<<<<<<<
 * 		return self.__board.moveIsPseudoLegal(move)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.is_pseudo_legal", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":440
 * 		return self.__board.moveIsPseudoLegal(move)
 * 
 * 	def is_legal(self, int move):             # <<<<<<<<<<<<<<
 * 		return self.__board.moveIsLegal(move)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_77is_legal(PyObject *__pyx_v_self, PyObject *__pyx_arg_move); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_77is_legal(PyObject *__pyx_v_self, PyObject *__pyx_arg_move) {
  int __pyx_v_move;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_legal (wrapper)", 0);
  assert(__pyx_arg_move); {
    __pyx_v_move = __Pyx_PyInt_As_int(__pyx_arg_move); if (unlikely((__pyx_v_move == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 440, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.Board.is_legal", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_76is_legal(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((int)__pyx_v_move));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_76is_legal(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, int __pyx_v_move) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_legal", 0);

  /* "cshogi/_cshogi.pyx":441
 * 
 * 	def is_legal(self, int move):
 * 		return self.__board.moveIsLegal(move)             # <<<<<<<<<<<<<<
 * 
 * 	@property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->__pyx___board.moveIsLegal(__pyx_v_move)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":440
 * 		return self.__board.moveIsPseudoLegal(move)
 * 
 * 	def is_legal(self, int move):             # <<<<<<<<<<<<<<
 * 		return self.__board.moveIsLegal(move)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.is_legal", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":444
 * 
 * 	@property
 * 	def pieces_in_hand(self):             # <<<<<<<<<<<<<<
 * 		return (self.__board.pieces_in_hand(BLACK), self.__board.pieces_in_hand(WHITE))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_14pieces_in_hand_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_14pieces_in_hand_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_14pieces_in_hand___get__(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_14pieces_in_hand___get__(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cshogi/_cshogi.pyx":445
 * 	@property
 * 	def pieces_in_hand(self):
 * 		return (self.__board.pieces_in_hand(BLACK), self.__board.pieces_in_hand(WHITE))             # <<<<<<<<<<<<<<
 * 
 * 	@property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_BLACK); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 445, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __pyx_convert_vector_to_py_int(__pyx_v_self->__pyx___board.pieces_in_hand(__pyx_t_2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_WHITE); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 445, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __pyx_convert_vector_to_py_int(__pyx_v_self->__pyx___board.pieces_in_hand(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":444
 * 
 * 	@property
 * 	def pieces_in_hand(self):             # <<<<<<<<<<<<<<
 * 		return (self.__board.pieces_in_hand(BLACK), self.__board.pieces_in_hand(WHITE))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cshogi._cshogi.Board.pieces_in_hand.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":448
 * 
 * 	@property
 * 	def pieces(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.pieces()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_6pieces_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_6pieces_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_6pieces___get__(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_6pieces___get__(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cshogi/_cshogi.pyx":449
 * 	@property
 * 	def pieces(self):
 * 		return self.__board.pieces()             # <<<<<<<<<<<<<<
 * 
 * 	def is_nyugyoku(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_int(__pyx_v_self->__pyx___board.pieces()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 449, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":448
 * 
 * 	@property
 * 	def pieces(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.pieces()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.pieces.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":451
 * 		return self.__board.pieces()
 * 
 * 	def is_nyugyoku(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.is_nyugyoku()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_79is_nyugyoku(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_79is_nyugyoku(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_nyugyoku (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_78is_nyugyoku(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_78is_nyugyoku(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_nyugyoku", 0);

  /* "cshogi/_cshogi.pyx":452
 * 
 * 	def is_nyugyoku(self):
 * 		return self.__board.is_nyugyoku()             # <<<<<<<<<<<<<<
 * 
 * 	def piece_planes(self, np.ndarray features):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->__pyx___board.is_nyugyoku()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":451
 * 		return self.__board.pieces()
 * 
 * 	def is_nyugyoku(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.is_nyugyoku()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.is_nyugyoku", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":454
 * 		return self.__board.is_nyugyoku()
 * 
 * 	def piece_planes(self, np.ndarray features):             # <<<<<<<<<<<<<<
 * 		return self.__board.piece_planes(features.data)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_81piece_planes(PyObject *__pyx_v_self, PyObject *__pyx_v_features); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_81piece_planes(PyObject *__pyx_v_self, PyObject *__pyx_v_features) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("piece_planes (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_features), __pyx_ptype_5numpy_ndarray, 1, "features", 0))) __PYX_ERR(0, 454, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_80piece_planes(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((PyArrayObject *)__pyx_v_features));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_80piece_planes(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyArrayObject *__pyx_v_features) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("piece_planes", 0);

  /* "cshogi/_cshogi.pyx":455
 * 
 * 	def piece_planes(self, np.ndarray features):
 * 		return self.__board.piece_planes(features.data)             # <<<<<<<<<<<<<<
 * 
 * 	def piece_planes_rotate(self, np.ndarray features):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_v_self->__pyx___board.piece_planes(__pyx_v_features->data)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 455, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":454
 * 		return self.__board.is_nyugyoku()
 * 
 * 	def piece_planes(self, np.ndarray features):             # <<<<<<<<<<<<<<
 * 		return self.__board.piece_planes(features.data)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.piece_planes", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":457
 * 		return self.__board.piece_planes(features.data)
 * 
 * 	def piece_planes_rotate(self, np.ndarray features):             # <<<<<<<<<<<<<<
 * 		return self.__board.piece_planes_rotate(features.data)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_83piece_planes_rotate(PyObject *__pyx_v_self, PyObject *__pyx_v_features); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_83piece_planes_rotate(PyObject *__pyx_v_self, PyObject *__pyx_v_features) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("piece_planes_rotate (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_features), __pyx_ptype_5numpy_ndarray, 1, "features", 0))) __PYX_ERR(0, 457, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_82piece_planes_rotate(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((PyArrayObject *)__pyx_v_features));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_82piece_planes_rotate(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyArrayObject *__pyx_v_features) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("piece_planes_rotate", 0);

  /* "cshogi/_cshogi.pyx":458
 * 
 * 	def piece_planes_rotate(self, np.ndarray features):
 * 		return self.__board.piece_planes_rotate(features.data)             # <<<<<<<<<<<<<<
 * 
 * 	def _dlshogi_make_input_features(self, np.ndarray features1, np.ndarray features2):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_v_self->__pyx___board.piece_planes_rotate(__pyx_v_features->data)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 458, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":457
 * 		return self.__board.piece_planes(features.data)
 * 
 * 	def piece_planes_rotate(self, np.ndarray features):             # <<<<<<<<<<<<<<
 * 		return self.__board.piece_planes_rotate(features.data)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.piece_planes_rotate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":460
 * 		return self.__board.piece_planes_rotate(features.data)
 * 
 * 	def _dlshogi_make_input_features(self, np.ndarray features1, np.ndarray features2):             # <<<<<<<<<<<<<<
 * 		self.__board._dlshogi_make_input_features(features1.data, features2.data)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_85_dlshogi_make_input_features(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_85_dlshogi_make_input_features(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_features1 = 0;
  PyArrayObject *__pyx_v_features2 = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_dlshogi_make_input_features (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_features1,&__pyx_n_s_features2,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_features1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_features2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_dlshogi_make_input_features", 1, 2, 2, 1); __PYX_ERR(0, 460, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_dlshogi_make_input_features") < 0)) __PYX_ERR(0, 460, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_features1 = ((PyArrayObject *)values[0]);
    __pyx_v_features2 = ((PyArrayObject *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_dlshogi_make_input_features", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 460, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.Board._dlshogi_make_input_features", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_features1), __pyx_ptype_5numpy_ndarray, 1, "features1", 0))) __PYX_ERR(0, 460, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_features2), __pyx_ptype_5numpy_ndarray, 1, "features2", 0))) __PYX_ERR(0, 460, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_84_dlshogi_make_input_features(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), __pyx_v_features1, __pyx_v_features2);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_84_dlshogi_make_input_features(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyArrayObject *__pyx_v_features1, PyArrayObject *__pyx_v_features2) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_dlshogi_make_input_features", 0);

  /* "cshogi/_cshogi.pyx":461
 * 
 * 	def _dlshogi_make_input_features(self, np.ndarray features1, np.ndarray features2):
 * 		self.__board._dlshogi_make_input_features(features1.data, features2.data)             # <<<<<<<<<<<<<<
 * 
 * 	def is_ok(self):
 */
  __pyx_v_self->__pyx___board._dlshogi_make_input_features(__pyx_v_features1->data, __pyx_v_features2->data);

  /* "cshogi/_cshogi.pyx":460
 * 		return self.__board.piece_planes_rotate(features.data)
 * 
 * 	def _dlshogi_make_input_features(self, np.ndarray features1, np.ndarray features2):             # <<<<<<<<<<<<<<
 * 		self.__board._dlshogi_make_input_features(features1.data, features2.data)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":463
 * 		self.__board._dlshogi_make_input_features(features1.data, features2.data)
 * 
 * 	def is_ok(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.isOK()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_87is_ok(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_87is_ok(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_ok (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_86is_ok(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_86is_ok(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_ok", 0);

  /* "cshogi/_cshogi.pyx":464
 * 
 * 	def is_ok(self):
 * 		return self.__board.isOK()             # <<<<<<<<<<<<<<
 * 
 * 	def book_key(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->__pyx___board.isOK()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 464, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":463
 * 		self.__board._dlshogi_make_input_features(features1.data, features2.data)
 * 
 * 	def is_ok(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.isOK()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.is_ok", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":466
 * 		return self.__board.isOK()
 * 
 * 	def book_key(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.bookKey()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_89book_key(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_89book_key(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("book_key (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_88book_key(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_88book_key(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("book_key", 0);

  /* "cshogi/_cshogi.pyx":467
 * 
 * 	def book_key(self):
 * 		return self.__board.bookKey()             # <<<<<<<<<<<<<<
 * 
 * 	def to_svg(self, lastmove=None, scale=1.0):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_PY_LONG_LONG(__pyx_v_self->__pyx___board.bookKey()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":466
 * 		return self.__board.isOK()
 * 
 * 	def book_key(self):             # <<<<<<<<<<<<<<
 * 		return self.__board.bookKey()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.book_key", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":469
 * 		return self.__board.bookKey()
 * 
 * 	def to_svg(self, lastmove=None, scale=1.0):             # <<<<<<<<<<<<<<
 * 		import xml.etree.ElementTree as ET
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_91to_svg(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_91to_svg(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_lastmove = 0;
  PyObject *__pyx_v_scale = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("to_svg (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_lastmove,&__pyx_n_s_scale,0};
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)__pyx_float_1_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lastmove);
          if (value) { values[0] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_scale);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "to_svg") < 0)) __PYX_ERR(0, 469, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_lastmove = values[0];
    __pyx_v_scale = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("to_svg", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 469, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.Board.to_svg", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_90to_svg(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), __pyx_v_lastmove, __pyx_v_scale);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_90to_svg(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, PyObject *__pyx_v_lastmove, PyObject *__pyx_v_scale) {
  PyObject *__pyx_v_ET = NULL;
  PyObject *__pyx_v_width = NULL;
  PyObject *__pyx_v_height = NULL;
  PyObject *__pyx_v_svg = NULL;
  PyObject *__pyx_v_defs = NULL;
  PyObject *__pyx_v_piece_def = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_j = NULL;
  PyObject *__pyx_v_sq = NULL;
  int __pyx_v_pc;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  PyObject *__pyx_v_hand_pieces = NULL;
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_v_hp = NULL;
  PyObject *__pyx_v_n = NULL;
  PyObject *__pyx_v_text = NULL;
  PyObject *__pyx_v_e = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  PyObject *(*__pyx_t_10)(PyObject *);
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  PyObject *(*__pyx_t_14)(PyObject *);
  PyObject *__pyx_t_15 = NULL;
  Py_ssize_t __pyx_t_16;
  PyObject *(*__pyx_t_17)(PyObject *);
  Py_ssize_t __pyx_t_18;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("to_svg", 0);
  __Pyx_INCREF(__pyx_v_scale);

  /* "cshogi/_cshogi.pyx":470
 * 
 * 	def to_svg(self, lastmove=None, scale=1.0):
 * 		import xml.etree.ElementTree as ET             # <<<<<<<<<<<<<<
 * 
 * 		width = 230
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 470, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_);
  __Pyx_GIVEREF(__pyx_n_s_);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_xml_etree_ElementTree, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 470, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_ET = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "cshogi/_cshogi.pyx":472
 * 		import xml.etree.ElementTree as ET
 * 
 * 		width = 230             # <<<<<<<<<<<<<<
 * 		height = 192
 * 
 */
  __Pyx_INCREF(__pyx_int_230);
  __pyx_v_width = __pyx_int_230;

  /* "cshogi/_cshogi.pyx":473
 * 
 * 		width = 230
 * 		height = 192             # <<<<<<<<<<<<<<
 * 
 * 		svg = ET.Element("svg", {
 */
  __Pyx_INCREF(__pyx_int_192);
  __pyx_v_height = __pyx_int_192;

  /* "cshogi/_cshogi.pyx":475
 * 		height = 192
 * 
 * 		svg = ET.Element("svg", {             # <<<<<<<<<<<<<<
 * 			"xmlns": "http://www.w3.org/2000/svg",
 * 			"version": "1.1",
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_ET, __pyx_n_s_Element); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 475, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "cshogi/_cshogi.pyx":476
 * 
 * 		svg = ET.Element("svg", {
 * 			"xmlns": "http://www.w3.org/2000/svg",             # <<<<<<<<<<<<<<
 * 			"version": "1.1",
 * 			"xmlns:xlink": "http://www.w3.org/1999/xlink",
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 476, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_xmlns, __pyx_kp_s_http_www_w3_org_2000_svg) < 0) __PYX_ERR(0, 476, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_version, __pyx_kp_s_1_1) < 0) __PYX_ERR(0, 476, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_xmlns_xlink, __pyx_kp_s_http_www_w3_org_1999_xlink) < 0) __PYX_ERR(0, 476, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":479
 * 			"version": "1.1",
 * 			"xmlns:xlink": "http://www.w3.org/1999/xlink",
 * 			"width": str(width * scale),             # <<<<<<<<<<<<<<
 * 			"height": str(height * scale),
 * 			"viewBox": "0 0 {} {}".format(width, height),
 */
  __pyx_t_4 = PyNumber_Multiply(__pyx_v_width, __pyx_v_scale); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 479, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 479, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_width, __pyx_t_5) < 0) __PYX_ERR(0, 476, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "cshogi/_cshogi.pyx":480
 * 			"xmlns:xlink": "http://www.w3.org/1999/xlink",
 * 			"width": str(width * scale),
 * 			"height": str(height * scale),             # <<<<<<<<<<<<<<
 * 			"viewBox": "0 0 {} {}".format(width, height),
 * 		})
 */
  __pyx_t_5 = PyNumber_Multiply(__pyx_v_height, __pyx_v_scale); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 480, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 480, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_height, __pyx_t_4) < 0) __PYX_ERR(0, 476, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "cshogi/_cshogi.pyx":481
 * 			"width": str(width * scale),
 * 			"height": str(height * scale),
 * 			"viewBox": "0 0 {} {}".format(width, height),             # <<<<<<<<<<<<<<
 * 		})
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_0_0, __pyx_n_s_format); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 481, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_5)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_v_width, __pyx_v_height};
    __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 481, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_4);
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_v_width, __pyx_v_height};
    __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 481, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_4);
  } else
  #endif
  {
    __pyx_t_8 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 481, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    if (__pyx_t_6) {
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
    }
    __Pyx_INCREF(__pyx_v_width);
    __Pyx_GIVEREF(__pyx_v_width);
    PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_v_width);
    __Pyx_INCREF(__pyx_v_height);
    __Pyx_GIVEREF(__pyx_v_height);
    PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_v_height);
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 481, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_viewBox, __pyx_t_4) < 0) __PYX_ERR(0, 476, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_1)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_n_s_svg, __pyx_t_3};
    __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 475, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_n_s_svg, __pyx_t_3};
    __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 475, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else
  #endif
  {
    __pyx_t_5 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 475, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_n_s_svg);
    __Pyx_GIVEREF(__pyx_n_s_svg);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_7, __pyx_n_s_svg);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_7, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 475, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_svg = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "cshogi/_cshogi.pyx":484
 * 		})
 * 
 * 		defs = ET.SubElement(svg, "defs")             # <<<<<<<<<<<<<<
 * 		for piece_def in SVG_PIECE_DEFS:
 * 			defs.append(ET.fromstring(piece_def))
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_ET, __pyx_n_s_SubElement); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 484, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_1)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_v_svg, __pyx_n_s_defs};
    __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 484, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_2);
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_v_svg, __pyx_n_s_defs};
    __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 484, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_2);
  } else
  #endif
  {
    __pyx_t_3 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 484, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_v_svg);
    __Pyx_GIVEREF(__pyx_v_svg);
    PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_7, __pyx_v_svg);
    __Pyx_INCREF(__pyx_n_s_defs);
    __Pyx_GIVEREF(__pyx_n_s_defs);
    PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_7, __pyx_n_s_defs);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 484, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_defs = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "cshogi/_cshogi.pyx":485
 * 
 * 		defs = ET.SubElement(svg, "defs")
 * 		for piece_def in SVG_PIECE_DEFS:             # <<<<<<<<<<<<<<
 * 			defs.append(ET.fromstring(piece_def))
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_SVG_PIECE_DEFS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 485, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1); __pyx_t_9 = 0;
    __pyx_t_10 = NULL;
  } else {
    __pyx_t_9 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 485, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_10 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 485, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (likely(!__pyx_t_10)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 485, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 485, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 485, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 485, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_10(__pyx_t_1);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 485, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_piece_def, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "cshogi/_cshogi.pyx":486
 * 		defs = ET.SubElement(svg, "defs")
 * 		for piece_def in SVG_PIECE_DEFS:
 * 			defs.append(ET.fromstring(piece_def))             # <<<<<<<<<<<<<<
 * 
 * 		if lastmove is not None:
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_ET, __pyx_n_s_fromstring); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 486, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_v_piece_def) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_piece_def);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 486, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_11 = __Pyx_PyObject_Append(__pyx_v_defs, __pyx_t_2); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 486, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cshogi/_cshogi.pyx":485
 * 
 * 		defs = ET.SubElement(svg, "defs")
 * 		for piece_def in SVG_PIECE_DEFS:             # <<<<<<<<<<<<<<
 * 			defs.append(ET.fromstring(piece_def))
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cshogi/_cshogi.pyx":488
 * 			defs.append(ET.fromstring(piece_def))
 * 
 * 		if lastmove is not None:             # <<<<<<<<<<<<<<
 * 			i, j = divmod(move_to(lastmove), 9)
 * 			ET.SubElement(svg, "rect", {
 */
  __pyx_t_12 = (__pyx_v_lastmove != Py_None);
  __pyx_t_13 = (__pyx_t_12 != 0);
  if (__pyx_t_13) {

    /* "cshogi/_cshogi.pyx":489
 * 
 * 		if lastmove is not None:
 * 			i, j = divmod(move_to(lastmove), 9)             # <<<<<<<<<<<<<<
 * 			ET.SubElement(svg, "rect", {
 * 				"x": str(20.5 + (8 - i) * 20),
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_move_to); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 489, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_lastmove) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_lastmove);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 489, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyNumber_Divmod(__pyx_t_1, __pyx_int_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 489, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
      PyObject* sequence = __pyx_t_2;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 489, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      #else
      __pyx_t_1 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 489, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_3 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 489, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      #endif
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_5 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 489, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_14 = Py_TYPE(__pyx_t_5)->tp_iternext;
      index = 0; __pyx_t_1 = __pyx_t_14(__pyx_t_5); if (unlikely(!__pyx_t_1)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_1);
      index = 1; __pyx_t_3 = __pyx_t_14(__pyx_t_5); if (unlikely(!__pyx_t_3)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_14(__pyx_t_5), 2) < 0) __PYX_ERR(0, 489, __pyx_L1_error)
      __pyx_t_14 = NULL;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      goto __pyx_L7_unpacking_done;
      __pyx_L6_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_14 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 489, __pyx_L1_error)
      __pyx_L7_unpacking_done:;
    }
    __pyx_v_i = __pyx_t_1;
    __pyx_t_1 = 0;
    __pyx_v_j = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "cshogi/_cshogi.pyx":490
 * 		if lastmove is not None:
 * 			i, j = divmod(move_to(lastmove), 9)
 * 			ET.SubElement(svg, "rect", {             # <<<<<<<<<<<<<<
 * 				"x": str(20.5 + (8 - i) * 20),
 * 				"y": str(10.5 + j * 20),
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_ET, __pyx_n_s_SubElement); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 490, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);

    /* "cshogi/_cshogi.pyx":491
 * 			i, j = divmod(move_to(lastmove), 9)
 * 			ET.SubElement(svg, "rect", {
 * 				"x": str(20.5 + (8 - i) * 20),             # <<<<<<<<<<<<<<
 * 				"y": str(10.5 + j * 20),
 * 				"width": str(20),
 */
    __pyx_t_1 = __Pyx_PyDict_NewPresized(5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 491, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyInt_SubtractCObj(__pyx_int_8, __pyx_v_i, 8, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 491, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_5, __pyx_int_20); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 491, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyFloat_AddCObj(__pyx_float_20_5, __pyx_t_4, 20.5, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 491, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 491, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_x, __pyx_t_4) < 0) __PYX_ERR(0, 491, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "cshogi/_cshogi.pyx":492
 * 			ET.SubElement(svg, "rect", {
 * 				"x": str(20.5 + (8 - i) * 20),
 * 				"y": str(10.5 + j * 20),             # <<<<<<<<<<<<<<
 * 				"width": str(20),
 * 				"height": str(20),
 */
    __pyx_t_4 = PyNumber_Multiply(__pyx_v_j, __pyx_int_20); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 492, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyFloat_AddCObj(__pyx_float_10_5, __pyx_t_4, 10.5, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 492, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 492, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_y, __pyx_t_4) < 0) __PYX_ERR(0, 491, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "cshogi/_cshogi.pyx":493
 * 				"x": str(20.5 + (8 - i) * 20),
 * 				"y": str(10.5 + j * 20),
 * 				"width": str(20),             # <<<<<<<<<<<<<<
 * 				"height": str(20),
 * 				"fill": "#f6b94d"
 */
    __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 493, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_width, __pyx_t_4) < 0) __PYX_ERR(0, 491, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "cshogi/_cshogi.pyx":494
 * 				"y": str(10.5 + j * 20),
 * 				"width": str(20),
 * 				"height": str(20),             # <<<<<<<<<<<<<<
 * 				"fill": "#f6b94d"
 * 			})
 */
    __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 494, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_height, __pyx_t_4) < 0) __PYX_ERR(0, 491, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_fill, __pyx_kp_s_f6b94d) < 0) __PYX_ERR(0, 491, __pyx_L1_error)
    __pyx_t_4 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_3)) {
      PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_v_svg, __pyx_n_s_rect, __pyx_t_1};
      __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 490, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
      PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_v_svg, __pyx_n_s_rect, __pyx_t_1};
      __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 490, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(3+__pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 490, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_INCREF(__pyx_v_svg);
      __Pyx_GIVEREF(__pyx_v_svg);
      PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_7, __pyx_v_svg);
      __Pyx_INCREF(__pyx_n_s_rect);
      __Pyx_GIVEREF(__pyx_n_s_rect);
      PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_7, __pyx_n_s_rect);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_7, __pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 490, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cshogi/_cshogi.pyx":497
 * 				"fill": "#f6b94d"
 * 			})
 * 			if not move_is_drop(lastmove):             # <<<<<<<<<<<<<<
 * 				i, j = divmod(move_from(lastmove), 9)
 * 				ET.SubElement(svg, "rect", {
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_move_is_drop); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 497, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_v_lastmove) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_lastmove);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 497, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_13 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_13 < 0)) __PYX_ERR(0, 497, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_12 = ((!__pyx_t_13) != 0);
    if (__pyx_t_12) {

      /* "cshogi/_cshogi.pyx":498
 * 			})
 * 			if not move_is_drop(lastmove):
 * 				i, j = divmod(move_from(lastmove), 9)             # <<<<<<<<<<<<<<
 * 				ET.SubElement(svg, "rect", {
 * 					"x": str(20.5 + (8 - i) * 20),
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_move_from); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 498, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_v_lastmove) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_lastmove);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 498, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyNumber_Divmod(__pyx_t_2, __pyx_int_9); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 498, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if ((likely(PyTuple_CheckExact(__pyx_t_3))) || (PyList_CheckExact(__pyx_t_3))) {
        PyObject* sequence = __pyx_t_3;
        Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
        if (unlikely(size != 2)) {
          if (size > 2) __Pyx_RaiseTooManyValuesError(2);
          else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
          __PYX_ERR(0, 498, __pyx_L1_error)
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        if (likely(PyTuple_CheckExact(sequence))) {
          __pyx_t_2 = PyTuple_GET_ITEM(sequence, 0); 
          __pyx_t_5 = PyTuple_GET_ITEM(sequence, 1); 
        } else {
          __pyx_t_2 = PyList_GET_ITEM(sequence, 0); 
          __pyx_t_5 = PyList_GET_ITEM(sequence, 1); 
        }
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        #else
        __pyx_t_2 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 498, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_5 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 498, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        #endif
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      } else {
        Py_ssize_t index = -1;
        __pyx_t_1 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 498, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_14 = Py_TYPE(__pyx_t_1)->tp_iternext;
        index = 0; __pyx_t_2 = __pyx_t_14(__pyx_t_1); if (unlikely(!__pyx_t_2)) goto __pyx_L9_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_2);
        index = 1; __pyx_t_5 = __pyx_t_14(__pyx_t_1); if (unlikely(!__pyx_t_5)) goto __pyx_L9_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_5);
        if (__Pyx_IternextUnpackEndCheck(__pyx_t_14(__pyx_t_1), 2) < 0) __PYX_ERR(0, 498, __pyx_L1_error)
        __pyx_t_14 = NULL;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L10_unpacking_done;
        __pyx_L9_unpacking_failed:;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_14 = NULL;
        if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
        __PYX_ERR(0, 498, __pyx_L1_error)
        __pyx_L10_unpacking_done:;
      }
      __Pyx_DECREF_SET(__pyx_v_i, __pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_DECREF_SET(__pyx_v_j, __pyx_t_5);
      __pyx_t_5 = 0;

      /* "cshogi/_cshogi.pyx":499
 * 			if not move_is_drop(lastmove):
 * 				i, j = divmod(move_from(lastmove), 9)
 * 				ET.SubElement(svg, "rect", {             # <<<<<<<<<<<<<<
 * 					"x": str(20.5 + (8 - i) * 20),
 * 					"y": str(10.5 + j * 20),
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_ET, __pyx_n_s_SubElement); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 499, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);

      /* "cshogi/_cshogi.pyx":500
 * 				i, j = divmod(move_from(lastmove), 9)
 * 				ET.SubElement(svg, "rect", {
 * 					"x": str(20.5 + (8 - i) * 20),             # <<<<<<<<<<<<<<
 * 					"y": str(10.5 + j * 20),
 * 					"width": str(20),
 */
      __pyx_t_2 = __Pyx_PyDict_NewPresized(5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 500, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = __Pyx_PyInt_SubtractCObj(__pyx_int_8, __pyx_v_i, 8, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 500, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = PyNumber_Multiply(__pyx_t_1, __pyx_int_20); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 500, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyFloat_AddCObj(__pyx_float_20_5, __pyx_t_4, 20.5, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 500, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 500, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_x, __pyx_t_4) < 0) __PYX_ERR(0, 500, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "cshogi/_cshogi.pyx":501
 * 				ET.SubElement(svg, "rect", {
 * 					"x": str(20.5 + (8 - i) * 20),
 * 					"y": str(10.5 + j * 20),             # <<<<<<<<<<<<<<
 * 					"width": str(20),
 * 					"height": str(20),
 */
      __pyx_t_4 = PyNumber_Multiply(__pyx_v_j, __pyx_int_20); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 501, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_1 = __Pyx_PyFloat_AddCObj(__pyx_float_10_5, __pyx_t_4, 10.5, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 501, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 501, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_y, __pyx_t_4) < 0) __PYX_ERR(0, 500, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "cshogi/_cshogi.pyx":502
 * 					"x": str(20.5 + (8 - i) * 20),
 * 					"y": str(10.5 + j * 20),
 * 					"width": str(20),             # <<<<<<<<<<<<<<
 * 					"height": str(20),
 * 					"fill": "#fdf0e3"
 */
      __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 502, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_width, __pyx_t_4) < 0) __PYX_ERR(0, 500, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "cshogi/_cshogi.pyx":503
 * 					"y": str(10.5 + j * 20),
 * 					"width": str(20),
 * 					"height": str(20),             # <<<<<<<<<<<<<<
 * 					"fill": "#fdf0e3"
 * 				})
 */
      __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 503, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_height, __pyx_t_4) < 0) __PYX_ERR(0, 500, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_fill, __pyx_kp_s_fdf0e3) < 0) __PYX_ERR(0, 500, __pyx_L1_error)
      __pyx_t_4 = NULL;
      __pyx_t_7 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_7 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_v_svg, __pyx_n_s_rect, __pyx_t_2};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 499, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_v_svg, __pyx_n_s_rect, __pyx_t_2};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 499, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      } else
      #endif
      {
        __pyx_t_1 = PyTuple_New(3+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 499, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        if (__pyx_t_4) {
          __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_4); __pyx_t_4 = NULL;
        }
        __Pyx_INCREF(__pyx_v_svg);
        __Pyx_GIVEREF(__pyx_v_svg);
        PyTuple_SET_ITEM(__pyx_t_1, 0+__pyx_t_7, __pyx_v_svg);
        __Pyx_INCREF(__pyx_n_s_rect);
        __Pyx_GIVEREF(__pyx_n_s_rect);
        PyTuple_SET_ITEM(__pyx_t_1, 1+__pyx_t_7, __pyx_n_s_rect);
        __Pyx_GIVEREF(__pyx_t_2);
        PyTuple_SET_ITEM(__pyx_t_1, 2+__pyx_t_7, __pyx_t_2);
        __pyx_t_2 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_1, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 499, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "cshogi/_cshogi.pyx":497
 * 				"fill": "#f6b94d"
 * 			})
 * 			if not move_is_drop(lastmove):             # <<<<<<<<<<<<<<
 * 				i, j = divmod(move_from(lastmove), 9)
 * 				ET.SubElement(svg, "rect", {
 */
    }

    /* "cshogi/_cshogi.pyx":488
 * 			defs.append(ET.fromstring(piece_def))
 * 
 * 		if lastmove is not None:             # <<<<<<<<<<<<<<
 * 			i, j = divmod(move_to(lastmove), 9)
 * 			ET.SubElement(svg, "rect", {
 */
  }

  /* "cshogi/_cshogi.pyx":507
 * 				})
 * 
 * 		svg.append(ET.fromstring(SVG_SQUARES))             # <<<<<<<<<<<<<<
 * 		svg.append(ET.fromstring(SVG_COORDINATES))
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_ET, __pyx_n_s_fromstring); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 507, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_SVG_SQUARES); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 507, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 507, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_11 = __Pyx_PyObject_Append(__pyx_v_svg, __pyx_t_3); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 507, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cshogi/_cshogi.pyx":508
 * 
 * 		svg.append(ET.fromstring(SVG_SQUARES))
 * 		svg.append(ET.fromstring(SVG_COORDINATES))             # <<<<<<<<<<<<<<
 * 
 * 		for sq in SQUARES:
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_ET, __pyx_n_s_fromstring); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 508, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_SVG_COORDINATES); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 508, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 508, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_11 = __Pyx_PyObject_Append(__pyx_v_svg, __pyx_t_3); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 508, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cshogi/_cshogi.pyx":510
 * 		svg.append(ET.fromstring(SVG_COORDINATES))
 * 
 * 		for sq in SQUARES:             # <<<<<<<<<<<<<<
 * 			pc = self.__board.piece(sq)
 * 			if pc != NONE:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_SQUARES); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 510, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_5 = __pyx_t_3; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
    __pyx_t_10 = NULL;
  } else {
    __pyx_t_9 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 510, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 510, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (likely(!__pyx_t_10)) {
      if (likely(PyList_CheckExact(__pyx_t_5))) {
        if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 510, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 510, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 510, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 510, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_10(__pyx_t_5);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 510, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_sq, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "cshogi/_cshogi.pyx":511
 * 
 * 		for sq in SQUARES:
 * 			pc = self.__board.piece(sq)             # <<<<<<<<<<<<<<
 * 			if pc != NONE:
 * 				i, j = divmod(sq, 9)
 */
    __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_v_sq); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 511, __pyx_L1_error)
    __pyx_v_pc = __pyx_v_self->__pyx___board.piece(__pyx_t_7);

    /* "cshogi/_cshogi.pyx":512
 * 		for sq in SQUARES:
 * 			pc = self.__board.piece(sq)
 * 			if pc != NONE:             # <<<<<<<<<<<<<<
 * 				i, j = divmod(sq, 9)
 * 				x = 20.5 + (8 - i) * 20
 */
    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_pc); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 512, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_NONE); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 512, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_3, __pyx_t_1, Py_NE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 512, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_12 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_12 < 0)) __PYX_ERR(0, 512, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_12) {

      /* "cshogi/_cshogi.pyx":513
 * 			pc = self.__board.piece(sq)
 * 			if pc != NONE:
 * 				i, j = divmod(sq, 9)             # <<<<<<<<<<<<<<
 * 				x = 20.5 + (8 - i) * 20
 * 				y = 10.5 + j * 20
 */
      __pyx_t_2 = PyNumber_Divmod(__pyx_v_sq, __pyx_int_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 513, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
        PyObject* sequence = __pyx_t_2;
        Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
        if (unlikely(size != 2)) {
          if (size > 2) __Pyx_RaiseTooManyValuesError(2);
          else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
          __PYX_ERR(0, 513, __pyx_L1_error)
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        if (likely(PyTuple_CheckExact(sequence))) {
          __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
          __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
        } else {
          __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
          __pyx_t_3 = PyList_GET_ITEM(sequence, 1); 
        }
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_3);
        #else
        __pyx_t_1 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 513, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_3 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 513, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      } else {
        Py_ssize_t index = -1;
        __pyx_t_4 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 513, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_14 = Py_TYPE(__pyx_t_4)->tp_iternext;
        index = 0; __pyx_t_1 = __pyx_t_14(__pyx_t_4); if (unlikely(!__pyx_t_1)) goto __pyx_L14_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_1);
        index = 1; __pyx_t_3 = __pyx_t_14(__pyx_t_4); if (unlikely(!__pyx_t_3)) goto __pyx_L14_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_3);
        if (__Pyx_IternextUnpackEndCheck(__pyx_t_14(__pyx_t_4), 2) < 0) __PYX_ERR(0, 513, __pyx_L1_error)
        __pyx_t_14 = NULL;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        goto __pyx_L15_unpacking_done;
        __pyx_L14_unpacking_failed:;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_14 = NULL;
        if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
        __PYX_ERR(0, 513, __pyx_L1_error)
        __pyx_L15_unpacking_done:;
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
      __pyx_t_1 = 0;
      __Pyx_XDECREF_SET(__pyx_v_j, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "cshogi/_cshogi.pyx":514
 * 			if pc != NONE:
 * 				i, j = divmod(sq, 9)
 * 				x = 20.5 + (8 - i) * 20             # <<<<<<<<<<<<<<
 * 				y = 10.5 + j * 20
 * 
 */
      __pyx_t_2 = __Pyx_PyInt_SubtractCObj(__pyx_int_8, __pyx_v_i, 8, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 514, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyNumber_Multiply(__pyx_t_2, __pyx_int_20); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 514, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_PyFloat_AddCObj(__pyx_float_20_5, __pyx_t_3, 20.5, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 514, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "cshogi/_cshogi.pyx":515
 * 				i, j = divmod(sq, 9)
 * 				x = 20.5 + (8 - i) * 20
 * 				y = 10.5 + j * 20             # <<<<<<<<<<<<<<
 * 
 * 				ET.SubElement(svg, "use", {
 */
      __pyx_t_2 = PyNumber_Multiply(__pyx_v_j, __pyx_int_20); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 515, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = __Pyx_PyFloat_AddCObj(__pyx_float_10_5, __pyx_t_2, 10.5, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 515, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF_SET(__pyx_v_y, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "cshogi/_cshogi.pyx":517
 * 				y = 10.5 + j * 20
 * 
 * 				ET.SubElement(svg, "use", {             # <<<<<<<<<<<<<<
 * 					"xlink:href": "#{}".format(SVG_PIECE_DEF_IDS[pc]),
 * 					"x": str(x),
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_ET, __pyx_n_s_SubElement); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 517, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);

      /* "cshogi/_cshogi.pyx":518
 * 
 * 				ET.SubElement(svg, "use", {
 * 					"xlink:href": "#{}".format(SVG_PIECE_DEF_IDS[pc]),             # <<<<<<<<<<<<<<
 * 					"x": str(x),
 * 					"y": str(y),
 */
      __pyx_t_1 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 518, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s__3, __pyx_n_s_format); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 518, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_SVG_PIECE_DEF_IDS); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 518, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_15 = __Pyx_GetItemInt(__pyx_t_6, __pyx_v_pc, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 518, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_8, function);
        }
      }
      __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_6, __pyx_t_15) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_15);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 518, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (PyDict_SetItem(__pyx_t_1, __pyx_kp_s_xlink_href, __pyx_t_4) < 0) __PYX_ERR(0, 518, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "cshogi/_cshogi.pyx":519
 * 				ET.SubElement(svg, "use", {
 * 					"xlink:href": "#{}".format(SVG_PIECE_DEF_IDS[pc]),
 * 					"x": str(x),             # <<<<<<<<<<<<<<
 * 					"y": str(y),
 * 				})
 */
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 519, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_x, __pyx_t_4) < 0) __PYX_ERR(0, 518, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "cshogi/_cshogi.pyx":520
 * 					"xlink:href": "#{}".format(SVG_PIECE_DEF_IDS[pc]),
 * 					"x": str(x),
 * 					"y": str(y),             # <<<<<<<<<<<<<<
 * 				})
 * 
 */
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_y); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 520, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_y, __pyx_t_4) < 0) __PYX_ERR(0, 518, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = NULL;
      __pyx_t_7 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
          __pyx_t_7 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_2)) {
        PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_v_svg, __pyx_n_s_use, __pyx_t_1};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 517, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
        PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_v_svg, __pyx_n_s_use, __pyx_t_1};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 517, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(3+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 517, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        if (__pyx_t_4) {
          __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_4); __pyx_t_4 = NULL;
        }
        __Pyx_INCREF(__pyx_v_svg);
        __Pyx_GIVEREF(__pyx_v_svg);
        PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_v_svg);
        __Pyx_INCREF(__pyx_n_s_use);
        __Pyx_GIVEREF(__pyx_n_s_use);
        PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_n_s_use);
        __Pyx_GIVEREF(__pyx_t_1);
        PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_7, __pyx_t_1);
        __pyx_t_1 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 517, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "cshogi/_cshogi.pyx":512
 * 		for sq in SQUARES:
 * 			pc = self.__board.piece(sq)
 * 			if pc != NONE:             # <<<<<<<<<<<<<<
 * 				i, j = divmod(sq, 9)
 * 				x = 20.5 + (8 - i) * 20
 */
    }

    /* "cshogi/_cshogi.pyx":510
 * 		svg.append(ET.fromstring(SVG_COORDINATES))
 * 
 * 		for sq in SQUARES:             # <<<<<<<<<<<<<<
 * 			pc = self.__board.piece(sq)
 * 			if pc != NONE:
 */
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "cshogi/_cshogi.pyx":523
 * 				})
 * 
 * 		hand_pieces = [[], []]             # <<<<<<<<<<<<<<
 * 		for c in COLORS:
 * 			i = 0
 */
  __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 523, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 523, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyList_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 523, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_5);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
  __pyx_t_5 = 0;
  __pyx_t_3 = 0;
  __pyx_v_hand_pieces = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "cshogi/_cshogi.pyx":524
 * 
 * 		hand_pieces = [[], []]
 * 		for c in COLORS:             # <<<<<<<<<<<<<<
 * 			i = 0
 * 			for hp, n in zip(HAND_PIECES, self.__board.pieces_in_hand(c)):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_COLORS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 524, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_3 = __pyx_t_2; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
    __pyx_t_10 = NULL;
  } else {
    __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 524, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 524, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (likely(!__pyx_t_10)) {
      if (likely(PyList_CheckExact(__pyx_t_3))) {
        if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 524, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 524, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 524, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 524, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_10(__pyx_t_3);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 524, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "cshogi/_cshogi.pyx":525
 * 		hand_pieces = [[], []]
 * 		for c in COLORS:
 * 			i = 0             # <<<<<<<<<<<<<<
 * 			for hp, n in zip(HAND_PIECES, self.__board.pieces_in_hand(c)):
 * 				if n >= 11:
 */
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_int_0);

    /* "cshogi/_cshogi.pyx":526
 * 		for c in COLORS:
 * 			i = 0
 * 			for hp, n in zip(HAND_PIECES, self.__board.pieces_in_hand(c)):             # <<<<<<<<<<<<<<
 * 				if n >= 11:
 * 					hand_pieces[c].append((i, NUMBER_JAPANESE_KANJI_SYMBOLS[n % 10]))
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_HAND_PIECES); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 526, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_v_c); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 526, __pyx_L1_error)
    __pyx_t_5 = __pyx_convert_vector_to_py_int(__pyx_v_self->__pyx___board.pieces_in_hand(__pyx_t_7)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 526, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_8 = PyTuple_New(2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 526, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_t_5);
    __pyx_t_2 = 0;
    __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_zip, __pyx_t_8, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 526, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
      __pyx_t_8 = __pyx_t_5; __Pyx_INCREF(__pyx_t_8); __pyx_t_16 = 0;
      __pyx_t_17 = NULL;
    } else {
      __pyx_t_16 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 526, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_17 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 526, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    for (;;) {
      if (likely(!__pyx_t_17)) {
        if (likely(PyList_CheckExact(__pyx_t_8))) {
          if (__pyx_t_16 >= PyList_GET_SIZE(__pyx_t_8)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_5 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_16); __Pyx_INCREF(__pyx_t_5); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 526, __pyx_L1_error)
          #else
          __pyx_t_5 = PySequence_ITEM(__pyx_t_8, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 526, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          #endif
        } else {
          if (__pyx_t_16 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_16); __Pyx_INCREF(__pyx_t_5); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 526, __pyx_L1_error)
          #else
          __pyx_t_5 = PySequence_ITEM(__pyx_t_8, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 526, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          #endif
        }
      } else {
        __pyx_t_5 = __pyx_t_17(__pyx_t_8);
        if (unlikely(!__pyx_t_5)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 526, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_5);
      }
      if ((likely(PyTuple_CheckExact(__pyx_t_5))) || (PyList_CheckExact(__pyx_t_5))) {
        PyObject* sequence = __pyx_t_5;
        Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
        if (unlikely(size != 2)) {
          if (size > 2) __Pyx_RaiseTooManyValuesError(2);
          else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
          __PYX_ERR(0, 526, __pyx_L1_error)
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        if (likely(PyTuple_CheckExact(sequence))) {
          __pyx_t_2 = PyTuple_GET_ITEM(sequence, 0); 
          __pyx_t_1 = PyTuple_GET_ITEM(sequence, 1); 
        } else {
          __pyx_t_2 = PyList_GET_ITEM(sequence, 0); 
          __pyx_t_1 = PyList_GET_ITEM(sequence, 1); 
        }
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_1);
        #else
        __pyx_t_2 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 526, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_1 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 526, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      } else {
        Py_ssize_t index = -1;
        __pyx_t_4 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 526, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_14 = Py_TYPE(__pyx_t_4)->tp_iternext;
        index = 0; __pyx_t_2 = __pyx_t_14(__pyx_t_4); if (unlikely(!__pyx_t_2)) goto __pyx_L20_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_2);
        index = 1; __pyx_t_1 = __pyx_t_14(__pyx_t_4); if (unlikely(!__pyx_t_1)) goto __pyx_L20_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_1);
        if (__Pyx_IternextUnpackEndCheck(__pyx_t_14(__pyx_t_4), 2) < 0) __PYX_ERR(0, 526, __pyx_L1_error)
        __pyx_t_14 = NULL;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        goto __pyx_L21_unpacking_done;
        __pyx_L20_unpacking_failed:;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_14 = NULL;
        if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
        __PYX_ERR(0, 526, __pyx_L1_error)
        __pyx_L21_unpacking_done:;
      }
      __Pyx_XDECREF_SET(__pyx_v_hp, __pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_XDECREF_SET(__pyx_v_n, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "cshogi/_cshogi.pyx":527
 * 			i = 0
 * 			for hp, n in zip(HAND_PIECES, self.__board.pieces_in_hand(c)):
 * 				if n >= 11:             # <<<<<<<<<<<<<<
 * 					hand_pieces[c].append((i, NUMBER_JAPANESE_KANJI_SYMBOLS[n % 10]))
 * 					i += 1
 */
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_n, __pyx_int_11, Py_GE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 527, __pyx_L1_error)
      __pyx_t_12 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_12 < 0)) __PYX_ERR(0, 527, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_12) {

        /* "cshogi/_cshogi.pyx":528
 * 			for hp, n in zip(HAND_PIECES, self.__board.pieces_in_hand(c)):
 * 				if n >= 11:
 * 					hand_pieces[c].append((i, NUMBER_JAPANESE_KANJI_SYMBOLS[n % 10]))             # <<<<<<<<<<<<<<
 * 					i += 1
 * 					hand_pieces[c].append((i, NUMBER_JAPANESE_KANJI_SYMBOLS[10]))
 */
        __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_hand_pieces, __pyx_v_c); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 528, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_NUMBER_JAPANESE_KANJI_SYMBOLS); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 528, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_2 = __Pyx_PyInt_RemainderObjC(__pyx_v_n, __pyx_int_10, 10, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 528, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 528, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 528, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_INCREF(__pyx_v_i);
        __Pyx_GIVEREF(__pyx_v_i);
        PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_i);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_11 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_t_2); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 528, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "cshogi/_cshogi.pyx":529
 * 				if n >= 11:
 * 					hand_pieces[c].append((i, NUMBER_JAPANESE_KANJI_SYMBOLS[n % 10]))
 * 					i += 1             # <<<<<<<<<<<<<<
 * 					hand_pieces[c].append((i, NUMBER_JAPANESE_KANJI_SYMBOLS[10]))
 * 					i += 1
 */
        __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_v_i, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 529, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF_SET(__pyx_v_i, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "cshogi/_cshogi.pyx":530
 * 					hand_pieces[c].append((i, NUMBER_JAPANESE_KANJI_SYMBOLS[n % 10]))
 * 					i += 1
 * 					hand_pieces[c].append((i, NUMBER_JAPANESE_KANJI_SYMBOLS[10]))             # <<<<<<<<<<<<<<
 * 					i += 1
 * 				elif n >= 2:
 */
        __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_hand_pieces, __pyx_v_c); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 530, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_NUMBER_JAPANESE_KANJI_SYMBOLS); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 530, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 10, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 530, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 530, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_INCREF(__pyx_v_i);
        __Pyx_GIVEREF(__pyx_v_i);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_i);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_11 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_5); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 530, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "cshogi/_cshogi.pyx":531
 * 					i += 1
 * 					hand_pieces[c].append((i, NUMBER_JAPANESE_KANJI_SYMBOLS[10]))
 * 					i += 1             # <<<<<<<<<<<<<<
 * 				elif n >= 2:
 * 					hand_pieces[c].append((i, NUMBER_JAPANESE_KANJI_SYMBOLS[n]))
 */
        __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_v_i, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 531, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF_SET(__pyx_v_i, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "cshogi/_cshogi.pyx":527
 * 			i = 0
 * 			for hp, n in zip(HAND_PIECES, self.__board.pieces_in_hand(c)):
 * 				if n >= 11:             # <<<<<<<<<<<<<<
 * 					hand_pieces[c].append((i, NUMBER_JAPANESE_KANJI_SYMBOLS[n % 10]))
 * 					i += 1
 */
        goto __pyx_L22;
      }

      /* "cshogi/_cshogi.pyx":532
 * 					hand_pieces[c].append((i, NUMBER_JAPANESE_KANJI_SYMBOLS[10]))
 * 					i += 1
 * 				elif n >= 2:             # <<<<<<<<<<<<<<
 * 					hand_pieces[c].append((i, NUMBER_JAPANESE_KANJI_SYMBOLS[n]))
 * 					i += 1
 */
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_n, __pyx_int_2, Py_GE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 532, __pyx_L1_error)
      __pyx_t_12 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_12 < 0)) __PYX_ERR(0, 532, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_12) {

        /* "cshogi/_cshogi.pyx":533
 * 					i += 1
 * 				elif n >= 2:
 * 					hand_pieces[c].append((i, NUMBER_JAPANESE_KANJI_SYMBOLS[n]))             # <<<<<<<<<<<<<<
 * 					i += 1
 * 				if n >= 1:
 */
        __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_hand_pieces, __pyx_v_c); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 533, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_NUMBER_JAPANESE_KANJI_SYMBOLS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 533, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_t_2, __pyx_v_n); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 533, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 533, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_INCREF(__pyx_v_i);
        __Pyx_GIVEREF(__pyx_v_i);
        PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_i);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_11 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_t_2); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 533, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "cshogi/_cshogi.pyx":534
 * 				elif n >= 2:
 * 					hand_pieces[c].append((i, NUMBER_JAPANESE_KANJI_SYMBOLS[n]))
 * 					i += 1             # <<<<<<<<<<<<<<
 * 				if n >= 1:
 * 					hand_pieces[c].append((i, HAND_PIECE_JAPANESE_SYMBOLS[hp]))
 */
        __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_v_i, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 534, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF_SET(__pyx_v_i, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "cshogi/_cshogi.pyx":532
 * 					hand_pieces[c].append((i, NUMBER_JAPANESE_KANJI_SYMBOLS[10]))
 * 					i += 1
 * 				elif n >= 2:             # <<<<<<<<<<<<<<
 * 					hand_pieces[c].append((i, NUMBER_JAPANESE_KANJI_SYMBOLS[n]))
 * 					i += 1
 */
      }
      __pyx_L22:;

      /* "cshogi/_cshogi.pyx":535
 * 					hand_pieces[c].append((i, NUMBER_JAPANESE_KANJI_SYMBOLS[n]))
 * 					i += 1
 * 				if n >= 1:             # <<<<<<<<<<<<<<
 * 					hand_pieces[c].append((i, HAND_PIECE_JAPANESE_SYMBOLS[hp]))
 * 					i += 1
 */
      __pyx_t_2 = PyObject_RichCompare(__pyx_v_n, __pyx_int_1, Py_GE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 535, __pyx_L1_error)
      __pyx_t_12 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_12 < 0)) __PYX_ERR(0, 535, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (__pyx_t_12) {

        /* "cshogi/_cshogi.pyx":536
 * 					i += 1
 * 				if n >= 1:
 * 					hand_pieces[c].append((i, HAND_PIECE_JAPANESE_SYMBOLS[hp]))             # <<<<<<<<<<<<<<
 * 					i += 1
 * 			i += 1
 */
        __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_hand_pieces, __pyx_v_c); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 536, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_HAND_PIECE_JAPANESE_SYMBOLS); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 536, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_t_5, __pyx_v_hp); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 536, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 536, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_INCREF(__pyx_v_i);
        __Pyx_GIVEREF(__pyx_v_i);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_i);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_11 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_5); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 536, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "cshogi/_cshogi.pyx":537
 * 				if n >= 1:
 * 					hand_pieces[c].append((i, HAND_PIECE_JAPANESE_SYMBOLS[hp]))
 * 					i += 1             # <<<<<<<<<<<<<<
 * 			i += 1
 * 			hand_pieces[c].append((i, ""))
 */
        __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_v_i, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 537, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF_SET(__pyx_v_i, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "cshogi/_cshogi.pyx":535
 * 					hand_pieces[c].append((i, NUMBER_JAPANESE_KANJI_SYMBOLS[n]))
 * 					i += 1
 * 				if n >= 1:             # <<<<<<<<<<<<<<
 * 					hand_pieces[c].append((i, HAND_PIECE_JAPANESE_SYMBOLS[hp]))
 * 					i += 1
 */
      }

      /* "cshogi/_cshogi.pyx":526
 * 		for c in COLORS:
 * 			i = 0
 * 			for hp, n in zip(HAND_PIECES, self.__board.pieces_in_hand(c)):             # <<<<<<<<<<<<<<
 * 				if n >= 11:
 * 					hand_pieces[c].append((i, NUMBER_JAPANESE_KANJI_SYMBOLS[n % 10]))
 */
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "cshogi/_cshogi.pyx":538
 * 					hand_pieces[c].append((i, HAND_PIECE_JAPANESE_SYMBOLS[hp]))
 * 					i += 1
 * 			i += 1             # <<<<<<<<<<<<<<
 * 			hand_pieces[c].append((i, ""))
 * 			i += 1
 */
    __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_i, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 538, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF_SET(__pyx_v_i, __pyx_t_8);
    __pyx_t_8 = 0;

    /* "cshogi/_cshogi.pyx":539
 * 					i += 1
 * 			i += 1
 * 			hand_pieces[c].append((i, ""))             # <<<<<<<<<<<<<<
 * 			i += 1
 * 			hand_pieces[c].append((i, "" if c == BLACK else ""))
 */
    __pyx_t_8 = __Pyx_PyObject_GetItem(__pyx_v_hand_pieces, __pyx_v_c); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 539, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 539, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_i);
    __Pyx_INCREF(__pyx_kp_s__4);
    __Pyx_GIVEREF(__pyx_kp_s__4);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_kp_s__4);
    __pyx_t_11 = __Pyx_PyObject_Append(__pyx_t_8, __pyx_t_5); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 539, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "cshogi/_cshogi.pyx":540
 * 			i += 1
 * 			hand_pieces[c].append((i, ""))
 * 			i += 1             # <<<<<<<<<<<<<<
 * 			hand_pieces[c].append((i, "" if c == BLACK else ""))
 * 			i += 1
 */
    __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_v_i, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 540, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF_SET(__pyx_v_i, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "cshogi/_cshogi.pyx":541
 * 			hand_pieces[c].append((i, ""))
 * 			i += 1
 * 			hand_pieces[c].append((i, "" if c == BLACK else ""))             # <<<<<<<<<<<<<<
 * 			i += 1
 * 			hand_pieces[c].append(( i, "" if c == BLACK else ""))
 */
    __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_hand_pieces, __pyx_v_c); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 541, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_BLACK); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 541, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyObject_RichCompare(__pyx_v_c, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 541, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_12 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_12 < 0)) __PYX_ERR(0, 541, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (__pyx_t_12) {
      __Pyx_INCREF(__pyx_kp_s__5);
      __pyx_t_8 = __pyx_kp_s__5;
    } else {
      __Pyx_INCREF(__pyx_kp_s__6);
      __pyx_t_8 = __pyx_kp_s__6;
    }
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 541, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_i);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_8);
    __pyx_t_8 = 0;
    __pyx_t_11 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_t_4); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 541, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "cshogi/_cshogi.pyx":542
 * 			i += 1
 * 			hand_pieces[c].append((i, "" if c == BLACK else ""))
 * 			i += 1             # <<<<<<<<<<<<<<
 * 			hand_pieces[c].append(( i, "" if c == BLACK else ""))
 * 
 */
    __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_v_i, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 542, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF_SET(__pyx_v_i, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "cshogi/_cshogi.pyx":543
 * 			hand_pieces[c].append((i, "" if c == BLACK else ""))
 * 			i += 1
 * 			hand_pieces[c].append(( i, "" if c == BLACK else ""))             # <<<<<<<<<<<<<<
 * 
 * 		for c in COLORS:
 */
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_hand_pieces, __pyx_v_c); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 543, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_BLACK); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 543, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_2 = PyObject_RichCompare(__pyx_v_c, __pyx_t_8, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 543, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_12 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_12 < 0)) __PYX_ERR(0, 543, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_12) {
      __Pyx_INCREF(__pyx_kp_s__7);
      __pyx_t_5 = __pyx_kp_s__7;
    } else {
      __Pyx_INCREF(__pyx_kp_s__8);
      __pyx_t_5 = __pyx_kp_s__8;
    }
    __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 543, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_i);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_11 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_t_2); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 543, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cshogi/_cshogi.pyx":524
 * 
 * 		hand_pieces = [[], []]
 * 		for c in COLORS:             # <<<<<<<<<<<<<<
 * 			i = 0
 * 			for hp, n in zip(HAND_PIECES, self.__board.pieces_in_hand(c)):
 */
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cshogi/_cshogi.pyx":545
 * 			hand_pieces[c].append(( i, "" if c == BLACK else ""))
 * 
 * 		for c in COLORS:             # <<<<<<<<<<<<<<
 * 			if c == BLACK:
 * 				x = 214
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_COLORS); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 545, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_2 = __pyx_t_3; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
    __pyx_t_10 = NULL;
  } else {
    __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 545, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 545, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (likely(!__pyx_t_10)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 545, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 545, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 545, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 545, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_10(__pyx_t_2);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 545, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "cshogi/_cshogi.pyx":546
 * 
 * 		for c in COLORS:
 * 			if c == BLACK:             # <<<<<<<<<<<<<<
 * 				x = 214
 * 				y = 190
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_BLACK); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 546, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyObject_RichCompare(__pyx_v_c, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 546, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_12 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_12 < 0)) __PYX_ERR(0, 546, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (__pyx_t_12) {

      /* "cshogi/_cshogi.pyx":547
 * 		for c in COLORS:
 * 			if c == BLACK:
 * 				x = 214             # <<<<<<<<<<<<<<
 * 				y = 190
 * 			else:
 */
      __Pyx_INCREF(__pyx_int_214);
      __Pyx_XDECREF_SET(__pyx_v_x, __pyx_int_214);

      /* "cshogi/_cshogi.pyx":548
 * 			if c == BLACK:
 * 				x = 214
 * 				y = 190             # <<<<<<<<<<<<<<
 * 			else:
 * 				x = -16
 */
      __Pyx_INCREF(__pyx_int_190);
      __Pyx_XDECREF_SET(__pyx_v_y, __pyx_int_190);

      /* "cshogi/_cshogi.pyx":546
 * 
 * 		for c in COLORS:
 * 			if c == BLACK:             # <<<<<<<<<<<<<<
 * 				x = 214
 * 				y = 190
 */
      goto __pyx_L26;
    }

    /* "cshogi/_cshogi.pyx":550
 * 				y = 190
 * 			else:
 * 				x = -16             # <<<<<<<<<<<<<<
 * 				y = -10
 * 			scale = 1
 */
    /*else*/ {
      __Pyx_INCREF(__pyx_int_neg_16);
      __Pyx_XDECREF_SET(__pyx_v_x, __pyx_int_neg_16);

      /* "cshogi/_cshogi.pyx":551
 * 			else:
 * 				x = -16
 * 				y = -10             # <<<<<<<<<<<<<<
 * 			scale = 1
 * 			if len(hand_pieces[c]) + 1 > 13:
 */
      __Pyx_INCREF(__pyx_int_neg_10);
      __Pyx_XDECREF_SET(__pyx_v_y, __pyx_int_neg_10);
    }
    __pyx_L26:;

    /* "cshogi/_cshogi.pyx":552
 * 				x = -16
 * 				y = -10
 * 			scale = 1             # <<<<<<<<<<<<<<
 * 			if len(hand_pieces[c]) + 1 > 13:
 * 				scale = 13.0 / (len(hand_pieces[c]) + 1)
 */
    __Pyx_INCREF(__pyx_int_1);
    __Pyx_DECREF_SET(__pyx_v_scale, __pyx_int_1);

    /* "cshogi/_cshogi.pyx":553
 * 				y = -10
 * 			scale = 1
 * 			if len(hand_pieces[c]) + 1 > 13:             # <<<<<<<<<<<<<<
 * 				scale = 13.0 / (len(hand_pieces[c]) + 1)
 * 			for i, text in hand_pieces[c]:
 */
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_hand_pieces, __pyx_v_c); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 553, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_16 = PyObject_Length(__pyx_t_4); if (unlikely(__pyx_t_16 == ((Py_ssize_t)-1))) __PYX_ERR(0, 553, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_12 = (((__pyx_t_16 + 1) > 13) != 0);
    if (__pyx_t_12) {

      /* "cshogi/_cshogi.pyx":554
 * 			scale = 1
 * 			if len(hand_pieces[c]) + 1 > 13:
 * 				scale = 13.0 / (len(hand_pieces[c]) + 1)             # <<<<<<<<<<<<<<
 * 			for i, text in hand_pieces[c]:
 * 				e = ET.SubElement(svg, "text", {
 */
      __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_hand_pieces, __pyx_v_c); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 554, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_16 = PyObject_Length(__pyx_t_4); if (unlikely(__pyx_t_16 == ((Py_ssize_t)-1))) __PYX_ERR(0, 554, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_18 = (__pyx_t_16 + 1);
      if (unlikely(__pyx_t_18 == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 554, __pyx_L1_error)
      }
      __pyx_t_4 = PyFloat_FromDouble((13.0 / __pyx_t_18)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 554, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF_SET(__pyx_v_scale, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "cshogi/_cshogi.pyx":553
 * 				y = -10
 * 			scale = 1
 * 			if len(hand_pieces[c]) + 1 > 13:             # <<<<<<<<<<<<<<
 * 				scale = 13.0 / (len(hand_pieces[c]) + 1)
 * 			for i, text in hand_pieces[c]:
 */
    }

    /* "cshogi/_cshogi.pyx":555
 * 			if len(hand_pieces[c]) + 1 > 13:
 * 				scale = 13.0 / (len(hand_pieces[c]) + 1)
 * 			for i, text in hand_pieces[c]:             # <<<<<<<<<<<<<<
 * 				e = ET.SubElement(svg, "text", {
 * 					"font-family": "serif",
 */
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_hand_pieces, __pyx_v_c); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 555, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_3 = __pyx_t_4; __Pyx_INCREF(__pyx_t_3); __pyx_t_18 = 0;
      __pyx_t_17 = NULL;
    } else {
      __pyx_t_18 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 555, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_17 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 555, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_17)) {
        if (likely(PyList_CheckExact(__pyx_t_3))) {
          if (__pyx_t_18 >= PyList_GET_SIZE(__pyx_t_3)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_18); __Pyx_INCREF(__pyx_t_4); __pyx_t_18++; if (unlikely(0 < 0)) __PYX_ERR(0, 555, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_18); __pyx_t_18++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 555, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_18 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_18); __Pyx_INCREF(__pyx_t_4); __pyx_t_18++; if (unlikely(0 < 0)) __PYX_ERR(0, 555, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_18); __pyx_t_18++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 555, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_17(__pyx_t_3);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 555, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      if ((likely(PyTuple_CheckExact(__pyx_t_4))) || (PyList_CheckExact(__pyx_t_4))) {
        PyObject* sequence = __pyx_t_4;
        Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
        if (unlikely(size != 2)) {
          if (size > 2) __Pyx_RaiseTooManyValuesError(2);
          else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
          __PYX_ERR(0, 555, __pyx_L1_error)
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        if (likely(PyTuple_CheckExact(sequence))) {
          __pyx_t_5 = PyTuple_GET_ITEM(sequence, 0); 
          __pyx_t_8 = PyTuple_GET_ITEM(sequence, 1); 
        } else {
          __pyx_t_5 = PyList_GET_ITEM(sequence, 0); 
          __pyx_t_8 = PyList_GET_ITEM(sequence, 1); 
        }
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        #else
        __pyx_t_5 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 555, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_8 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 555, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        #endif
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        Py_ssize_t index = -1;
        __pyx_t_1 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 555, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_14 = Py_TYPE(__pyx_t_1)->tp_iternext;
        index = 0; __pyx_t_5 = __pyx_t_14(__pyx_t_1); if (unlikely(!__pyx_t_5)) goto __pyx_L30_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_5);
        index = 1; __pyx_t_8 = __pyx_t_14(__pyx_t_1); if (unlikely(!__pyx_t_8)) goto __pyx_L30_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_8);
        if (__Pyx_IternextUnpackEndCheck(__pyx_t_14(__pyx_t_1), 2) < 0) __PYX_ERR(0, 555, __pyx_L1_error)
        __pyx_t_14 = NULL;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L31_unpacking_done;
        __pyx_L30_unpacking_failed:;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_14 = NULL;
        if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
        __PYX_ERR(0, 555, __pyx_L1_error)
        __pyx_L31_unpacking_done:;
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
      __pyx_t_5 = 0;
      __Pyx_XDECREF_SET(__pyx_v_text, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "cshogi/_cshogi.pyx":556
 * 				scale = 13.0 / (len(hand_pieces[c]) + 1)
 * 			for i, text in hand_pieces[c]:
 * 				e = ET.SubElement(svg, "text", {             # <<<<<<<<<<<<<<
 * 					"font-family": "serif",
 * 					"font-size": str(14 * scale),
 */
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_ET, __pyx_n_s_SubElement); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 556, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);

      /* "cshogi/_cshogi.pyx":557
 * 			for i, text in hand_pieces[c]:
 * 				e = ET.SubElement(svg, "text", {
 * 					"font-family": "serif",             # <<<<<<<<<<<<<<
 * 					"font-size": str(14 * scale),
 * 				})
 */
      __pyx_t_5 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 557, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_font_family, __pyx_n_s_serif) < 0) __PYX_ERR(0, 557, __pyx_L1_error)

      /* "cshogi/_cshogi.pyx":558
 * 				e = ET.SubElement(svg, "text", {
 * 					"font-family": "serif",
 * 					"font-size": str(14 * scale),             # <<<<<<<<<<<<<<
 * 				})
 * 				e.set("x", str(x))
 */
      __pyx_t_1 = PyNumber_Multiply(__pyx_int_14, __pyx_v_scale); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 558, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_15 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_t_1); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 558, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_font_size, __pyx_t_15) < 0) __PYX_ERR(0, 557, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      __pyx_t_15 = NULL;
      __pyx_t_7 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
        __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_8);
        if (likely(__pyx_t_15)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
          __Pyx_INCREF(__pyx_t_15);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_8, function);
          __pyx_t_7 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[4] = {__pyx_t_15, __pyx_v_svg, __pyx_n_s_text, __pyx_t_5};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 556, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[4] = {__pyx_t_15, __pyx_v_svg, __pyx_n_s_text, __pyx_t_5};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 556, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      } else
      #endif
      {
        __pyx_t_1 = PyTuple_New(3+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 556, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        if (__pyx_t_15) {
          __Pyx_GIVEREF(__pyx_t_15); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_15); __pyx_t_15 = NULL;
        }
        __Pyx_INCREF(__pyx_v_svg);
        __Pyx_GIVEREF(__pyx_v_svg);
        PyTuple_SET_ITEM(__pyx_t_1, 0+__pyx_t_7, __pyx_v_svg);
        __Pyx_INCREF(__pyx_n_s_text);
        __Pyx_GIVEREF(__pyx_n_s_text);
        PyTuple_SET_ITEM(__pyx_t_1, 1+__pyx_t_7, __pyx_n_s_text);
        __Pyx_GIVEREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_1, 2+__pyx_t_7, __pyx_t_5);
        __pyx_t_5 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_1, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 556, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      }
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF_SET(__pyx_v_e, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "cshogi/_cshogi.pyx":560
 * 					"font-size": str(14 * scale),
 * 				})
 * 				e.set("x", str(x))             # <<<<<<<<<<<<<<
 * 				e.set("y", str(y - 14 * scale * i))
 * 				if c == WHITE:
 */
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_e, __pyx_n_s_set); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 560, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 560, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_5 = NULL;
      __pyx_t_7 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_8, function);
          __pyx_t_7 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_n_s_x, __pyx_t_1};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 560, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_n_s_x, __pyx_t_1};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 560, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      } else
      #endif
      {
        __pyx_t_15 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 560, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        if (__pyx_t_5) {
          __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_t_5); __pyx_t_5 = NULL;
        }
        __Pyx_INCREF(__pyx_n_s_x);
        __Pyx_GIVEREF(__pyx_n_s_x);
        PyTuple_SET_ITEM(__pyx_t_15, 0+__pyx_t_7, __pyx_n_s_x);
        __Pyx_GIVEREF(__pyx_t_1);
        PyTuple_SET_ITEM(__pyx_t_15, 1+__pyx_t_7, __pyx_t_1);
        __pyx_t_1 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_15, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 560, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      }
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "cshogi/_cshogi.pyx":561
 * 				})
 * 				e.set("x", str(x))
 * 				e.set("y", str(y - 14 * scale * i))             # <<<<<<<<<<<<<<
 * 				if c == WHITE:
 * 					e.set("transform", "rotate(180)")
 */
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_e, __pyx_n_s_set); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 561, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_15 = PyNumber_Multiply(__pyx_int_14, __pyx_v_scale); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 561, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      __pyx_t_1 = PyNumber_Multiply(__pyx_t_15, __pyx_v_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 561, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      __pyx_t_15 = PyNumber_Subtract(__pyx_v_y, __pyx_t_1); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 561, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_t_15); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 561, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      __pyx_t_15 = NULL;
      __pyx_t_7 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
        __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_8);
        if (likely(__pyx_t_15)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
          __Pyx_INCREF(__pyx_t_15);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_8, function);
          __pyx_t_7 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[3] = {__pyx_t_15, __pyx_n_s_y, __pyx_t_1};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 561, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[3] = {__pyx_t_15, __pyx_n_s_y, __pyx_t_1};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 561, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      } else
      #endif
      {
        __pyx_t_5 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 561, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        if (__pyx_t_15) {
          __Pyx_GIVEREF(__pyx_t_15); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_15); __pyx_t_15 = NULL;
        }
        __Pyx_INCREF(__pyx_n_s_y);
        __Pyx_GIVEREF(__pyx_n_s_y);
        PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_7, __pyx_n_s_y);
        __Pyx_GIVEREF(__pyx_t_1);
        PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_7, __pyx_t_1);
        __pyx_t_1 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 561, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "cshogi/_cshogi.pyx":562
 * 				e.set("x", str(x))
 * 				e.set("y", str(y - 14 * scale * i))
 * 				if c == WHITE:             # <<<<<<<<<<<<<<
 * 					e.set("transform", "rotate(180)")
 * 				e.text = text
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_WHITE); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 562, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_8 = PyObject_RichCompare(__pyx_v_c, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_8); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 562, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_12 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_12 < 0)) __PYX_ERR(0, 562, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (__pyx_t_12) {

        /* "cshogi/_cshogi.pyx":563
 * 				e.set("y", str(y - 14 * scale * i))
 * 				if c == WHITE:
 * 					e.set("transform", "rotate(180)")             # <<<<<<<<<<<<<<
 * 				e.text = text
 * 
 */
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_e, __pyx_n_s_set); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 563, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 563, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "cshogi/_cshogi.pyx":562
 * 				e.set("x", str(x))
 * 				e.set("y", str(y - 14 * scale * i))
 * 				if c == WHITE:             # <<<<<<<<<<<<<<
 * 					e.set("transform", "rotate(180)")
 * 				e.text = text
 */
      }

      /* "cshogi/_cshogi.pyx":564
 * 				if c == WHITE:
 * 					e.set("transform", "rotate(180)")
 * 				e.text = text             # <<<<<<<<<<<<<<
 * 
 * 		return SvgWrapper(ET.tostring(svg).decode("utf-8"))
 */
      if (__Pyx_PyObject_SetAttrStr(__pyx_v_e, __pyx_n_s_text, __pyx_v_text) < 0) __PYX_ERR(0, 564, __pyx_L1_error)

      /* "cshogi/_cshogi.pyx":555
 * 			if len(hand_pieces[c]) + 1 > 13:
 * 				scale = 13.0 / (len(hand_pieces[c]) + 1)
 * 			for i, text in hand_pieces[c]:             # <<<<<<<<<<<<<<
 * 				e = ET.SubElement(svg, "text", {
 * 					"font-family": "serif",
 */
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cshogi/_cshogi.pyx":545
 * 			hand_pieces[c].append(( i, "" if c == BLACK else ""))
 * 
 * 		for c in COLORS:             # <<<<<<<<<<<<<<
 * 			if c == BLACK:
 * 				x = 214
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cshogi/_cshogi.pyx":566
 * 				e.text = text
 * 
 * 		return SvgWrapper(ET.tostring(svg).decode("utf-8"))             # <<<<<<<<<<<<<<
 * 
 * 	def _repr_svg_(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_SvgWrapper); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_ET, __pyx_n_s_tostring); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_8 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_1, __pyx_v_svg) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_svg);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_decode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_8, __pyx_kp_s_utf_8) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_s_utf_8);
  __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":469
 * 		return self.__board.bookKey()
 * 
 * 	def to_svg(self, lastmove=None, scale=1.0):             # <<<<<<<<<<<<<<
 * 		import xml.etree.ElementTree as ET
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_AddTraceback("cshogi._cshogi.Board.to_svg", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ET);
  __Pyx_XDECREF(__pyx_v_width);
  __Pyx_XDECREF(__pyx_v_height);
  __Pyx_XDECREF(__pyx_v_svg);
  __Pyx_XDECREF(__pyx_v_defs);
  __Pyx_XDECREF(__pyx_v_piece_def);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_j);
  __Pyx_XDECREF(__pyx_v_sq);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XDECREF(__pyx_v_hand_pieces);
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XDECREF(__pyx_v_hp);
  __Pyx_XDECREF(__pyx_v_n);
  __Pyx_XDECREF(__pyx_v_text);
  __Pyx_XDECREF(__pyx_v_e);
  __Pyx_XDECREF(__pyx_v_scale);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":568
 * 		return SvgWrapper(ET.tostring(svg).decode("utf-8"))
 * 
 * 	def _repr_svg_(self):             # <<<<<<<<<<<<<<
 * 		cdef int move = self.__board.peek()
 * 		if move == 0:
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_93_repr_svg_(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_93_repr_svg_(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_repr_svg_ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_92_repr_svg_(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_92_repr_svg_(struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  int __pyx_v_move;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_repr_svg_", 0);

  /* "cshogi/_cshogi.pyx":569
 * 
 * 	def _repr_svg_(self):
 * 		cdef int move = self.__board.peek()             # <<<<<<<<<<<<<<
 * 		if move == 0:
 * 			return self.to_svg()
 */
  __pyx_v_move = __pyx_v_self->__pyx___board.peek();

  /* "cshogi/_cshogi.pyx":570
 * 	def _repr_svg_(self):
 * 		cdef int move = self.__board.peek()
 * 		if move == 0:             # <<<<<<<<<<<<<<
 * 			return self.to_svg()
 * 		else:
 */
  __pyx_t_1 = ((__pyx_v_move == 0) != 0);
  if (__pyx_t_1) {

    /* "cshogi/_cshogi.pyx":571
 * 		cdef int move = self.__board.peek()
 * 		if move == 0:
 * 			return self.to_svg()             # <<<<<<<<<<<<<<
 * 		else:
 * 			return self.to_svg(move)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_to_svg); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 571, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 571, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "cshogi/_cshogi.pyx":570
 * 	def _repr_svg_(self):
 * 		cdef int move = self.__board.peek()
 * 		if move == 0:             # <<<<<<<<<<<<<<
 * 			return self.to_svg()
 * 		else:
 */
  }

  /* "cshogi/_cshogi.pyx":573
 * 			return self.to_svg()
 * 		else:
 * 			return self.to_svg(move)             # <<<<<<<<<<<<<<
 * 
 * def piece_to_piece_type(int p):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_to_svg); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 573, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_move); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 573, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 573, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }

  /* "cshogi/_cshogi.pyx":568
 * 		return SvgWrapper(ET.tostring(svg).decode("utf-8"))
 * 
 * 	def _repr_svg_(self):             # <<<<<<<<<<<<<<
 * 		cdef int move = self.__board.peek()
 * 		if move == 0:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cshogi._cshogi.Board._repr_svg_", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_95__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_95__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_94__reduce_cython__(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_94__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_97__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_5Board_97__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_5Board_96__setstate_cython__(((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_5Board_96__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Board.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":575
 * 			return self.to_svg(move)
 * 
 * def piece_to_piece_type(int p):             # <<<<<<<<<<<<<<
 * 	return __piece_to_piece_type(p)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_5piece_to_piece_type(PyObject *__pyx_self, PyObject *__pyx_arg_p); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_5piece_to_piece_type = {"piece_to_piece_type", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5piece_to_piece_type, METH_O, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_5piece_to_piece_type(PyObject *__pyx_self, PyObject *__pyx_arg_p) {
  int __pyx_v_p;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("piece_to_piece_type (wrapper)", 0);
  assert(__pyx_arg_p); {
    __pyx_v_p = __Pyx_PyInt_As_int(__pyx_arg_p); if (unlikely((__pyx_v_p == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 575, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.piece_to_piece_type", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_4piece_to_piece_type(__pyx_self, ((int)__pyx_v_p));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_4piece_to_piece_type(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_p) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("piece_to_piece_type", 0);

  /* "cshogi/_cshogi.pyx":576
 * 
 * def piece_to_piece_type(int p):
 * 	return __piece_to_piece_type(p)             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "cshogi.h":
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__piece_to_piece_type(__pyx_v_p)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 576, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":575
 * 			return self.to_svg(move)
 * 
 * def piece_to_piece_type(int p):             # <<<<<<<<<<<<<<
 * 	return __piece_to_piece_type(p)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.piece_to_piece_type", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":608
 * 	cdef __LegalMoveList __ml
 * 
 * 	def __cinit__(self, Board board):             # <<<<<<<<<<<<<<
 * 		self.__ml = __LegalMoveList(board.__board)
 * 
 */

/* Python wrapper */
static int __pyx_pw_6cshogi_7_cshogi_13LegalMoveList_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6cshogi_7_cshogi_13LegalMoveList_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_board = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_board,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_board)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 608, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_board = ((struct __pyx_obj_6cshogi_7_cshogi_Board *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 608, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.LegalMoveList.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_board), __pyx_ptype_6cshogi_7_cshogi_Board, 1, "board", 0))) __PYX_ERR(0, 608, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_13LegalMoveList___cinit__(((struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *)__pyx_v_self), __pyx_v_board);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6cshogi_7_cshogi_13LegalMoveList___cinit__(struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *__pyx_v_self, struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_board) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __LegalMoveList __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cshogi/_cshogi.pyx":609
 * 
 * 	def __cinit__(self, Board board):
 * 		self.__ml = __LegalMoveList(board.__board)             # <<<<<<<<<<<<<<
 * 
 * 	def __iter__(self):
 */
  try {
    __pyx_t_1 = __LegalMoveList(__pyx_v_board->__pyx___board);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 609, __pyx_L1_error)
  }
  __pyx_v_self->__pyx___ml = __pyx_t_1;

  /* "cshogi/_cshogi.pyx":608
 * 	cdef __LegalMoveList __ml
 * 
 * 	def __cinit__(self, Board board):             # <<<<<<<<<<<<<<
 * 		self.__ml = __LegalMoveList(board.__board)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cshogi._cshogi.LegalMoveList.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":611
 * 		self.__ml = __LegalMoveList(board.__board)
 * 
 * 	def __iter__(self):             # <<<<<<<<<<<<<<
 * 		return self
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_13LegalMoveList_3__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_13LegalMoveList_3__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_13LegalMoveList_2__iter__(((struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_13LegalMoveList_2__iter__(struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__", 0);

  /* "cshogi/_cshogi.pyx":612
 * 
 * 	def __iter__(self):
 * 		return self             # <<<<<<<<<<<<<<
 * 
 * 	def __next__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":611
 * 		self.__ml = __LegalMoveList(board.__board)
 * 
 * 	def __iter__(self):             # <<<<<<<<<<<<<<
 * 		return self
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":614
 * 		return self
 * 
 * 	def __next__(self):             # <<<<<<<<<<<<<<
 * 		if self.__ml.end():
 * 			raise StopIteration()
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_13LegalMoveList_5__next__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_13LegalMoveList_5__next__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__next__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_13LegalMoveList_4__next__(((struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_13LegalMoveList_4__next__(struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *__pyx_v_self) {
  int __pyx_v_move;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__next__", 0);

  /* "cshogi/_cshogi.pyx":615
 * 
 * 	def __next__(self):
 * 		if self.__ml.end():             # <<<<<<<<<<<<<<
 * 			raise StopIteration()
 * 		move = self.__ml.move()
 */
  __pyx_t_1 = (__pyx_v_self->__pyx___ml.end() != 0);
  if (unlikely(__pyx_t_1)) {

    /* "cshogi/_cshogi.pyx":616
 * 	def __next__(self):
 * 		if self.__ml.end():
 * 			raise StopIteration()             # <<<<<<<<<<<<<<
 * 		move = self.__ml.move()
 * 		self.__ml.next()
 */
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_builtin_StopIteration); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 616, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 616, __pyx_L1_error)

    /* "cshogi/_cshogi.pyx":615
 * 
 * 	def __next__(self):
 * 		if self.__ml.end():             # <<<<<<<<<<<<<<
 * 			raise StopIteration()
 * 		move = self.__ml.move()
 */
  }

  /* "cshogi/_cshogi.pyx":617
 * 		if self.__ml.end():
 * 			raise StopIteration()
 * 		move = self.__ml.move()             # <<<<<<<<<<<<<<
 * 		self.__ml.next()
 * 		return move
 */
  __pyx_v_move = __pyx_v_self->__pyx___ml.move();

  /* "cshogi/_cshogi.pyx":618
 * 			raise StopIteration()
 * 		move = self.__ml.move()
 * 		self.__ml.next()             # <<<<<<<<<<<<<<
 * 		return move
 * 
 */
  __pyx_v_self->__pyx___ml.next();

  /* "cshogi/_cshogi.pyx":619
 * 		move = self.__ml.move()
 * 		self.__ml.next()
 * 		return move             # <<<<<<<<<<<<<<
 * 
 * 	def __len__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_move); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 619, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":614
 * 		return self
 * 
 * 	def __next__(self):             # <<<<<<<<<<<<<<
 * 		if self.__ml.end():
 * 			raise StopIteration()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cshogi._cshogi.LegalMoveList.__next__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":621
 * 		return move
 * 
 * 	def __len__(self):             # <<<<<<<<<<<<<<
 * 		return self.__ml.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_6cshogi_7_cshogi_13LegalMoveList_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_6cshogi_7_cshogi_13LegalMoveList_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_13LegalMoveList_6__len__(((struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_6cshogi_7_cshogi_13LegalMoveList_6__len__(struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "cshogi/_cshogi.pyx":622
 * 
 * 	def __len__(self):
 * 		return self.__ml.size()             # <<<<<<<<<<<<<<
 * 
 * def move_to(int move):
 */
  __pyx_r = __pyx_v_self->__pyx___ml.size();
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":621
 * 		return move
 * 
 * 	def __len__(self):             # <<<<<<<<<<<<<<
 * 		return self.__ml.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_13LegalMoveList_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_13LegalMoveList_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_13LegalMoveList_8__reduce_cython__(((struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_13LegalMoveList_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.LegalMoveList.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_13LegalMoveList_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_13LegalMoveList_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_13LegalMoveList_10__setstate_cython__(((struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_13LegalMoveList_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.LegalMoveList.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":624
 * 		return self.__ml.size()
 * 
 * def move_to(int move):             # <<<<<<<<<<<<<<
 * 	return __move_to(move)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_7move_to(PyObject *__pyx_self, PyObject *__pyx_arg_move); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_7move_to = {"move_to", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_7move_to, METH_O, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_7move_to(PyObject *__pyx_self, PyObject *__pyx_arg_move) {
  int __pyx_v_move;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_to (wrapper)", 0);
  assert(__pyx_arg_move); {
    __pyx_v_move = __Pyx_PyInt_As_int(__pyx_arg_move); if (unlikely((__pyx_v_move == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 624, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.move_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_6move_to(__pyx_self, ((int)__pyx_v_move));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_6move_to(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_to", 0);

  /* "cshogi/_cshogi.pyx":625
 * 
 * def move_to(int move):
 * 	return __move_to(move)             # <<<<<<<<<<<<<<
 * 
 * def move_from(int move):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__move_to(__pyx_v_move)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 625, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":624
 * 		return self.__ml.size()
 * 
 * def move_to(int move):             # <<<<<<<<<<<<<<
 * 	return __move_to(move)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.move_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":627
 * 	return __move_to(move)
 * 
 * def move_from(int move):             # <<<<<<<<<<<<<<
 * 	return __move_from(move)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_9move_from(PyObject *__pyx_self, PyObject *__pyx_arg_move); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_9move_from = {"move_from", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_9move_from, METH_O, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_9move_from(PyObject *__pyx_self, PyObject *__pyx_arg_move) {
  int __pyx_v_move;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_from (wrapper)", 0);
  assert(__pyx_arg_move); {
    __pyx_v_move = __Pyx_PyInt_As_int(__pyx_arg_move); if (unlikely((__pyx_v_move == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 627, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.move_from", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_8move_from(__pyx_self, ((int)__pyx_v_move));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_8move_from(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_from", 0);

  /* "cshogi/_cshogi.pyx":628
 * 
 * def move_from(int move):
 * 	return __move_from(move)             # <<<<<<<<<<<<<<
 * 
 * def move_cap(int move):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__move_from(__pyx_v_move)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 628, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":627
 * 	return __move_to(move)
 * 
 * def move_from(int move):             # <<<<<<<<<<<<<<
 * 	return __move_from(move)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.move_from", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":630
 * 	return __move_from(move)
 * 
 * def move_cap(int move):             # <<<<<<<<<<<<<<
 * 	return __move_cap(move)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_11move_cap(PyObject *__pyx_self, PyObject *__pyx_arg_move); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_11move_cap = {"move_cap", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_11move_cap, METH_O, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_11move_cap(PyObject *__pyx_self, PyObject *__pyx_arg_move) {
  int __pyx_v_move;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_cap (wrapper)", 0);
  assert(__pyx_arg_move); {
    __pyx_v_move = __Pyx_PyInt_As_int(__pyx_arg_move); if (unlikely((__pyx_v_move == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 630, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.move_cap", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_10move_cap(__pyx_self, ((int)__pyx_v_move));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_10move_cap(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_cap", 0);

  /* "cshogi/_cshogi.pyx":631
 * 
 * def move_cap(int move):
 * 	return __move_cap(move)             # <<<<<<<<<<<<<<
 * 
 * def move_is_promotion(int move):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__move_cap(__pyx_v_move)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 631, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":630
 * 	return __move_from(move)
 * 
 * def move_cap(int move):             # <<<<<<<<<<<<<<
 * 	return __move_cap(move)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.move_cap", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":633
 * 	return __move_cap(move)
 * 
 * def move_is_promotion(int move):             # <<<<<<<<<<<<<<
 * 	return __move_is_promotion(move)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_13move_is_promotion(PyObject *__pyx_self, PyObject *__pyx_arg_move); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_13move_is_promotion = {"move_is_promotion", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_13move_is_promotion, METH_O, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_13move_is_promotion(PyObject *__pyx_self, PyObject *__pyx_arg_move) {
  int __pyx_v_move;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_is_promotion (wrapper)", 0);
  assert(__pyx_arg_move); {
    __pyx_v_move = __Pyx_PyInt_As_int(__pyx_arg_move); if (unlikely((__pyx_v_move == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 633, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.move_is_promotion", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_12move_is_promotion(__pyx_self, ((int)__pyx_v_move));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_12move_is_promotion(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_is_promotion", 0);

  /* "cshogi/_cshogi.pyx":634
 * 
 * def move_is_promotion(int move):
 * 	return __move_is_promotion(move)             # <<<<<<<<<<<<<<
 * 
 * def move_is_drop(int move):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__move_is_promotion(__pyx_v_move)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 634, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":633
 * 	return __move_cap(move)
 * 
 * def move_is_promotion(int move):             # <<<<<<<<<<<<<<
 * 	return __move_is_promotion(move)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.move_is_promotion", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":636
 * 	return __move_is_promotion(move)
 * 
 * def move_is_drop(int move):             # <<<<<<<<<<<<<<
 * 	return __move_is_drop(move)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_15move_is_drop(PyObject *__pyx_self, PyObject *__pyx_arg_move); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_15move_is_drop = {"move_is_drop", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_15move_is_drop, METH_O, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_15move_is_drop(PyObject *__pyx_self, PyObject *__pyx_arg_move) {
  int __pyx_v_move;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_is_drop (wrapper)", 0);
  assert(__pyx_arg_move); {
    __pyx_v_move = __Pyx_PyInt_As_int(__pyx_arg_move); if (unlikely((__pyx_v_move == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 636, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.move_is_drop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_14move_is_drop(__pyx_self, ((int)__pyx_v_move));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_14move_is_drop(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_is_drop", 0);

  /* "cshogi/_cshogi.pyx":637
 * 
 * def move_is_drop(int move):
 * 	return __move_is_drop(move)             # <<<<<<<<<<<<<<
 * 
 * def move_from_piece_type(int move):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__move_is_drop(__pyx_v_move)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 637, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":636
 * 	return __move_is_promotion(move)
 * 
 * def move_is_drop(int move):             # <<<<<<<<<<<<<<
 * 	return __move_is_drop(move)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.move_is_drop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":639
 * 	return __move_is_drop(move)
 * 
 * def move_from_piece_type(int move):             # <<<<<<<<<<<<<<
 * 	return __move_from_piece_type(move)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_17move_from_piece_type(PyObject *__pyx_self, PyObject *__pyx_arg_move); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_17move_from_piece_type = {"move_from_piece_type", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_17move_from_piece_type, METH_O, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_17move_from_piece_type(PyObject *__pyx_self, PyObject *__pyx_arg_move) {
  int __pyx_v_move;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_from_piece_type (wrapper)", 0);
  assert(__pyx_arg_move); {
    __pyx_v_move = __Pyx_PyInt_As_int(__pyx_arg_move); if (unlikely((__pyx_v_move == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 639, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.move_from_piece_type", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_16move_from_piece_type(__pyx_self, ((int)__pyx_v_move));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_16move_from_piece_type(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_from_piece_type", 0);

  /* "cshogi/_cshogi.pyx":640
 * 
 * def move_from_piece_type(int move):
 * 	return __move_from_piece_type(move)             # <<<<<<<<<<<<<<
 * 
 * def move_drop_hand_piece(int move):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__move_from_piece_type(__pyx_v_move)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 640, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":639
 * 	return __move_is_drop(move)
 * 
 * def move_from_piece_type(int move):             # <<<<<<<<<<<<<<
 * 	return __move_from_piece_type(move)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.move_from_piece_type", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":642
 * 	return __move_from_piece_type(move)
 * 
 * def move_drop_hand_piece(int move):             # <<<<<<<<<<<<<<
 * 	return __move_drop_hand_piece(move)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_19move_drop_hand_piece(PyObject *__pyx_self, PyObject *__pyx_arg_move); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_19move_drop_hand_piece = {"move_drop_hand_piece", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_19move_drop_hand_piece, METH_O, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_19move_drop_hand_piece(PyObject *__pyx_self, PyObject *__pyx_arg_move) {
  int __pyx_v_move;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_drop_hand_piece (wrapper)", 0);
  assert(__pyx_arg_move); {
    __pyx_v_move = __Pyx_PyInt_As_int(__pyx_arg_move); if (unlikely((__pyx_v_move == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 642, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.move_drop_hand_piece", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_18move_drop_hand_piece(__pyx_self, ((int)__pyx_v_move));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_18move_drop_hand_piece(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_drop_hand_piece", 0);

  /* "cshogi/_cshogi.pyx":643
 * 
 * def move_drop_hand_piece(int move):
 * 	return __move_drop_hand_piece(move)             # <<<<<<<<<<<<<<
 * 
 * def move16(int move):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__move_drop_hand_piece(__pyx_v_move)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":642
 * 	return __move_from_piece_type(move)
 * 
 * def move_drop_hand_piece(int move):             # <<<<<<<<<<<<<<
 * 	return __move_drop_hand_piece(move)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.move_drop_hand_piece", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":645
 * 	return __move_drop_hand_piece(move)
 * 
 * def move16(int move):             # <<<<<<<<<<<<<<
 * 	return __move16(move)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_21move16(PyObject *__pyx_self, PyObject *__pyx_arg_move); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_21move16 = {"move16", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_21move16, METH_O, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_21move16(PyObject *__pyx_self, PyObject *__pyx_arg_move) {
  int __pyx_v_move;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move16 (wrapper)", 0);
  assert(__pyx_arg_move); {
    __pyx_v_move = __Pyx_PyInt_As_int(__pyx_arg_move); if (unlikely((__pyx_v_move == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 645, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.move16", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_20move16(__pyx_self, ((int)__pyx_v_move));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_20move16(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move16", 0);

  /* "cshogi/_cshogi.pyx":646
 * 
 * def move16(int move):
 * 	return __move16(move)             # <<<<<<<<<<<<<<
 * 
 * def move16_from_psv(unsigned short move16):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_short(__move16(__pyx_v_move)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 646, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":645
 * 	return __move_drop_hand_piece(move)
 * 
 * def move16(int move):             # <<<<<<<<<<<<<<
 * 	return __move16(move)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.move16", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":648
 * 	return __move16(move)
 * 
 * def move16_from_psv(unsigned short move16):             # <<<<<<<<<<<<<<
 * 	return __move16_from_psv(move16)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_23move16_from_psv(PyObject *__pyx_self, PyObject *__pyx_arg_move16); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_23move16_from_psv = {"move16_from_psv", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_23move16_from_psv, METH_O, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_23move16_from_psv(PyObject *__pyx_self, PyObject *__pyx_arg_move16) {
  unsigned short __pyx_v_move16;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move16_from_psv (wrapper)", 0);
  assert(__pyx_arg_move16); {
    __pyx_v_move16 = __Pyx_PyInt_As_unsigned_short(__pyx_arg_move16); if (unlikely((__pyx_v_move16 == (unsigned short)-1) && PyErr_Occurred())) __PYX_ERR(0, 648, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.move16_from_psv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_22move16_from_psv(__pyx_self, ((unsigned short)__pyx_v_move16));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_22move16_from_psv(CYTHON_UNUSED PyObject *__pyx_self, unsigned short __pyx_v_move16) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move16_from_psv", 0);

  /* "cshogi/_cshogi.pyx":649
 * 
 * def move16_from_psv(unsigned short move16):
 * 	return __move16_from_psv(move16)             # <<<<<<<<<<<<<<
 * 
 * def move16_to_psv(unsigned short move16):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_short(__move16_from_psv(__pyx_v_move16)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 649, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":648
 * 	return __move16(move)
 * 
 * def move16_from_psv(unsigned short move16):             # <<<<<<<<<<<<<<
 * 	return __move16_from_psv(move16)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.move16_from_psv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":651
 * 	return __move16_from_psv(move16)
 * 
 * def move16_to_psv(unsigned short move16):             # <<<<<<<<<<<<<<
 * 	return __move16_to_psv(move16)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_25move16_to_psv(PyObject *__pyx_self, PyObject *__pyx_arg_move16); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_25move16_to_psv = {"move16_to_psv", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_25move16_to_psv, METH_O, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_25move16_to_psv(PyObject *__pyx_self, PyObject *__pyx_arg_move16) {
  unsigned short __pyx_v_move16;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move16_to_psv (wrapper)", 0);
  assert(__pyx_arg_move16); {
    __pyx_v_move16 = __Pyx_PyInt_As_unsigned_short(__pyx_arg_move16); if (unlikely((__pyx_v_move16 == (unsigned short)-1) && PyErr_Occurred())) __PYX_ERR(0, 651, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.move16_to_psv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_24move16_to_psv(__pyx_self, ((unsigned short)__pyx_v_move16));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_24move16_to_psv(CYTHON_UNUSED PyObject *__pyx_self, unsigned short __pyx_v_move16) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move16_to_psv", 0);

  /* "cshogi/_cshogi.pyx":652
 * 
 * def move16_to_psv(unsigned short move16):
 * 	return __move16_to_psv(move16)             # <<<<<<<<<<<<<<
 * 
 * def move_rotate(int move):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_short(__move16_to_psv(__pyx_v_move16)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 652, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":651
 * 	return __move16_from_psv(move16)
 * 
 * def move16_to_psv(unsigned short move16):             # <<<<<<<<<<<<<<
 * 	return __move16_to_psv(move16)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.move16_to_psv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":654
 * 	return __move16_to_psv(move16)
 * 
 * def move_rotate(int move):             # <<<<<<<<<<<<<<
 * 	return __move_rotate(move)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_27move_rotate(PyObject *__pyx_self, PyObject *__pyx_arg_move); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_27move_rotate = {"move_rotate", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_27move_rotate, METH_O, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_27move_rotate(PyObject *__pyx_self, PyObject *__pyx_arg_move) {
  int __pyx_v_move;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_rotate (wrapper)", 0);
  assert(__pyx_arg_move); {
    __pyx_v_move = __Pyx_PyInt_As_int(__pyx_arg_move); if (unlikely((__pyx_v_move == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 654, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.move_rotate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_26move_rotate(__pyx_self, ((int)__pyx_v_move));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_26move_rotate(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_rotate", 0);

  /* "cshogi/_cshogi.pyx":655
 * 
 * def move_rotate(int move):
 * 	return __move_rotate(move)             # <<<<<<<<<<<<<<
 * 
 * def move_to_usi(int move):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__move_rotate(__pyx_v_move)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 655, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":654
 * 	return __move16_to_psv(move16)
 * 
 * def move_rotate(int move):             # <<<<<<<<<<<<<<
 * 	return __move_rotate(move)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.move_rotate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":657
 * 	return __move_rotate(move)
 * 
 * def move_to_usi(int move):             # <<<<<<<<<<<<<<
 * 	return __move_to_usi(move).decode('ascii')
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_29move_to_usi(PyObject *__pyx_self, PyObject *__pyx_arg_move); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_29move_to_usi = {"move_to_usi", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_29move_to_usi, METH_O, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_29move_to_usi(PyObject *__pyx_self, PyObject *__pyx_arg_move) {
  int __pyx_v_move;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_to_usi (wrapper)", 0);
  assert(__pyx_arg_move); {
    __pyx_v_move = __Pyx_PyInt_As_int(__pyx_arg_move); if (unlikely((__pyx_v_move == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 657, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.move_to_usi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_28move_to_usi(__pyx_self, ((int)__pyx_v_move));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_28move_to_usi(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_to_usi", 0);

  /* "cshogi/_cshogi.pyx":658
 * 
 * def move_to_usi(int move):
 * 	return __move_to_usi(move).decode('ascii')             # <<<<<<<<<<<<<<
 * 
 * def move_to_csa(int move):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_decode_cpp_string(__move_to_usi(__pyx_v_move), 0, PY_SSIZE_T_MAX, NULL, NULL, PyUnicode_DecodeASCII); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 658, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":657
 * 	return __move_rotate(move)
 * 
 * def move_to_usi(int move):             # <<<<<<<<<<<<<<
 * 	return __move_to_usi(move).decode('ascii')
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.move_to_usi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":660
 * 	return __move_to_usi(move).decode('ascii')
 * 
 * def move_to_csa(int move):             # <<<<<<<<<<<<<<
 * 	return __move_to_csa(move).decode('ascii')
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_31move_to_csa(PyObject *__pyx_self, PyObject *__pyx_arg_move); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_31move_to_csa = {"move_to_csa", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_31move_to_csa, METH_O, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_31move_to_csa(PyObject *__pyx_self, PyObject *__pyx_arg_move) {
  int __pyx_v_move;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_to_csa (wrapper)", 0);
  assert(__pyx_arg_move); {
    __pyx_v_move = __Pyx_PyInt_As_int(__pyx_arg_move); if (unlikely((__pyx_v_move == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 660, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.move_to_csa", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_30move_to_csa(__pyx_self, ((int)__pyx_v_move));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_30move_to_csa(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_to_csa", 0);

  /* "cshogi/_cshogi.pyx":661
 * 
 * def move_to_csa(int move):
 * 	return __move_to_csa(move).decode('ascii')             # <<<<<<<<<<<<<<
 * 
 * def move_from_csa(str csa):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_decode_cpp_string(__move_to_csa(__pyx_v_move), 0, PY_SSIZE_T_MAX, NULL, NULL, PyUnicode_DecodeASCII); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 661, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":660
 * 	return __move_to_usi(move).decode('ascii')
 * 
 * def move_to_csa(int move):             # <<<<<<<<<<<<<<
 * 	return __move_to_csa(move).decode('ascii')
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.move_to_csa", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":663
 * 	return __move_to_csa(move).decode('ascii')
 * 
 * def move_from_csa(str csa):             # <<<<<<<<<<<<<<
 * 	cdef string csa_b = csa.encode('ascii')
 * 	return __move_from_csa(csa_b)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_33move_from_csa(PyObject *__pyx_self, PyObject *__pyx_v_csa); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_33move_from_csa = {"move_from_csa", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_33move_from_csa, METH_O, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_33move_from_csa(PyObject *__pyx_self, PyObject *__pyx_v_csa) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_from_csa (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_csa), (&PyString_Type), 1, "csa", 1))) __PYX_ERR(0, 663, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_32move_from_csa(__pyx_self, ((PyObject*)__pyx_v_csa));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_32move_from_csa(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_csa) {
  std::string __pyx_v_csa_b;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  std::string __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_from_csa", 0);

  /* "cshogi/_cshogi.pyx":664
 * 
 * def move_from_csa(str csa):
 * 	cdef string csa_b = csa.encode('ascii')             # <<<<<<<<<<<<<<
 * 	return __move_from_csa(csa_b)
 * 
 */
  __pyx_t_1 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyString_Type_encode, __pyx_v_csa, __pyx_n_s_ascii); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_convert_string_from_py_std__in_string(__pyx_t_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 664, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_csa_b = __pyx_t_2;

  /* "cshogi/_cshogi.pyx":665
 * def move_from_csa(str csa):
 * 	cdef string csa_b = csa.encode('ascii')
 * 	return __move_from_csa(csa_b)             # <<<<<<<<<<<<<<
 * 
 * def opponent(int color):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__move_from_csa(__pyx_v_csa_b)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 665, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":663
 * 	return __move_to_csa(move).decode('ascii')
 * 
 * def move_from_csa(str csa):             # <<<<<<<<<<<<<<
 * 	cdef string csa_b = csa.encode('ascii')
 * 	return __move_from_csa(csa_b)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.move_from_csa", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":667
 * 	return __move_from_csa(csa_b)
 * 
 * def opponent(int color):             # <<<<<<<<<<<<<<
 * 	return BLACK if color == WHITE else WHITE
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_35opponent(PyObject *__pyx_self, PyObject *__pyx_arg_color); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_35opponent = {"opponent", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_35opponent, METH_O, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_35opponent(PyObject *__pyx_self, PyObject *__pyx_arg_color) {
  int __pyx_v_color;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("opponent (wrapper)", 0);
  assert(__pyx_arg_color); {
    __pyx_v_color = __Pyx_PyInt_As_int(__pyx_arg_color); if (unlikely((__pyx_v_color == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 667, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.opponent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_34opponent(__pyx_self, ((int)__pyx_v_color));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_34opponent(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_color) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("opponent", 0);

  /* "cshogi/_cshogi.pyx":668
 * 
 * def opponent(int color):
 * 	return BLACK if color == WHITE else WHITE             # <<<<<<<<<<<<<<
 * 
 * _dlshogi_FEATURES1_NUM = __dlshogi_get_features1_num()
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_color); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 668, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_WHITE); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 668, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyObject_RichCompare(__pyx_t_2, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 668, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 668, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__pyx_t_5) {
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_BLACK); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 668, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __pyx_t_4;
    __pyx_t_4 = 0;
  } else {
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_WHITE); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 668, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __pyx_t_4;
    __pyx_t_4 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":667
 * 	return __move_from_csa(csa_b)
 * 
 * def opponent(int color):             # <<<<<<<<<<<<<<
 * 	return BLACK if color == WHITE else WHITE
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cshogi._cshogi.opponent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":672
 * _dlshogi_FEATURES1_NUM = __dlshogi_get_features1_num()
 * _dlshogi_FEATURES2_NUM = __dlshogi_get_features2_num()
 * def _dlshogi_make_move_label(int move, int color):             # <<<<<<<<<<<<<<
 * 	return __dlshogi_make_move_label(move, color)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_37_dlshogi_make_move_label(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_37_dlshogi_make_move_label = {"_dlshogi_make_move_label", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_6cshogi_7_cshogi_37_dlshogi_make_move_label, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_37_dlshogi_make_move_label(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_move;
  int __pyx_v_color;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_dlshogi_make_move_label (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_move,&__pyx_n_s_color,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_move)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_color)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_dlshogi_make_move_label", 1, 2, 2, 1); __PYX_ERR(0, 672, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_dlshogi_make_move_label") < 0)) __PYX_ERR(0, 672, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_move = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_move == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 672, __pyx_L3_error)
    __pyx_v_color = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_color == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 672, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_dlshogi_make_move_label", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 672, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi._dlshogi_make_move_label", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_36_dlshogi_make_move_label(__pyx_self, __pyx_v_move, __pyx_v_color);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_36_dlshogi_make_move_label(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_move, int __pyx_v_color) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_dlshogi_make_move_label", 0);

  /* "cshogi/_cshogi.pyx":673
 * _dlshogi_FEATURES2_NUM = __dlshogi_get_features2_num()
 * def _dlshogi_make_move_label(int move, int color):
 * 	return __dlshogi_make_move_label(move, color)             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "parser.h" namespace "parser":
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__dlshogi_make_move_label(__pyx_v_move, __pyx_v_color)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 673, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":672
 * _dlshogi_FEATURES1_NUM = __dlshogi_get_features1_num()
 * _dlshogi_FEATURES2_NUM = __dlshogi_get_features2_num()
 * def _dlshogi_make_move_label(int move, int color):             # <<<<<<<<<<<<<<
 * 	return __dlshogi_make_move_label(move, color)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi._dlshogi_make_move_label", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":695
 * cdef class Parser:
 * 	@staticmethod
 * 	def parse_file(file, encoding=None):             # <<<<<<<<<<<<<<
 * 		if type(file) is str:
 * 			with open(file, 'r', encoding=encoding) as f:
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_1parse_file(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_6Parser_1parse_file = {"parse_file", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_6cshogi_7_cshogi_6Parser_1parse_file, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_1parse_file(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_file = 0;
  PyObject *__pyx_v_encoding = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("parse_file (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_file,&__pyx_n_s_encoding,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_file)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_encoding);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "parse_file") < 0)) __PYX_ERR(0, 695, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_file = values[0];
    __pyx_v_encoding = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("parse_file", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 695, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.Parser.parse_file", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_6Parser_parse_file(__pyx_v_file, __pyx_v_encoding);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_parse_file(PyObject *__pyx_v_file, PyObject *__pyx_v_encoding) {
  PyObject *__pyx_v_f = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("parse_file", 0);

  /* "cshogi/_cshogi.pyx":696
 * 	@staticmethod
 * 	def parse_file(file, encoding=None):
 * 		if type(file) is str:             # <<<<<<<<<<<<<<
 * 			with open(file, 'r', encoding=encoding) as f:
 * 				return Parser.parse_str(f.read())
 */
  __pyx_t_1 = (((PyObject *)Py_TYPE(__pyx_v_file)) == ((PyObject *)(&PyString_Type)));
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "cshogi/_cshogi.pyx":697
 * 	def parse_file(file, encoding=None):
 * 		if type(file) is str:
 * 			with open(file, 'r', encoding=encoding) as f:             # <<<<<<<<<<<<<<
 * 				return Parser.parse_str(f.read())
 * 		else:
 */
    /*with:*/ {
      __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 697, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_v_file);
      __Pyx_GIVEREF(__pyx_v_file);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_file);
      __Pyx_INCREF(__pyx_n_s_r);
      __Pyx_GIVEREF(__pyx_n_s_r);
      PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_n_s_r);
      __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 697, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_encoding, __pyx_v_encoding) < 0) __PYX_ERR(0, 697, __pyx_L1_error)
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 697, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_LookupSpecial(__pyx_t_5, __pyx_n_s_exit); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 697, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_3 = __Pyx_PyObject_LookupSpecial(__pyx_t_5, __pyx_n_s_enter); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 697, __pyx_L4_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_7 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_7) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 697, __pyx_L4_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __pyx_t_4;
      __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      /*try:*/ {
        {
          __Pyx_PyThreadState_declare
          __Pyx_PyThreadState_assign
          __Pyx_ExceptionSave(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
          __Pyx_XGOTREF(__pyx_t_8);
          __Pyx_XGOTREF(__pyx_t_9);
          __Pyx_XGOTREF(__pyx_t_10);
          /*try:*/ {
            __pyx_v_f = __pyx_t_3;
            __pyx_t_3 = 0;

            /* "cshogi/_cshogi.pyx":698
 * 		if type(file) is str:
 * 			with open(file, 'r', encoding=encoding) as f:
 * 				return Parser.parse_str(f.read())             # <<<<<<<<<<<<<<
 * 		else:
 * 			return Parser.parse_str(file.read())
 */
            __Pyx_XDECREF(__pyx_r);
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_6cshogi_7_cshogi_Parser), __pyx_n_s_parse_str); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 698, __pyx_L8_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_f, __pyx_n_s_read); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 698, __pyx_L8_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_11 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
              __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_7);
              if (likely(__pyx_t_11)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                __Pyx_INCREF(__pyx_t_11);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_7, function);
              }
            }
            __pyx_t_4 = (__pyx_t_11) ? __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_11) : __Pyx_PyObject_CallNoArg(__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 698, __pyx_L8_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_7 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_7)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_7);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
              }
            }
            __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 698, __pyx_L8_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_r = __pyx_t_3;
            __pyx_t_3 = 0;
            goto __pyx_L12_try_return;

            /* "cshogi/_cshogi.pyx":697
 * 	def parse_file(file, encoding=None):
 * 		if type(file) is str:
 * 			with open(file, 'r', encoding=encoding) as f:             # <<<<<<<<<<<<<<
 * 				return Parser.parse_str(f.read())
 * 		else:
 */
          }
          __pyx_L8_error:;
          __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          /*except:*/ {
            __Pyx_AddTraceback("cshogi._cshogi.Parser.parse_file", __pyx_clineno, __pyx_lineno, __pyx_filename);
            if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_5, &__pyx_t_4) < 0) __PYX_ERR(0, 697, __pyx_L10_except_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_7 = PyTuple_Pack(3, __pyx_t_3, __pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 697, __pyx_L10_except_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 697, __pyx_L10_except_error)
            __Pyx_GOTREF(__pyx_t_12);
            __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_12);
            __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
            if (__pyx_t_2 < 0) __PYX_ERR(0, 697, __pyx_L10_except_error)
            __pyx_t_1 = ((!(__pyx_t_2 != 0)) != 0);
            if (__pyx_t_1) {
              __Pyx_GIVEREF(__pyx_t_3);
              __Pyx_GIVEREF(__pyx_t_5);
              __Pyx_XGIVEREF(__pyx_t_4);
              __Pyx_ErrRestoreWithState(__pyx_t_3, __pyx_t_5, __pyx_t_4);
              __pyx_t_3 = 0; __pyx_t_5 = 0; __pyx_t_4 = 0; 
              __PYX_ERR(0, 697, __pyx_L10_except_error)
            }
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            goto __pyx_L9_exception_handled;
          }
          __pyx_L10_except_error:;
          __Pyx_XGIVEREF(__pyx_t_8);
          __Pyx_XGIVEREF(__pyx_t_9);
          __Pyx_XGIVEREF(__pyx_t_10);
          __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
          goto __pyx_L1_error;
          __pyx_L12_try_return:;
          __Pyx_XGIVEREF(__pyx_t_8);
          __Pyx_XGIVEREF(__pyx_t_9);
          __Pyx_XGIVEREF(__pyx_t_10);
          __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
          goto __pyx_L5_return;
          __pyx_L9_exception_handled:;
          __Pyx_XGIVEREF(__pyx_t_8);
          __Pyx_XGIVEREF(__pyx_t_9);
          __Pyx_XGIVEREF(__pyx_t_10);
          __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
        }
      }
      /*finally:*/ {
        /*normal exit:*/{
          if (__pyx_t_6) {
            __pyx_t_10 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_tuple__14, NULL);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 697, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_10);
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          }
          goto __pyx_L7;
        }
        __pyx_L5_return: {
          __pyx_t_10 = __pyx_r;
          __pyx_r = 0;
          if (__pyx_t_6) {
            __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_tuple__14, NULL);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 697, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_9);
            __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          }
          __pyx_r = __pyx_t_10;
          __pyx_t_10 = 0;
          goto __pyx_L0;
        }
        __pyx_L7:;
      }
      goto __pyx_L17;
      __pyx_L4_error:;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      goto __pyx_L1_error;
      __pyx_L17:;
    }

    /* "cshogi/_cshogi.pyx":696
 * 	@staticmethod
 * 	def parse_file(file, encoding=None):
 * 		if type(file) is str:             # <<<<<<<<<<<<<<
 * 			with open(file, 'r', encoding=encoding) as f:
 * 				return Parser.parse_str(f.read())
 */
    goto __pyx_L3;
  }

  /* "cshogi/_cshogi.pyx":700
 * 				return Parser.parse_str(f.read())
 * 		else:
 * 			return Parser.parse_str(file.read())             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_6cshogi_7_cshogi_Parser), __pyx_n_s_parse_str); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 700, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_file, __pyx_n_s_read); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 700, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_11 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_3 = (__pyx_t_11) ? __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_11) : __Pyx_PyObject_CallNoArg(__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 700, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 700, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;
  }
  __pyx_L3:;

  /* "cshogi/_cshogi.pyx":695
 * cdef class Parser:
 * 	@staticmethod
 * 	def parse_file(file, encoding=None):             # <<<<<<<<<<<<<<
 * 		if type(file) is str:
 * 			with open(file, 'r', encoding=encoding) as f:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("cshogi._cshogi.Parser.parse_file", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_f);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":703
 * 
 * 	@staticmethod
 * 	def parse_str(csa_str):             # <<<<<<<<<<<<<<
 * 		parsers = []
 * 		# split multiple matches
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_3parse_str(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6cshogi_7_cshogi_6Parser_3parse_str = {"parse_str", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_6cshogi_7_cshogi_6Parser_3parse_str, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_3parse_str(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_csa_str = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("parse_str (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_csa_str,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csa_str)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "parse_str") < 0)) __PYX_ERR(0, 703, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_csa_str = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("parse_str", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 703, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.Parser.parse_str", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_6Parser_2parse_str(__pyx_v_csa_str);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_2parse_str(PyObject *__pyx_v_csa_str) {
  PyObject *__pyx_v_parsers = NULL;
  PyObject *__pyx_v_matches = NULL;
  PyObject *__pyx_v_one_csa_str = NULL;
  struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_parser = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("parse_str", 0);

  /* "cshogi/_cshogi.pyx":704
 * 	@staticmethod
 * 	def parse_str(csa_str):
 * 		parsers = []             # <<<<<<<<<<<<<<
 * 		# split multiple matches
 * 		matches = csa_str.split('\n/\n')
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 704, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_parsers = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cshogi/_cshogi.pyx":706
 * 		parsers = []
 * 		# split multiple matches
 * 		matches = csa_str.split('\n/\n')             # <<<<<<<<<<<<<<
 * 		for one_csa_str in matches:
 * 			parser = Parser()
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_csa_str, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 706, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_s__15) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_s__15);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 706, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_matches = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cshogi/_cshogi.pyx":707
 * 		# split multiple matches
 * 		matches = csa_str.split('\n/\n')
 * 		for one_csa_str in matches:             # <<<<<<<<<<<<<<
 * 			parser = Parser()
 * 			parser.parse_csa_str(one_csa_str)
 */
  if (likely(PyList_CheckExact(__pyx_v_matches)) || PyTuple_CheckExact(__pyx_v_matches)) {
    __pyx_t_1 = __pyx_v_matches; __Pyx_INCREF(__pyx_t_1); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_matches); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 707, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 707, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_5)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 707, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 707, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 707, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 707, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_5(__pyx_t_1);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 707, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_one_csa_str, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "cshogi/_cshogi.pyx":708
 * 		matches = csa_str.split('\n/\n')
 * 		for one_csa_str in matches:
 * 			parser = Parser()             # <<<<<<<<<<<<<<
 * 			parser.parse_csa_str(one_csa_str)
 * 			parsers.append(parser)
 */
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_6cshogi_7_cshogi_Parser)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 708, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_parser, ((struct __pyx_obj_6cshogi_7_cshogi_Parser *)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "cshogi/_cshogi.pyx":709
 * 		for one_csa_str in matches:
 * 			parser = Parser()
 * 			parser.parse_csa_str(one_csa_str)             # <<<<<<<<<<<<<<
 * 			parsers.append(parser)
 * 		return parsers
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_parser), __pyx_n_s_parse_csa_str); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 709, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_v_one_csa_str) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_one_csa_str);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 709, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cshogi/_cshogi.pyx":710
 * 			parser = Parser()
 * 			parser.parse_csa_str(one_csa_str)
 * 			parsers.append(parser)             # <<<<<<<<<<<<<<
 * 		return parsers
 * 
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_parsers, ((PyObject *)__pyx_v_parser)); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 710, __pyx_L1_error)

    /* "cshogi/_cshogi.pyx":707
 * 		# split multiple matches
 * 		matches = csa_str.split('\n/\n')
 * 		for one_csa_str in matches:             # <<<<<<<<<<<<<<
 * 			parser = Parser()
 * 			parser.parse_csa_str(one_csa_str)
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cshogi/_cshogi.pyx":711
 * 			parser.parse_csa_str(one_csa_str)
 * 			parsers.append(parser)
 * 		return parsers             # <<<<<<<<<<<<<<
 * 
 * 	cdef __Parser __parser
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_parsers);
  __pyx_r = __pyx_v_parsers;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":703
 * 
 * 	@staticmethod
 * 	def parse_str(csa_str):             # <<<<<<<<<<<<<<
 * 		parsers = []
 * 		# split multiple matches
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("cshogi._cshogi.Parser.parse_str", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_parsers);
  __Pyx_XDECREF(__pyx_v_matches);
  __Pyx_XDECREF(__pyx_v_one_csa_str);
  __Pyx_XDECREF((PyObject *)__pyx_v_parser);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":715
 * 	cdef __Parser __parser
 * 
 * 	def __cinit__(self):             # <<<<<<<<<<<<<<
 * 		self.__parser = __Parser()
 * 
 */

/* Python wrapper */
static int __pyx_pw_6cshogi_7_cshogi_6Parser_5__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6cshogi_7_cshogi_6Parser_5__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_6Parser_4__cinit__(((struct __pyx_obj_6cshogi_7_cshogi_Parser *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6cshogi_7_cshogi_6Parser_4__cinit__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  parser::__Parser __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cshogi/_cshogi.pyx":716
 * 
 * 	def __cinit__(self):
 * 		self.__parser = __Parser()             # <<<<<<<<<<<<<<
 * 
 * 	def parse_csa_file(self, str path):
 */
  try {
    __pyx_t_1 = parser::__Parser();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 716, __pyx_L1_error)
  }
  __pyx_v_self->__pyx___parser = __pyx_t_1;

  /* "cshogi/_cshogi.pyx":715
 * 	cdef __Parser __parser
 * 
 * 	def __cinit__(self):             # <<<<<<<<<<<<<<
 * 		self.__parser = __Parser()
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cshogi._cshogi.Parser.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":718
 * 		self.__parser = __Parser()
 * 
 * 	def parse_csa_file(self, str path):             # <<<<<<<<<<<<<<
 * 		cdef string path_b = path.encode(locale.getpreferredencoding())
 * 		self.__parser.parse_csa_file(path_b)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_7parse_csa_file(PyObject *__pyx_v_self, PyObject *__pyx_v_path); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_7parse_csa_file(PyObject *__pyx_v_self, PyObject *__pyx_v_path) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("parse_csa_file (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_path), (&PyString_Type), 1, "path", 1))) __PYX_ERR(0, 718, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_6Parser_6parse_csa_file(((struct __pyx_obj_6cshogi_7_cshogi_Parser *)__pyx_v_self), ((PyObject*)__pyx_v_path));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_6parse_csa_file(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self, PyObject *__pyx_v_path) {
  std::string __pyx_v_path_b;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  std::string __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("parse_csa_file", 0);

  /* "cshogi/_cshogi.pyx":719
 * 
 * 	def parse_csa_file(self, str path):
 * 		cdef string path_b = path.encode(locale.getpreferredencoding())             # <<<<<<<<<<<<<<
 * 		self.__parser.parse_csa_file(path_b)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_locale); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 719, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_getpreferredencoding); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 719, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 719, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyString_Type_encode, __pyx_v_path, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 719, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __pyx_convert_string_from_py_std__in_string(__pyx_t_3); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 719, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_path_b = __pyx_t_4;

  /* "cshogi/_cshogi.pyx":720
 * 	def parse_csa_file(self, str path):
 * 		cdef string path_b = path.encode(locale.getpreferredencoding())
 * 		self.__parser.parse_csa_file(path_b)             # <<<<<<<<<<<<<<
 * 
 * 	def parse_csa_str(self, str csa_str):
 */
  try {
    __pyx_v_self->__pyx___parser.parse_csa_file(__pyx_v_path_b);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 720, __pyx_L1_error)
  }

  /* "cshogi/_cshogi.pyx":718
 * 		self.__parser = __Parser()
 * 
 * 	def parse_csa_file(self, str path):             # <<<<<<<<<<<<<<
 * 		cdef string path_b = path.encode(locale.getpreferredencoding())
 * 		self.__parser.parse_csa_file(path_b)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cshogi._cshogi.Parser.parse_csa_file", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":722
 * 		self.__parser.parse_csa_file(path_b)
 * 
 * 	def parse_csa_str(self, str csa_str):             # <<<<<<<<<<<<<<
 * 		cdef string csa_str_b = csa_str.encode('utf-8')
 * 		self.__parser.parse_csa_str(csa_str_b)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_9parse_csa_str(PyObject *__pyx_v_self, PyObject *__pyx_v_csa_str); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_9parse_csa_str(PyObject *__pyx_v_self, PyObject *__pyx_v_csa_str) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("parse_csa_str (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_csa_str), (&PyString_Type), 1, "csa_str", 1))) __PYX_ERR(0, 722, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_6Parser_8parse_csa_str(((struct __pyx_obj_6cshogi_7_cshogi_Parser *)__pyx_v_self), ((PyObject*)__pyx_v_csa_str));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_8parse_csa_str(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self, PyObject *__pyx_v_csa_str) {
  std::string __pyx_v_csa_str_b;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  std::string __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("parse_csa_str", 0);

  /* "cshogi/_cshogi.pyx":723
 * 
 * 	def parse_csa_str(self, str csa_str):
 * 		cdef string csa_str_b = csa_str.encode('utf-8')             # <<<<<<<<<<<<<<
 * 		self.__parser.parse_csa_str(csa_str_b)
 * 
 */
  __pyx_t_1 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyString_Type_encode, __pyx_v_csa_str, __pyx_kp_s_utf_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 723, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_convert_string_from_py_std__in_string(__pyx_t_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 723, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_csa_str_b = __pyx_t_2;

  /* "cshogi/_cshogi.pyx":724
 * 	def parse_csa_str(self, str csa_str):
 * 		cdef string csa_str_b = csa_str.encode('utf-8')
 * 		self.__parser.parse_csa_str(csa_str_b)             # <<<<<<<<<<<<<<
 * 
 * 	@property
 */
  try {
    __pyx_v_self->__pyx___parser.parse_csa_str(__pyx_v_csa_str_b);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 724, __pyx_L1_error)
  }

  /* "cshogi/_cshogi.pyx":722
 * 		self.__parser.parse_csa_file(path_b)
 * 
 * 	def parse_csa_str(self, str csa_str):             # <<<<<<<<<<<<<<
 * 		cdef string csa_str_b = csa_str.encode('utf-8')
 * 		self.__parser.parse_csa_str(csa_str_b)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Parser.parse_csa_str", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":727
 * 
 * 	@property
 * 	def version(self):             # <<<<<<<<<<<<<<
 * 		return self.__parser.version.decode('ascii')
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_7version_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_7version_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_6Parser_7version___get__(((struct __pyx_obj_6cshogi_7_cshogi_Parser *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_7version___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cshogi/_cshogi.pyx":728
 * 	@property
 * 	def version(self):
 * 		return self.__parser.version.decode('ascii')             # <<<<<<<<<<<<<<
 * 
 * 	@property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_decode_cpp_string(__pyx_v_self->__pyx___parser.version, 0, PY_SSIZE_T_MAX, NULL, NULL, PyUnicode_DecodeASCII); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 728, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":727
 * 
 * 	@property
 * 	def version(self):             # <<<<<<<<<<<<<<
 * 		return self.__parser.version.decode('ascii')
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Parser.version.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":731
 * 
 * 	@property
 * 	def var_info(self):             # <<<<<<<<<<<<<<
 * 		d = {}
 * 		for information in self.__parser.informations:
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_8var_info_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_8var_info_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_6Parser_8var_info___get__(((struct __pyx_obj_6cshogi_7_cshogi_Parser *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_8var_info___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self) {
  PyObject *__pyx_v_d = NULL;
  std::string __pyx_v_information;
  PyObject *__pyx_v_k = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  std::vector<std::string> ::iterator __pyx_t_2;
  std::vector<std::string>  *__pyx_t_3;
  std::string __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cshogi/_cshogi.pyx":732
 * 	@property
 * 	def var_info(self):
 * 		d = {}             # <<<<<<<<<<<<<<
 * 		for information in self.__parser.informations:
 * 			k, v = information.decode('utf-8').split(':', 1)
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_d = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cshogi/_cshogi.pyx":733
 * 	def var_info(self):
 * 		d = {}
 * 		for information in self.__parser.informations:             # <<<<<<<<<<<<<<
 * 			k, v = information.decode('utf-8').split(':', 1)
 * 			d[k[1:]] = v
 */
  __pyx_t_3 = &__pyx_v_self->__pyx___parser.informations;
  __pyx_t_2 = __pyx_t_3->begin();
  for (;;) {
    if (!(__pyx_t_2 != __pyx_t_3->end())) break;
    __pyx_t_4 = *__pyx_t_2;
    ++__pyx_t_2;
    __pyx_v_information = __pyx_t_4;

    /* "cshogi/_cshogi.pyx":734
 * 		d = {}
 * 		for information in self.__parser.informations:
 * 			k, v = information.decode('utf-8').split(':', 1)             # <<<<<<<<<<<<<<
 * 			d[k[1:]] = v
 * 		return d
 */
    __pyx_t_1 = __Pyx_decode_cpp_string(__pyx_v_information, 0, PY_SSIZE_T_MAX, NULL, NULL, PyUnicode_DecodeUTF8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 734, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyUnicode_Split(((PyObject*)__pyx_t_1), __pyx_kp_s__16, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 734, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (1) {
      PyObject* sequence = __pyx_t_5;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 734, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_6);
      #else
      __pyx_t_1 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 734, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_6 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 734, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      #endif
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_XDECREF_SET(__pyx_v_k, __pyx_t_1);
    __pyx_t_1 = 0;
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "cshogi/_cshogi.pyx":735
 * 		for information in self.__parser.informations:
 * 			k, v = information.decode('utf-8').split(':', 1)
 * 			d[k[1:]] = v             # <<<<<<<<<<<<<<
 * 		return d
 * 
 */
    __pyx_t_5 = __Pyx_PyObject_GetSlice(__pyx_v_k, 1, 0, NULL, NULL, &__pyx_slice__17, 1, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 735, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(PyDict_SetItem(__pyx_v_d, __pyx_t_5, __pyx_v_v) < 0)) __PYX_ERR(0, 735, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "cshogi/_cshogi.pyx":733
 * 	def var_info(self):
 * 		d = {}
 * 		for information in self.__parser.informations:             # <<<<<<<<<<<<<<
 * 			k, v = information.decode('utf-8').split(':', 1)
 * 			d[k[1:]] = v
 */
  }

  /* "cshogi/_cshogi.pyx":736
 * 			k, v = information.decode('utf-8').split(':', 1)
 * 			d[k[1:]] = v
 * 		return d             # <<<<<<<<<<<<<<
 * 
 * 	@property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_d);
  __pyx_r = __pyx_v_d;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":731
 * 
 * 	@property
 * 	def var_info(self):             # <<<<<<<<<<<<<<
 * 		d = {}
 * 		for information in self.__parser.informations:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("cshogi._cshogi.Parser.var_info.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_d);
  __Pyx_XDECREF(__pyx_v_k);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":739
 * 
 * 	@property
 * 	def sfen(self):             # <<<<<<<<<<<<<<
 * 		return self.__parser.sfen.decode('ascii')
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_4sfen_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_4sfen_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_6Parser_4sfen___get__(((struct __pyx_obj_6cshogi_7_cshogi_Parser *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_4sfen___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cshogi/_cshogi.pyx":740
 * 	@property
 * 	def sfen(self):
 * 		return self.__parser.sfen.decode('ascii')             # <<<<<<<<<<<<<<
 * 
 * 	@property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_decode_cpp_string(__pyx_v_self->__pyx___parser.sfen, 0, PY_SSIZE_T_MAX, NULL, NULL, PyUnicode_DecodeASCII); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 740, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":739
 * 
 * 	@property
 * 	def sfen(self):             # <<<<<<<<<<<<<<
 * 		return self.__parser.sfen.decode('ascii')
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Parser.sfen.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":743
 * 
 * 	@property
 * 	def endgame(self):             # <<<<<<<<<<<<<<
 * 		return self.__parser.endgame.decode('ascii')
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_7endgame_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_7endgame_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_6Parser_7endgame___get__(((struct __pyx_obj_6cshogi_7_cshogi_Parser *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_7endgame___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cshogi/_cshogi.pyx":744
 * 	@property
 * 	def endgame(self):
 * 		return self.__parser.endgame.decode('ascii')             # <<<<<<<<<<<<<<
 * 
 * 	@property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_decode_cpp_string(__pyx_v_self->__pyx___parser.endgame, 0, PY_SSIZE_T_MAX, NULL, NULL, PyUnicode_DecodeASCII); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 744, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":743
 * 
 * 	@property
 * 	def endgame(self):             # <<<<<<<<<<<<<<
 * 		return self.__parser.endgame.decode('ascii')
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Parser.endgame.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":747
 * 
 * 	@property
 * 	def names(self):             # <<<<<<<<<<<<<<
 * 		return [name.decode('utf-8') for name in self.__parser.names]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_5names_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_5names_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_6Parser_5names___get__(((struct __pyx_obj_6cshogi_7_cshogi_Parser *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_5names___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self) {
  std::string __pyx_v_name;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  std::vector<std::string> ::iterator __pyx_t_2;
  std::vector<std::string>  *__pyx_t_3;
  std::string __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cshogi/_cshogi.pyx":748
 * 	@property
 * 	def names(self):
 * 		return [name.decode('utf-8') for name in self.__parser.names]             # <<<<<<<<<<<<<<
 * 
 * 	@property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 748, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = &__pyx_v_self->__pyx___parser.names;
  __pyx_t_2 = __pyx_t_3->begin();
  for (;;) {
    if (!(__pyx_t_2 != __pyx_t_3->end())) break;
    __pyx_t_4 = *__pyx_t_2;
    ++__pyx_t_2;
    __pyx_v_name = __pyx_t_4;
    __pyx_t_5 = __Pyx_decode_cpp_string(__pyx_v_name, 0, PY_SSIZE_T_MAX, NULL, NULL, PyUnicode_DecodeUTF8); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 748, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(0, 748, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":747
 * 
 * 	@property
 * 	def names(self):             # <<<<<<<<<<<<<<
 * 		return [name.decode('utf-8') for name in self.__parser.names]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cshogi._cshogi.Parser.names.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":751
 * 
 * 	@property
 * 	def ratings(self):             # <<<<<<<<<<<<<<
 * 		return self.__parser.ratings
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_7ratings_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_7ratings_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_6Parser_7ratings___get__(((struct __pyx_obj_6cshogi_7_cshogi_Parser *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_7ratings___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cshogi/_cshogi.pyx":752
 * 	@property
 * 	def ratings(self):
 * 		return self.__parser.ratings             # <<<<<<<<<<<<<<
 * 
 * 	@property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_float(__pyx_v_self->__pyx___parser.ratings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 752, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":751
 * 
 * 	@property
 * 	def ratings(self):             # <<<<<<<<<<<<<<
 * 		return self.__parser.ratings
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Parser.ratings.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":755
 * 
 * 	@property
 * 	def moves(self):             # <<<<<<<<<<<<<<
 * 		return self.__parser.moves
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_5moves_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_5moves_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_6Parser_5moves___get__(((struct __pyx_obj_6cshogi_7_cshogi_Parser *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_5moves___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cshogi/_cshogi.pyx":756
 * 	@property
 * 	def moves(self):
 * 		return self.__parser.moves             # <<<<<<<<<<<<<<
 * 
 * 	@property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_int(__pyx_v_self->__pyx___parser.moves); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 756, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":755
 * 
 * 	@property
 * 	def moves(self):             # <<<<<<<<<<<<<<
 * 		return self.__parser.moves
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Parser.moves.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":759
 * 
 * 	@property
 * 	def times(self):             # <<<<<<<<<<<<<<
 * 		return self.__parser.times
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_5times_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_5times_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_6Parser_5times___get__(((struct __pyx_obj_6cshogi_7_cshogi_Parser *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_5times___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cshogi/_cshogi.pyx":760
 * 	@property
 * 	def times(self):
 * 		return self.__parser.times             # <<<<<<<<<<<<<<
 * 
 * 	@property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_int(__pyx_v_self->__pyx___parser.times); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 760, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":759
 * 
 * 	@property
 * 	def times(self):             # <<<<<<<<<<<<<<
 * 		return self.__parser.times
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Parser.times.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":763
 * 
 * 	@property
 * 	def scores(self):             # <<<<<<<<<<<<<<
 * 		return self.__parser.scores
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_6scores_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_6scores_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_6Parser_6scores___get__(((struct __pyx_obj_6cshogi_7_cshogi_Parser *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_6scores___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cshogi/_cshogi.pyx":764
 * 	@property
 * 	def scores(self):
 * 		return self.__parser.scores             # <<<<<<<<<<<<<<
 * 
 * 	@property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_int(__pyx_v_self->__pyx___parser.scores); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 764, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":763
 * 
 * 	@property
 * 	def scores(self):             # <<<<<<<<<<<<<<
 * 		return self.__parser.scores
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Parser.scores.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":767
 * 
 * 	@property
 * 	def comments(self):             # <<<<<<<<<<<<<<
 * 		return [comment.decode('ascii') for comment in self.__parser.comments]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_8comments_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_8comments_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_6Parser_8comments___get__(((struct __pyx_obj_6cshogi_7_cshogi_Parser *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_8comments___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self) {
  std::string __pyx_v_comment;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  std::vector<std::string> ::iterator __pyx_t_2;
  std::vector<std::string>  *__pyx_t_3;
  std::string __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cshogi/_cshogi.pyx":768
 * 	@property
 * 	def comments(self):
 * 		return [comment.decode('ascii') for comment in self.__parser.comments]             # <<<<<<<<<<<<<<
 * 
 * 	@property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 768, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = &__pyx_v_self->__pyx___parser.comments;
  __pyx_t_2 = __pyx_t_3->begin();
  for (;;) {
    if (!(__pyx_t_2 != __pyx_t_3->end())) break;
    __pyx_t_4 = *__pyx_t_2;
    ++__pyx_t_2;
    __pyx_v_comment = __pyx_t_4;
    __pyx_t_5 = __Pyx_decode_cpp_string(__pyx_v_comment, 0, PY_SSIZE_T_MAX, NULL, NULL, PyUnicode_DecodeASCII); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 768, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(0, 768, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":767
 * 
 * 	@property
 * 	def comments(self):             # <<<<<<<<<<<<<<
 * 		return [comment.decode('ascii') for comment in self.__parser.comments]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cshogi._cshogi.Parser.comments.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":771
 * 
 * 	@property
 * 	def win(self):             # <<<<<<<<<<<<<<
 * 		return self.__parser.win
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_3win_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_3win_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_6Parser_3win___get__(((struct __pyx_obj_6cshogi_7_cshogi_Parser *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_3win___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cshogi/_cshogi.pyx":772
 * 	@property
 * 	def win(self):
 * 		return self.__parser.win             # <<<<<<<<<<<<<<
 * 
 * 	@property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->__pyx___parser.win); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 772, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":771
 * 
 * 	@property
 * 	def win(self):             # <<<<<<<<<<<<<<
 * 		return self.__parser.win
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Parser.win.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":775
 * 
 * 	@property
 * 	def comment(self):             # <<<<<<<<<<<<<<
 * 		return self.__parser.comment.decode('utf-8')
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_7comment_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_7comment_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_6Parser_7comment___get__(((struct __pyx_obj_6cshogi_7_cshogi_Parser *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_7comment___get__(struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cshogi/_cshogi.pyx":776
 * 	@property
 * 	def comment(self):
 * 		return self.__parser.comment.decode('utf-8')             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "dfpn.h":
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_decode_cpp_string(__pyx_v_self->__pyx___parser.comment, 0, PY_SSIZE_T_MAX, NULL, NULL, PyUnicode_DecodeUTF8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 776, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":775
 * 
 * 	@property
 * 	def comment(self):             # <<<<<<<<<<<<<<
 * 		return self.__parser.comment.decode('utf-8')
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Parser.comment.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_6Parser_10__reduce_cython__(((struct __pyx_obj_6cshogi_7_cshogi_Parser *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__18, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Parser.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_6Parser_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_6Parser_12__setstate_cython__(((struct __pyx_obj_6cshogi_7_cshogi_Parser *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_6Parser_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6cshogi_7_cshogi_Parser *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__19, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.Parser.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":796
 * 	cdef __DfPn __dfpn
 * 
 * 	def __cinit__(self, depth=31, nodes=1048576, draw_ply=32767):             # <<<<<<<<<<<<<<
 * 		self.__dfpn = __DfPn(depth, nodes, draw_ply)
 * 
 */

/* Python wrapper */
static int __pyx_pw_6cshogi_7_cshogi_4DfPn_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6cshogi_7_cshogi_4DfPn_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_depth = 0;
  PyObject *__pyx_v_nodes = 0;
  PyObject *__pyx_v_draw_ply = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_depth,&__pyx_n_s_nodes,&__pyx_n_s_draw_ply,0};
    PyObject* values[3] = {0,0,0};
    values[0] = ((PyObject *)__pyx_int_31);
    values[1] = ((PyObject *)__pyx_int_1048576);
    values[2] = ((PyObject *)__pyx_int_32767);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_depth);
          if (value) { values[0] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nodes);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_draw_ply);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 796, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_depth = values[0];
    __pyx_v_nodes = values[1];
    __pyx_v_draw_ply = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 796, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.DfPn.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_4DfPn___cinit__(((struct __pyx_obj_6cshogi_7_cshogi_DfPn *)__pyx_v_self), __pyx_v_depth, __pyx_v_nodes, __pyx_v_draw_ply);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6cshogi_7_cshogi_4DfPn___cinit__(struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self, PyObject *__pyx_v_depth, PyObject *__pyx_v_nodes, PyObject *__pyx_v_draw_ply) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  unsigned int __pyx_t_2;
  int __pyx_t_3;
  __DfPn __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cshogi/_cshogi.pyx":797
 * 
 * 	def __cinit__(self, depth=31, nodes=1048576, draw_ply=32767):
 * 		self.__dfpn = __DfPn(depth, nodes, draw_ply)             # <<<<<<<<<<<<<<
 * 
 * 	def search(self, Board board):
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_depth); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 797, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_As_unsigned_int(__pyx_v_nodes); if (unlikely((__pyx_t_2 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 797, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_v_draw_ply); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 797, __pyx_L1_error)
  try {
    __pyx_t_4 = __DfPn(__pyx_t_1, __pyx_t_2, __pyx_t_3);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 797, __pyx_L1_error)
  }
  __pyx_v_self->__pyx___dfpn = __pyx_t_4;

  /* "cshogi/_cshogi.pyx":796
 * 	cdef __DfPn __dfpn
 * 
 * 	def __cinit__(self, depth=31, nodes=1048576, draw_ply=32767):             # <<<<<<<<<<<<<<
 * 		self.__dfpn = __DfPn(depth, nodes, draw_ply)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cshogi._cshogi.DfPn.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":799
 * 		self.__dfpn = __DfPn(depth, nodes, draw_ply)
 * 
 * 	def search(self, Board board):             # <<<<<<<<<<<<<<
 * 		return self.__dfpn.search(board.__board)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_3search(PyObject *__pyx_v_self, PyObject *__pyx_v_board); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_3search(PyObject *__pyx_v_self, PyObject *__pyx_v_board) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("search (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_board), __pyx_ptype_6cshogi_7_cshogi_Board, 1, "board", 0))) __PYX_ERR(0, 799, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_4DfPn_2search(((struct __pyx_obj_6cshogi_7_cshogi_DfPn *)__pyx_v_self), ((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_board));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_2search(struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self, struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_board) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("search", 0);

  /* "cshogi/_cshogi.pyx":800
 * 
 * 	def search(self, Board board):
 * 		return self.__dfpn.search(board.__board)             # <<<<<<<<<<<<<<
 * 
 * 	def search_andnode(self, Board board):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->__pyx___dfpn.search(__pyx_v_board->__pyx___board)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 800, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":799
 * 		self.__dfpn = __DfPn(depth, nodes, draw_ply)
 * 
 * 	def search(self, Board board):             # <<<<<<<<<<<<<<
 * 		return self.__dfpn.search(board.__board)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.DfPn.search", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":802
 * 		return self.__dfpn.search(board.__board)
 * 
 * 	def search_andnode(self, Board board):             # <<<<<<<<<<<<<<
 * 		return self.__dfpn.search_andnode(board.__board)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_5search_andnode(PyObject *__pyx_v_self, PyObject *__pyx_v_board); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_5search_andnode(PyObject *__pyx_v_self, PyObject *__pyx_v_board) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("search_andnode (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_board), __pyx_ptype_6cshogi_7_cshogi_Board, 1, "board", 0))) __PYX_ERR(0, 802, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_4DfPn_4search_andnode(((struct __pyx_obj_6cshogi_7_cshogi_DfPn *)__pyx_v_self), ((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_board));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_4search_andnode(struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self, struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_board) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("search_andnode", 0);

  /* "cshogi/_cshogi.pyx":803
 * 
 * 	def search_andnode(self, Board board):
 * 		return self.__dfpn.search_andnode(board.__board)             # <<<<<<<<<<<<<<
 * 
 * 	def stop(self, bool stop):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->__pyx___dfpn.search_andnode(__pyx_v_board->__pyx___board)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 803, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":802
 * 		return self.__dfpn.search(board.__board)
 * 
 * 	def search_andnode(self, Board board):             # <<<<<<<<<<<<<<
 * 		return self.__dfpn.search_andnode(board.__board)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.DfPn.search_andnode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":805
 * 		return self.__dfpn.search_andnode(board.__board)
 * 
 * 	def stop(self, bool stop):             # <<<<<<<<<<<<<<
 * 		self.__dfpn.stop(stop)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_7stop(PyObject *__pyx_v_self, PyObject *__pyx_arg_stop); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_7stop(PyObject *__pyx_v_self, PyObject *__pyx_arg_stop) {
  bool __pyx_v_stop;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("stop (wrapper)", 0);
  assert(__pyx_arg_stop); {
    __pyx_v_stop = __Pyx_PyObject_IsTrue(__pyx_arg_stop); if (unlikely((__pyx_v_stop == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 805, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.DfPn.stop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_4DfPn_6stop(((struct __pyx_obj_6cshogi_7_cshogi_DfPn *)__pyx_v_self), ((bool)__pyx_v_stop));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_6stop(struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self, bool __pyx_v_stop) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("stop", 0);

  /* "cshogi/_cshogi.pyx":806
 * 
 * 	def stop(self, bool stop):
 * 		self.__dfpn.stop(stop)             # <<<<<<<<<<<<<<
 * 
 * 	def get_move(self, Board board):
 */
  __pyx_v_self->__pyx___dfpn.stop(__pyx_v_stop);

  /* "cshogi/_cshogi.pyx":805
 * 		return self.__dfpn.search_andnode(board.__board)
 * 
 * 	def stop(self, bool stop):             # <<<<<<<<<<<<<<
 * 		self.__dfpn.stop(stop)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":808
 * 		self.__dfpn.stop(stop)
 * 
 * 	def get_move(self, Board board):             # <<<<<<<<<<<<<<
 * 		return self.__dfpn.get_move(board.__board)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_9get_move(PyObject *__pyx_v_self, PyObject *__pyx_v_board); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_9get_move(PyObject *__pyx_v_self, PyObject *__pyx_v_board) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_move (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_board), __pyx_ptype_6cshogi_7_cshogi_Board, 1, "board", 0))) __PYX_ERR(0, 808, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_4DfPn_8get_move(((struct __pyx_obj_6cshogi_7_cshogi_DfPn *)__pyx_v_self), ((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_board));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_8get_move(struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self, struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_board) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_move", 0);

  /* "cshogi/_cshogi.pyx":809
 * 
 * 	def get_move(self, Board board):
 * 		return self.__dfpn.get_move(board.__board)             # <<<<<<<<<<<<<<
 * 
 * 	def get_pv(self, Board board):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->__pyx___dfpn.get_move(__pyx_v_board->__pyx___board)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 809, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":808
 * 		self.__dfpn.stop(stop)
 * 
 * 	def get_move(self, Board board):             # <<<<<<<<<<<<<<
 * 		return self.__dfpn.get_move(board.__board)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.DfPn.get_move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":811
 * 		return self.__dfpn.get_move(board.__board)
 * 
 * 	def get_pv(self, Board board):             # <<<<<<<<<<<<<<
 * 		self.__dfpn.get_pv(board.__board)
 * 		return self.__dfpn.pv
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_11get_pv(PyObject *__pyx_v_self, PyObject *__pyx_v_board); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_11get_pv(PyObject *__pyx_v_self, PyObject *__pyx_v_board) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_pv (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_board), __pyx_ptype_6cshogi_7_cshogi_Board, 1, "board", 0))) __PYX_ERR(0, 811, __pyx_L1_error)
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_4DfPn_10get_pv(((struct __pyx_obj_6cshogi_7_cshogi_DfPn *)__pyx_v_self), ((struct __pyx_obj_6cshogi_7_cshogi_Board *)__pyx_v_board));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_10get_pv(struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self, struct __pyx_obj_6cshogi_7_cshogi_Board *__pyx_v_board) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_pv", 0);

  /* "cshogi/_cshogi.pyx":812
 * 
 * 	def get_pv(self, Board board):
 * 		self.__dfpn.get_pv(board.__board)             # <<<<<<<<<<<<<<
 * 		return self.__dfpn.pv
 * 
 */
  __pyx_v_self->__pyx___dfpn.get_pv(__pyx_v_board->__pyx___board);

  /* "cshogi/_cshogi.pyx":813
 * 	def get_pv(self, Board board):
 * 		self.__dfpn.get_pv(board.__board)
 * 		return self.__dfpn.pv             # <<<<<<<<<<<<<<
 * 
 * 	def set_draw_ply(self, int draw_ply):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_unsigned_int(__pyx_v_self->__pyx___dfpn.pv); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 813, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":811
 * 		return self.__dfpn.get_move(board.__board)
 * 
 * 	def get_pv(self, Board board):             # <<<<<<<<<<<<<<
 * 		self.__dfpn.get_pv(board.__board)
 * 		return self.__dfpn.pv
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.DfPn.get_pv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":815
 * 		return self.__dfpn.pv
 * 
 * 	def set_draw_ply(self, int draw_ply):             # <<<<<<<<<<<<<<
 * 		self.__dfpn.set_draw_ply(draw_ply)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_13set_draw_ply(PyObject *__pyx_v_self, PyObject *__pyx_arg_draw_ply); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_13set_draw_ply(PyObject *__pyx_v_self, PyObject *__pyx_arg_draw_ply) {
  int __pyx_v_draw_ply;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_draw_ply (wrapper)", 0);
  assert(__pyx_arg_draw_ply); {
    __pyx_v_draw_ply = __Pyx_PyInt_As_int(__pyx_arg_draw_ply); if (unlikely((__pyx_v_draw_ply == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 815, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.DfPn.set_draw_ply", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_4DfPn_12set_draw_ply(((struct __pyx_obj_6cshogi_7_cshogi_DfPn *)__pyx_v_self), ((int)__pyx_v_draw_ply));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_12set_draw_ply(struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self, int __pyx_v_draw_ply) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_draw_ply", 0);

  /* "cshogi/_cshogi.pyx":816
 * 
 * 	def set_draw_ply(self, int draw_ply):
 * 		self.__dfpn.set_draw_ply(draw_ply)             # <<<<<<<<<<<<<<
 * 
 * 	def set_max_depth(self, int max_depth):
 */
  __pyx_v_self->__pyx___dfpn.set_draw_ply(__pyx_v_draw_ply);

  /* "cshogi/_cshogi.pyx":815
 * 		return self.__dfpn.pv
 * 
 * 	def set_draw_ply(self, int draw_ply):             # <<<<<<<<<<<<<<
 * 		self.__dfpn.set_draw_ply(draw_ply)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":818
 * 		self.__dfpn.set_draw_ply(draw_ply)
 * 
 * 	def set_max_depth(self, int max_depth):             # <<<<<<<<<<<<<<
 * 		self.__dfpn.set_maxdepth(max_depth)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_15set_max_depth(PyObject *__pyx_v_self, PyObject *__pyx_arg_max_depth); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_15set_max_depth(PyObject *__pyx_v_self, PyObject *__pyx_arg_max_depth) {
  int __pyx_v_max_depth;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_max_depth (wrapper)", 0);
  assert(__pyx_arg_max_depth); {
    __pyx_v_max_depth = __Pyx_PyInt_As_int(__pyx_arg_max_depth); if (unlikely((__pyx_v_max_depth == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 818, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.DfPn.set_max_depth", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_4DfPn_14set_max_depth(((struct __pyx_obj_6cshogi_7_cshogi_DfPn *)__pyx_v_self), ((int)__pyx_v_max_depth));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_14set_max_depth(struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self, int __pyx_v_max_depth) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_max_depth", 0);

  /* "cshogi/_cshogi.pyx":819
 * 
 * 	def set_max_depth(self, int max_depth):
 * 		self.__dfpn.set_maxdepth(max_depth)             # <<<<<<<<<<<<<<
 * 
 * 	def set_max_search_node(self, int max_search_node):
 */
  __pyx_v_self->__pyx___dfpn.set_maxdepth(__pyx_v_max_depth);

  /* "cshogi/_cshogi.pyx":818
 * 		self.__dfpn.set_draw_ply(draw_ply)
 * 
 * 	def set_max_depth(self, int max_depth):             # <<<<<<<<<<<<<<
 * 		self.__dfpn.set_maxdepth(max_depth)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":821
 * 		self.__dfpn.set_maxdepth(max_depth)
 * 
 * 	def set_max_search_node(self, int max_search_node):             # <<<<<<<<<<<<<<
 * 		self.__dfpn.set_max_search_node(max_search_node)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_17set_max_search_node(PyObject *__pyx_v_self, PyObject *__pyx_arg_max_search_node); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_17set_max_search_node(PyObject *__pyx_v_self, PyObject *__pyx_arg_max_search_node) {
  int __pyx_v_max_search_node;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_max_search_node (wrapper)", 0);
  assert(__pyx_arg_max_search_node); {
    __pyx_v_max_search_node = __Pyx_PyInt_As_int(__pyx_arg_max_search_node); if (unlikely((__pyx_v_max_search_node == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 821, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cshogi._cshogi.DfPn.set_max_search_node", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_4DfPn_16set_max_search_node(((struct __pyx_obj_6cshogi_7_cshogi_DfPn *)__pyx_v_self), ((int)__pyx_v_max_search_node));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_16set_max_search_node(struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self, int __pyx_v_max_search_node) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_max_search_node", 0);

  /* "cshogi/_cshogi.pyx":822
 * 
 * 	def set_max_search_node(self, int max_search_node):
 * 		self.__dfpn.set_max_search_node(max_search_node)             # <<<<<<<<<<<<<<
 * 
 * 	@property
 */
  __pyx_v_self->__pyx___dfpn.set_max_search_node(__pyx_v_max_search_node);

  /* "cshogi/_cshogi.pyx":821
 * 		self.__dfpn.set_maxdepth(max_depth)
 * 
 * 	def set_max_search_node(self, int max_search_node):             # <<<<<<<<<<<<<<
 * 		self.__dfpn.set_max_search_node(max_search_node)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cshogi/_cshogi.pyx":825
 * 
 * 	@property
 * 	def searched_node(self):             # <<<<<<<<<<<<<<
 * 		return self.__dfpn.get_searched_node()
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_13searched_node_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_13searched_node_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_4DfPn_13searched_node___get__(((struct __pyx_obj_6cshogi_7_cshogi_DfPn *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_13searched_node___get__(struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cshogi/_cshogi.pyx":826
 * 	@property
 * 	def searched_node(self):
 * 		return self.__dfpn.get_searched_node()             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_int(__pyx_v_self->__pyx___dfpn.get_searched_node()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 826, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cshogi/_cshogi.pyx":825
 * 
 * 	@property
 * 	def searched_node(self):             # <<<<<<<<<<<<<<
 * 		return self.__dfpn.get_searched_node()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.DfPn.searched_node.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_19__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_19__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_4DfPn_18__reduce_cython__(((struct __pyx_obj_6cshogi_7_cshogi_DfPn *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_18__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__20, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.DfPn.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_21__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6cshogi_7_cshogi_4DfPn_21__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6cshogi_7_cshogi_4DfPn_20__setstate_cython__(((struct __pyx_obj_6cshogi_7_cshogi_DfPn *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6cshogi_7_cshogi_4DfPn_20__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6cshogi_7_cshogi_DfPn *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__21, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cshogi._cshogi.DfPn.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":735
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":736
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 736, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":735
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":738
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":739
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 739, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":738
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":741
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":742
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 742, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":741
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":744
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":745
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 745, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":744
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":747
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":748
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 748, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":747
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":750
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyDataType_SHAPE(PyArray_Descr *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("PyDataType_SHAPE", 0);

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":751
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  __pyx_t_1 = (PyDataType_HASSUBARRAY(__pyx_v_d) != 0);
  if (__pyx_t_1) {

    /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":752
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape             # <<<<<<<<<<<<<<
 *     else:
 *         return ()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject*)__pyx_v_d->subarray->shape));
    __pyx_r = ((PyObject*)__pyx_v_d->subarray->shape);
    goto __pyx_L0;

    /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":751
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  }

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":754
 *         return <tuple>d.subarray.shape
 *     else:
 *         return ()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_empty_tuple);
    __pyx_r = __pyx_empty_tuple;
    goto __pyx_L0;
  }

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":750
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":931
 *     int _import_umath() except -1
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_array_base", 0);

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":932
 * 
 * cdef inline void set_array_base(ndarray arr, object base):
 *     Py_INCREF(base) # important to do this before stealing the reference below!             # <<<<<<<<<<<<<<
 *     PyArray_SetBaseObject(arr, base)
 * 
 */
  Py_INCREF(__pyx_v_base);

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":933
 * cdef inline void set_array_base(ndarray arr, object base):
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  (void)(PyArray_SetBaseObject(__pyx_v_arr, __pyx_v_base));

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":931
 *     int _import_umath() except -1
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":935
 *     PyArray_SetBaseObject(arr, base)
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_v_base;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base", 0);

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":936
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)             # <<<<<<<<<<<<<<
 *     if base is NULL:
 *         return None
 */
  __pyx_v_base = PyArray_BASE(__pyx_v_arr);

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":937
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)
 *     if base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     return <object>base
 */
  __pyx_t_1 = ((__pyx_v_base == NULL) != 0);
  if (__pyx_t_1) {

    /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":938
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     return <object>base
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":937
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)
 *     if base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     return <object>base
 */
  }

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":939
 *     if base is NULL:
 *         return None
 *     return <object>base             # <<<<<<<<<<<<<<
 * 
 * # Versions of the import_* functions which are more suitable for
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_base));
  __pyx_r = ((PyObject *)__pyx_v_base);
  goto __pyx_L0;

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":935
 *     PyArray_SetBaseObject(arr, base)
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":943
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         __pyx_import_array()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_array(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("import_array", 0);

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":944
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         __pyx_import_array()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":945
 * cdef inline int import_array() except -1:
 *     try:
 *         __pyx_import_array()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")
 */
      __pyx_t_4 = _import_array(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 945, __pyx_L3_error)

      /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":944
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         __pyx_import_array()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":946
 *     try:
 *         __pyx_import_array()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 946, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":947
 *         __pyx_import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__22, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 947, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(2, 947, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":944
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         __pyx_import_array()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":943
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         __pyx_import_array()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":949
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_umath(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("import_umath", 0);

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":950
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":951
 * cdef inline int import_umath() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 951, __pyx_L3_error)

      /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":950
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":952
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 952, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":953
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 953, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(2, 953, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":950
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":949
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":955
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_ufunc(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("import_ufunc", 0);

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":956
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":957
 * cdef inline int import_ufunc() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 957, __pyx_L3_error)

      /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":956
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":958
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 958, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":959
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef extern from *:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 959, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(2, 959, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":956
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":955
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":969
 * 
 * 
 * cdef inline bint is_timedelta64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.timedelta64)`
 */

static CYTHON_INLINE int __pyx_f_5numpy_is_timedelta64_object(PyObject *__pyx_v_obj) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_timedelta64_object", 0);

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":981
 *     bool
 *     """
 *     return PyObject_TypeCheck(obj, &PyTimedeltaArrType_Type)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = PyObject_TypeCheck(__pyx_v_obj, (&PyTimedeltaArrType_Type));
  goto __pyx_L0;

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":969
 * 
 * 
 * cdef inline bint is_timedelta64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.timedelta64)`
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":984
 * 
 * 
 * cdef inline bint is_datetime64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.datetime64)`
 */

static CYTHON_INLINE int __pyx_f_5numpy_is_datetime64_object(PyObject *__pyx_v_obj) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_datetime64_object", 0);

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":996
 *     bool
 *     """
 *     return PyObject_TypeCheck(obj, &PyDatetimeArrType_Type)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = PyObject_TypeCheck(__pyx_v_obj, (&PyDatetimeArrType_Type));
  goto __pyx_L0;

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":984
 * 
 * 
 * cdef inline bint is_datetime64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.datetime64)`
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":999
 * 
 * 
 * cdef inline npy_datetime get_datetime64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy datetime64 object
 */

static CYTHON_INLINE npy_datetime __pyx_f_5numpy_get_datetime64_value(PyObject *__pyx_v_obj) {
  npy_datetime __pyx_r;

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":1006
 *     also needed.  That can be found using `get_datetime64_unit`.
 *     """
 *     return (<PyDatetimeScalarObject*>obj).obval             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((PyDatetimeScalarObject *)__pyx_v_obj)->obval;
  goto __pyx_L0;

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":999
 * 
 * 
 * cdef inline npy_datetime get_datetime64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy datetime64 object
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":1009
 * 
 * 
 * cdef inline npy_timedelta get_timedelta64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy timedelta64 object
 */

static CYTHON_INLINE npy_timedelta __pyx_f_5numpy_get_timedelta64_value(PyObject *__pyx_v_obj) {
  npy_timedelta __pyx_r;

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":1013
 *     returns the int64 value underlying scalar numpy timedelta64 object
 *     """
 *     return (<PyTimedeltaScalarObject*>obj).obval             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((PyTimedeltaScalarObject *)__pyx_v_obj)->obval;
  goto __pyx_L0;

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":1009
 * 
 * 
 * cdef inline npy_timedelta get_timedelta64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy timedelta64 object
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":1016
 * 
 * 
 * cdef inline NPY_DATETIMEUNIT get_datetime64_unit(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the unit part of the dtype for a numpy datetime64 object.
 */

static CYTHON_INLINE NPY_DATETIMEUNIT __pyx_f_5numpy_get_datetime64_unit(PyObject *__pyx_v_obj) {
  NPY_DATETIMEUNIT __pyx_r;

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":1020
 *     returns the unit part of the dtype for a numpy datetime64 object.
 *     """
 *     return <NPY_DATETIMEUNIT>(<PyDatetimeScalarObject*>obj).obmeta.base             # <<<<<<<<<<<<<<
 */
  __pyx_r = ((NPY_DATETIMEUNIT)((PyDatetimeScalarObject *)__pyx_v_obj)->obmeta.base);
  goto __pyx_L0;

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":1016
 * 
 * 
 * cdef inline NPY_DATETIMEUNIT get_datetime64_unit(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the unit part of the dtype for a numpy datetime64 object.
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "string.to_py":31
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyObject_string_to_py_std__in_string", 0);

  /* "string.to_py":32
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyUnicode_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":31
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyObject_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyUnicode_string_to_py_std__in_string", 0);

  /* "string.to_py":38
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyStr_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyUnicode_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyUnicode_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":43
 * 
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyStr_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyStr_string_to_py_std__in_string", 0);

  /* "string.to_py":44
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyBytes_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyStr_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":43
 * 
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyStr_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":49
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyBytes_string_to_py_std__in_string", 0);

  /* "string.to_py":50
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyByteArray_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBytes_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":49
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyBytes_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":55
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyByteArray_string_to_py_std__in_string", 0);

  /* "string.to_py":56
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyByteArray_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":55
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyByteArray_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length = 0
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

static std::string __pyx_convert_string_from_py_std__in_string(PyObject *__pyx_v_o) {
  Py_ssize_t __pyx_v_length;
  char const *__pyx_v_data;
  std::string __pyx_r;
  __Pyx_RefNannyDeclarations
  char const *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_string_from_py_std__in_string", 0);

  /* "string.from_py":14
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:
 *     cdef Py_ssize_t length = 0             # <<<<<<<<<<<<<<
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 *     return string(data, length)
 */
  __pyx_v_length = 0;

  /* "string.from_py":15
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:
 *     cdef Py_ssize_t length = 0
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)             # <<<<<<<<<<<<<<
 *     return string(data, length)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsStringAndSize(__pyx_v_o, (&__pyx_v_length)); if (unlikely(__pyx_t_1 == ((char const *)NULL))) __PYX_ERR(1, 15, __pyx_L1_error)
  __pyx_v_data = __pyx_t_1;

  /* "string.from_py":16
 *     cdef Py_ssize_t length = 0
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 *     return string(data, length)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = std::string(__pyx_v_data, __pyx_v_length);
  goto __pyx_L0;

  /* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length = 0
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("string.from_py.__pyx_convert_string_from_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_int")
 * cdef object __pyx_convert_vector_to_py_int(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

static PyObject *__pyx_convert_vector_to_py_int(const std::vector<int>  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_int", 0);

  /* "vector.to_py":61
 * @cname("__pyx_convert_vector_to_py_int")
 * cdef object __pyx_convert_vector_to_py_int(vector[X]& v):
 *     return [v[i] for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;
    __pyx_t_5 = __Pyx_PyInt_From_int((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_int")
 * cdef object __pyx_convert_vector_to_py_int(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_convert_vector_to_py_float(const std::vector<float>  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_float", 0);

  /* "vector.to_py":61
 * @cname("__pyx_convert_vector_to_py_float")
 * cdef object __pyx_convert_vector_to_py_float(vector[X]& v):
 *     return [v[i] for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;
    __pyx_t_5 = PyFloat_FromDouble((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_float")
 * cdef object __pyx_convert_vector_to_py_float(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_float", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_convert_vector_to_py_unsigned_int(const std::vector<unsigned int>  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_unsigned_int", 0);

  /* "vector.to_py":61
 * @cname("__pyx_convert_vector_to_py_unsigned_int")
 * cdef object __pyx_convert_vector_to_py_unsigned_int(vector[X]& v):
 *     return [v[i] for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;
    __pyx_t_5 = __Pyx_PyInt_From_unsigned_int((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_unsigned_int")
 * cdef object __pyx_convert_vector_to_py_unsigned_int(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_unsigned_int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_6cshogi_7_cshogi_Board(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_6cshogi_7_cshogi_Board *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6cshogi_7_cshogi_Board *)o);
  new((void*)&(p->__pyx___board)) __Board();
  if (unlikely(__pyx_pw_6cshogi_7_cshogi_5Board_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_6cshogi_7_cshogi_Board(PyObject *o) {
  struct __pyx_obj_6cshogi_7_cshogi_Board *p = (struct __pyx_obj_6cshogi_7_cshogi_Board *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->__pyx___board);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_6cshogi_7_cshogi_5Board_legal_moves(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6cshogi_7_cshogi_5Board_11legal_moves_1__get__(o);
}

static PyObject *__pyx_getprop_6cshogi_7_cshogi_5Board_turn(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6cshogi_7_cshogi_5Board_4turn_1__get__(o);
}

static PyObject *__pyx_getprop_6cshogi_7_cshogi_5Board_move_number(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6cshogi_7_cshogi_5Board_11move_number_1__get__(o);
}

static PyObject *__pyx_getprop_6cshogi_7_cshogi_5Board_pieces_in_hand(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6cshogi_7_cshogi_5Board_14pieces_in_hand_1__get__(o);
}

static PyObject *__pyx_getprop_6cshogi_7_cshogi_5Board_pieces(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6cshogi_7_cshogi_5Board_6pieces_1__get__(o);
}

static PyMethodDef __pyx_methods_6cshogi_7_cshogi_Board[] = {
  {"__copy__", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_3__copy__, METH_NOARGS, 0},
  {"copy", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_5copy, METH_NOARGS, 0},
  {"set_sfen", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_7set_sfen, METH_O, 0},
  {"set_position", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_9set_position, METH_O, 0},
  {"set_hcp", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_11set_hcp, METH_O, 0},
  {"set_psfen", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_13set_psfen, METH_O, 0},
  {"reset", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_15reset, METH_NOARGS, 0},
  {"push", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_19push, METH_O, 0},
  {"push_usi", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_21push_usi, METH_O, 0},
  {"push_csa", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_23push_csa, METH_O, 0},
  {"push_move16", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_25push_move16, METH_O, 0},
  {"push_psv", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_27push_psv, METH_O, 0},
  {"push_pass", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_29push_pass, METH_NOARGS, 0},
  {"pop_pass", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_31pop_pass, METH_NOARGS, 0},
  {"pop", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_33pop, METH_NOARGS, 0},
  {"peek", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_35peek, METH_NOARGS, 0},
  {"is_game_over", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_37is_game_over, METH_NOARGS, 0},
  {"is_draw", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_6cshogi_7_cshogi_5Board_39is_draw, METH_VARARGS|METH_KEYWORDS, 0},
  {"move", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_6cshogi_7_cshogi_5Board_41move, METH_VARARGS|METH_KEYWORDS, 0},
  {"drop_move", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_6cshogi_7_cshogi_5Board_43drop_move, METH_VARARGS|METH_KEYWORDS, 0},
  {"move_from_usi", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_45move_from_usi, METH_O, 0},
  {"move_from_csa", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_47move_from_csa, METH_O, 0},
  {"move_from_move16", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_49move_from_move16, METH_O, 0},
  {"move_from_psv", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_51move_from_psv, METH_O, 0},
  {"sfen", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_53sfen, METH_NOARGS, 0},
  {"csa_pos", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_55csa_pos, METH_NOARGS, 0},
  {"to_hcp", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_57to_hcp, METH_O, 0},
  {"to_psfen", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_59to_psfen, METH_O, 0},
  {"piece", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_61piece, METH_O, 0},
  {"piece_type", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_63piece_type, METH_O, 0},
  {"is_check", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_65is_check, METH_NOARGS, 0},
  {"mate_move_in_1ply", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_67mate_move_in_1ply, METH_NOARGS, 0},
  {"mate_move", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_69mate_move, METH_O, 0},
  {"is_mate", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_71is_mate, METH_O, 0},
  {"zobrist_hash", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_73zobrist_hash, METH_NOARGS, 0},
  {"is_pseudo_legal", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_75is_pseudo_legal, METH_O, 0},
  {"is_legal", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_77is_legal, METH_O, 0},
  {"is_nyugyoku", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_79is_nyugyoku, METH_NOARGS, 0},
  {"piece_planes", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_81piece_planes, METH_O, 0},
  {"piece_planes_rotate", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_83piece_planes_rotate, METH_O, 0},
  {"_dlshogi_make_input_features", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_6cshogi_7_cshogi_5Board_85_dlshogi_make_input_features, METH_VARARGS|METH_KEYWORDS, 0},
  {"is_ok", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_87is_ok, METH_NOARGS, 0},
  {"book_key", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_89book_key, METH_NOARGS, 0},
  {"to_svg", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_6cshogi_7_cshogi_5Board_91to_svg, METH_VARARGS|METH_KEYWORDS, 0},
  {"_repr_svg_", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_93_repr_svg_, METH_NOARGS, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_95__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_5Board_97__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6cshogi_7_cshogi_Board[] = {
  {(char *)"legal_moves", __pyx_getprop_6cshogi_7_cshogi_5Board_legal_moves, 0, (char *)0, 0},
  {(char *)"turn", __pyx_getprop_6cshogi_7_cshogi_5Board_turn, 0, (char *)0, 0},
  {(char *)"move_number", __pyx_getprop_6cshogi_7_cshogi_5Board_move_number, 0, (char *)0, 0},
  {(char *)"pieces_in_hand", __pyx_getprop_6cshogi_7_cshogi_5Board_pieces_in_hand, 0, (char *)0, 0},
  {(char *)"pieces", __pyx_getprop_6cshogi_7_cshogi_5Board_pieces, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6cshogi_7_cshogi_Board = {
  PyVarObject_HEAD_INIT(0, 0)
  "cshogi._cshogi.Board", /*tp_name*/
  sizeof(struct __pyx_obj_6cshogi_7_cshogi_Board), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6cshogi_7_cshogi_Board, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_6cshogi_7_cshogi_5Board_17__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6cshogi_7_cshogi_Board, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6cshogi_7_cshogi_Board, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6cshogi_7_cshogi_Board, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static PyObject *__pyx_tp_new_6cshogi_7_cshogi_LegalMoveList(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *)o);
  new((void*)&(p->__pyx___ml)) __LegalMoveList();
  if (unlikely(__pyx_pw_6cshogi_7_cshogi_13LegalMoveList_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_6cshogi_7_cshogi_LegalMoveList(PyObject *o) {
  struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *p = (struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->__pyx___ml);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_specialmethod___pyx_pw_6cshogi_7_cshogi_13LegalMoveList_5__next__(PyObject *self, CYTHON_UNUSED PyObject *arg) {return __pyx_pw_6cshogi_7_cshogi_13LegalMoveList_5__next__(self);}

static PyMethodDef __pyx_methods_6cshogi_7_cshogi_LegalMoveList[] = {
  {"__next__", (PyCFunction)__pyx_specialmethod___pyx_pw_6cshogi_7_cshogi_13LegalMoveList_5__next__, METH_NOARGS|METH_COEXIST, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_13LegalMoveList_9__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_13LegalMoveList_11__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_LegalMoveList = {
  __pyx_pw_6cshogi_7_cshogi_13LegalMoveList_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_LegalMoveList = {
  __pyx_pw_6cshogi_7_cshogi_13LegalMoveList_7__len__, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_6cshogi_7_cshogi_LegalMoveList = {
  PyVarObject_HEAD_INIT(0, 0)
  "cshogi._cshogi.LegalMoveList", /*tp_name*/
  sizeof(struct __pyx_obj_6cshogi_7_cshogi_LegalMoveList), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6cshogi_7_cshogi_LegalMoveList, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_LegalMoveList, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_LegalMoveList, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_6cshogi_7_cshogi_13LegalMoveList_3__iter__, /*tp_iter*/
  __pyx_pw_6cshogi_7_cshogi_13LegalMoveList_5__next__, /*tp_iternext*/
  __pyx_methods_6cshogi_7_cshogi_LegalMoveList, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6cshogi_7_cshogi_LegalMoveList, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static PyObject *__pyx_tp_new_6cshogi_7_cshogi_Parser(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_6cshogi_7_cshogi_Parser *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6cshogi_7_cshogi_Parser *)o);
  new((void*)&(p->__pyx___parser)) parser::__Parser();
  if (unlikely(__pyx_pw_6cshogi_7_cshogi_6Parser_5__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_6cshogi_7_cshogi_Parser(PyObject *o) {
  struct __pyx_obj_6cshogi_7_cshogi_Parser *p = (struct __pyx_obj_6cshogi_7_cshogi_Parser *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->__pyx___parser);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_6cshogi_7_cshogi_6Parser_version(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6cshogi_7_cshogi_6Parser_7version_1__get__(o);
}

static PyObject *__pyx_getprop_6cshogi_7_cshogi_6Parser_var_info(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6cshogi_7_cshogi_6Parser_8var_info_1__get__(o);
}

static PyObject *__pyx_getprop_6cshogi_7_cshogi_6Parser_sfen(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6cshogi_7_cshogi_6Parser_4sfen_1__get__(o);
}

static PyObject *__pyx_getprop_6cshogi_7_cshogi_6Parser_endgame(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6cshogi_7_cshogi_6Parser_7endgame_1__get__(o);
}

static PyObject *__pyx_getprop_6cshogi_7_cshogi_6Parser_names(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6cshogi_7_cshogi_6Parser_5names_1__get__(o);
}

static PyObject *__pyx_getprop_6cshogi_7_cshogi_6Parser_ratings(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6cshogi_7_cshogi_6Parser_7ratings_1__get__(o);
}

static PyObject *__pyx_getprop_6cshogi_7_cshogi_6Parser_moves(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6cshogi_7_cshogi_6Parser_5moves_1__get__(o);
}

static PyObject *__pyx_getprop_6cshogi_7_cshogi_6Parser_times(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6cshogi_7_cshogi_6Parser_5times_1__get__(o);
}

static PyObject *__pyx_getprop_6cshogi_7_cshogi_6Parser_scores(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6cshogi_7_cshogi_6Parser_6scores_1__get__(o);
}

static PyObject *__pyx_getprop_6cshogi_7_cshogi_6Parser_comments(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6cshogi_7_cshogi_6Parser_8comments_1__get__(o);
}

static PyObject *__pyx_getprop_6cshogi_7_cshogi_6Parser_win(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6cshogi_7_cshogi_6Parser_3win_1__get__(o);
}

static PyObject *__pyx_getprop_6cshogi_7_cshogi_6Parser_comment(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6cshogi_7_cshogi_6Parser_7comment_1__get__(o);
}

static PyMethodDef __pyx_methods_6cshogi_7_cshogi_Parser[] = {
  {"parse_file", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_6cshogi_7_cshogi_6Parser_1parse_file, METH_VARARGS|METH_KEYWORDS, 0},
  {"parse_str", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_6cshogi_7_cshogi_6Parser_3parse_str, METH_VARARGS|METH_KEYWORDS, 0},
  {"parse_csa_file", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_6Parser_7parse_csa_file, METH_O, 0},
  {"parse_csa_str", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_6Parser_9parse_csa_str, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_6Parser_11__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_6Parser_13__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6cshogi_7_cshogi_Parser[] = {
  {(char *)"version", __pyx_getprop_6cshogi_7_cshogi_6Parser_version, 0, (char *)0, 0},
  {(char *)"var_info", __pyx_getprop_6cshogi_7_cshogi_6Parser_var_info, 0, (char *)0, 0},
  {(char *)"sfen", __pyx_getprop_6cshogi_7_cshogi_6Parser_sfen, 0, (char *)0, 0},
  {(char *)"endgame", __pyx_getprop_6cshogi_7_cshogi_6Parser_endgame, 0, (char *)0, 0},
  {(char *)"names", __pyx_getprop_6cshogi_7_cshogi_6Parser_names, 0, (char *)0, 0},
  {(char *)"ratings", __pyx_getprop_6cshogi_7_cshogi_6Parser_ratings, 0, (char *)0, 0},
  {(char *)"moves", __pyx_getprop_6cshogi_7_cshogi_6Parser_moves, 0, (char *)0, 0},
  {(char *)"times", __pyx_getprop_6cshogi_7_cshogi_6Parser_times, 0, (char *)0, 0},
  {(char *)"scores", __pyx_getprop_6cshogi_7_cshogi_6Parser_scores, 0, (char *)0, 0},
  {(char *)"comments", __pyx_getprop_6cshogi_7_cshogi_6Parser_comments, 0, (char *)0, 0},
  {(char *)"win", __pyx_getprop_6cshogi_7_cshogi_6Parser_win, 0, (char *)0, 0},
  {(char *)"comment", __pyx_getprop_6cshogi_7_cshogi_6Parser_comment, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6cshogi_7_cshogi_Parser = {
  PyVarObject_HEAD_INIT(0, 0)
  "cshogi._cshogi.Parser", /*tp_name*/
  sizeof(struct __pyx_obj_6cshogi_7_cshogi_Parser), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6cshogi_7_cshogi_Parser, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6cshogi_7_cshogi_Parser, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6cshogi_7_cshogi_Parser, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6cshogi_7_cshogi_Parser, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static PyObject *__pyx_tp_new_6cshogi_7_cshogi_DfPn(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_6cshogi_7_cshogi_DfPn *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6cshogi_7_cshogi_DfPn *)o);
  new((void*)&(p->__pyx___dfpn)) __DfPn();
  if (unlikely(__pyx_pw_6cshogi_7_cshogi_4DfPn_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_6cshogi_7_cshogi_DfPn(PyObject *o) {
  struct __pyx_obj_6cshogi_7_cshogi_DfPn *p = (struct __pyx_obj_6cshogi_7_cshogi_DfPn *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->__pyx___dfpn);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_6cshogi_7_cshogi_4DfPn_searched_node(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6cshogi_7_cshogi_4DfPn_13searched_node_1__get__(o);
}

static PyMethodDef __pyx_methods_6cshogi_7_cshogi_DfPn[] = {
  {"search", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_4DfPn_3search, METH_O, 0},
  {"search_andnode", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_4DfPn_5search_andnode, METH_O, 0},
  {"stop", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_4DfPn_7stop, METH_O, 0},
  {"get_move", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_4DfPn_9get_move, METH_O, 0},
  {"get_pv", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_4DfPn_11get_pv, METH_O, 0},
  {"set_draw_ply", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_4DfPn_13set_draw_ply, METH_O, 0},
  {"set_max_depth", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_4DfPn_15set_max_depth, METH_O, 0},
  {"set_max_search_node", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_4DfPn_17set_max_search_node, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_4DfPn_19__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6cshogi_7_cshogi_4DfPn_21__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6cshogi_7_cshogi_DfPn[] = {
  {(char *)"searched_node", __pyx_getprop_6cshogi_7_cshogi_4DfPn_searched_node, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6cshogi_7_cshogi_DfPn = {
  PyVarObject_HEAD_INIT(0, 0)
  "cshogi._cshogi.DfPn", /*tp_name*/
  sizeof(struct __pyx_obj_6cshogi_7_cshogi_DfPn), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6cshogi_7_cshogi_DfPn, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6cshogi_7_cshogi_DfPn, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6cshogi_7_cshogi_DfPn, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6cshogi_7_cshogi_DfPn, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec__cshogi(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec__cshogi},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "_cshogi",
    0, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_, __pyx_k_, sizeof(__pyx_k_), 0, 0, 1, 1},
  {&__pyx_kp_s_0_0, __pyx_k_0_0, sizeof(__pyx_k_0_0), 0, 0, 1, 0},
  {&__pyx_kp_s_1_1, __pyx_k_1_1, sizeof(__pyx_k_1_1), 0, 0, 1, 0},
  {&__pyx_kp_s_1a, __pyx_k_1a, sizeof(__pyx_k_1a), 0, 0, 1, 0},
  {&__pyx_kp_s_1b, __pyx_k_1b, sizeof(__pyx_k_1b), 0, 0, 1, 0},
  {&__pyx_kp_s_1c, __pyx_k_1c, sizeof(__pyx_k_1c), 0, 0, 1, 0},
  {&__pyx_kp_s_1d, __pyx_k_1d, sizeof(__pyx_k_1d), 0, 0, 1, 0},
  {&__pyx_kp_s_1e, __pyx_k_1e, sizeof(__pyx_k_1e), 0, 0, 1, 0},
  {&__pyx_kp_s_1f, __pyx_k_1f, sizeof(__pyx_k_1f), 0, 0, 1, 0},
  {&__pyx_kp_s_1g, __pyx_k_1g, sizeof(__pyx_k_1g), 0, 0, 1, 0},
  {&__pyx_kp_s_1h, __pyx_k_1h, sizeof(__pyx_k_1h), 0, 0, 1, 0},
  {&__pyx_kp_s_1i, __pyx_k_1i, sizeof(__pyx_k_1i), 0, 0, 1, 0},
  {&__pyx_kp_s_2a, __pyx_k_2a, sizeof(__pyx_k_2a), 0, 0, 1, 0},
  {&__pyx_kp_s_2b, __pyx_k_2b, sizeof(__pyx_k_2b), 0, 0, 1, 0},
  {&__pyx_kp_s_2c, __pyx_k_2c, sizeof(__pyx_k_2c), 0, 0, 1, 0},
  {&__pyx_kp_s_2d, __pyx_k_2d, sizeof(__pyx_k_2d), 0, 0, 1, 0},
  {&__pyx_kp_s_2e, __pyx_k_2e, sizeof(__pyx_k_2e), 0, 0, 1, 0},
  {&__pyx_kp_s_2f, __pyx_k_2f, sizeof(__pyx_k_2f), 0, 0, 1, 0},
  {&__pyx_kp_s_2g, __pyx_k_2g, sizeof(__pyx_k_2g), 0, 0, 1, 0},
  {&__pyx_kp_s_2h, __pyx_k_2h, sizeof(__pyx_k_2h), 0, 0, 1, 0},
  {&__pyx_kp_s_2i, __pyx_k_2i, sizeof(__pyx_k_2i), 0, 0, 1, 0},
  {&__pyx_kp_s_3a, __pyx_k_3a, sizeof(__pyx_k_3a), 0, 0, 1, 0},
  {&__pyx_kp_s_3b, __pyx_k_3b, sizeof(__pyx_k_3b), 0, 0, 1, 0},
  {&__pyx_kp_s_3c, __pyx_k_3c, sizeof(__pyx_k_3c), 0, 0, 1, 0},
  {&__pyx_kp_s_3d, __pyx_k_3d, sizeof(__pyx_k_3d), 0, 0, 1, 0},
  {&__pyx_kp_s_3e, __pyx_k_3e, sizeof(__pyx_k_3e), 0, 0, 1, 0},
  {&__pyx_kp_s_3f, __pyx_k_3f, sizeof(__pyx_k_3f), 0, 0, 1, 0},
  {&__pyx_kp_s_3g, __pyx_k_3g, sizeof(__pyx_k_3g), 0, 0, 1, 0},
  {&__pyx_kp_s_3h, __pyx_k_3h, sizeof(__pyx_k_3h), 0, 0, 1, 0},
  {&__pyx_kp_s_3i, __pyx_k_3i, sizeof(__pyx_k_3i), 0, 0, 1, 0},
  {&__pyx_kp_s_4a, __pyx_k_4a, sizeof(__pyx_k_4a), 0, 0, 1, 0},
  {&__pyx_kp_s_4b, __pyx_k_4b, sizeof(__pyx_k_4b), 0, 0, 1, 0},
  {&__pyx_kp_s_4c, __pyx_k_4c, sizeof(__pyx_k_4c), 0, 0, 1, 0},
  {&__pyx_kp_s_4d, __pyx_k_4d, sizeof(__pyx_k_4d), 0, 0, 1, 0},
  {&__pyx_kp_s_4e, __pyx_k_4e, sizeof(__pyx_k_4e), 0, 0, 1, 0},
  {&__pyx_kp_s_4f, __pyx_k_4f, sizeof(__pyx_k_4f), 0, 0, 1, 0},
  {&__pyx_kp_s_4g, __pyx_k_4g, sizeof(__pyx_k_4g), 0, 0, 1, 0},
  {&__pyx_kp_s_4h, __pyx_k_4h, sizeof(__pyx_k_4h), 0, 0, 1, 0},
  {&__pyx_kp_s_4i, __pyx_k_4i, sizeof(__pyx_k_4i), 0, 0, 1, 0},
  {&__pyx_kp_s_5a, __pyx_k_5a, sizeof(__pyx_k_5a), 0, 0, 1, 0},
  {&__pyx_kp_s_5b, __pyx_k_5b, sizeof(__pyx_k_5b), 0, 0, 1, 0},
  {&__pyx_kp_s_5c, __pyx_k_5c, sizeof(__pyx_k_5c), 0, 0, 1, 0},
  {&__pyx_kp_s_5d, __pyx_k_5d, sizeof(__pyx_k_5d), 0, 0, 1, 0},
  {&__pyx_kp_s_5e, __pyx_k_5e, sizeof(__pyx_k_5e), 0, 0, 1, 0},
  {&__pyx_kp_s_5f, __pyx_k_5f, sizeof(__pyx_k_5f), 0, 0, 1, 0},
  {&__pyx_kp_s_5g, __pyx_k_5g, sizeof(__pyx_k_5g), 0, 0, 1, 0},
  {&__pyx_kp_s_5h, __pyx_k_5h, sizeof(__pyx_k_5h), 0, 0, 1, 0},
  {&__pyx_kp_s_5i, __pyx_k_5i, sizeof(__pyx_k_5i), 0, 0, 1, 0},
  {&__pyx_kp_s_6a, __pyx_k_6a, sizeof(__pyx_k_6a), 0, 0, 1, 0},
  {&__pyx_kp_s_6b, __pyx_k_6b, sizeof(__pyx_k_6b), 0, 0, 1, 0},
  {&__pyx_kp_s_6c, __pyx_k_6c, sizeof(__pyx_k_6c), 0, 0, 1, 0},
  {&__pyx_kp_s_6d, __pyx_k_6d, sizeof(__pyx_k_6d), 0, 0, 1, 0},
  {&__pyx_kp_s_6e, __pyx_k_6e, sizeof(__pyx_k_6e), 0, 0, 1, 0},
  {&__pyx_kp_s_6f, __pyx_k_6f, sizeof(__pyx_k_6f), 0, 0, 1, 0},
  {&__pyx_kp_s_6g, __pyx_k_6g, sizeof(__pyx_k_6g), 0, 0, 1, 0},
  {&__pyx_kp_s_6h, __pyx_k_6h, sizeof(__pyx_k_6h), 0, 0, 1, 0},
  {&__pyx_kp_s_6i, __pyx_k_6i, sizeof(__pyx_k_6i), 0, 0, 1, 0},
  {&__pyx_kp_s_7a, __pyx_k_7a, sizeof(__pyx_k_7a), 0, 0, 1, 0},
  {&__pyx_kp_s_7b, __pyx_k_7b, sizeof(__pyx_k_7b), 0, 0, 1, 0},
  {&__pyx_kp_s_7c, __pyx_k_7c, sizeof(__pyx_k_7c), 0, 0, 1, 0},
  {&__pyx_kp_s_7d, __pyx_k_7d, sizeof(__pyx_k_7d), 0, 0, 1, 0},
  {&__pyx_kp_s_7e, __pyx_k_7e, sizeof(__pyx_k_7e), 0, 0, 1, 0},
  {&__pyx_kp_s_7f, __pyx_k_7f, sizeof(__pyx_k_7f), 0, 0, 1, 0},
  {&__pyx_kp_s_7g, __pyx_k_7g, sizeof(__pyx_k_7g), 0, 0, 1, 0},
  {&__pyx_kp_s_7h, __pyx_k_7h, sizeof(__pyx_k_7h), 0, 0, 1, 0},
  {&__pyx_kp_s_7i, __pyx_k_7i, sizeof(__pyx_k_7i), 0, 0, 1, 0},
  {&__pyx_kp_s_8a, __pyx_k_8a, sizeof(__pyx_k_8a), 0, 0, 1, 0},
  {&__pyx_kp_s_8b, __pyx_k_8b, sizeof(__pyx_k_8b), 0, 0, 1, 0},
  {&__pyx_kp_s_8c, __pyx_k_8c, sizeof(__pyx_k_8c), 0, 0, 1, 0},
  {&__pyx_kp_s_8d, __pyx_k_8d, sizeof(__pyx_k_8d), 0, 0, 1, 0},
  {&__pyx_kp_s_8e, __pyx_k_8e, sizeof(__pyx_k_8e), 0, 0, 1, 0},
  {&__pyx_kp_s_8f, __pyx_k_8f, sizeof(__pyx_k_8f), 0, 0, 1, 0},
  {&__pyx_kp_s_8g, __pyx_k_8g, sizeof(__pyx_k_8g), 0, 0, 1, 0},
  {&__pyx_kp_s_8h, __pyx_k_8h, sizeof(__pyx_k_8h), 0, 0, 1, 0},
  {&__pyx_kp_s_8i, __pyx_k_8i, sizeof(__pyx_k_8i), 0, 0, 1, 0},
  {&__pyx_kp_s_9a, __pyx_k_9a, sizeof(__pyx_k_9a), 0, 0, 1, 0},
  {&__pyx_kp_s_9b, __pyx_k_9b, sizeof(__pyx_k_9b), 0, 0, 1, 0},
  {&__pyx_kp_s_9c, __pyx_k_9c, sizeof(__pyx_k_9c), 0, 0, 1, 0},
  {&__pyx_kp_s_9d, __pyx_k_9d, sizeof(__pyx_k_9d), 0, 0, 1, 0},
  {&__pyx_kp_s_9e, __pyx_k_9e, sizeof(__pyx_k_9e), 0, 0, 1, 0},
  {&__pyx_kp_s_9f, __pyx_k_9f, sizeof(__pyx_k_9f), 0, 0, 1, 0},
  {&__pyx_kp_s_9g, __pyx_k_9g, sizeof(__pyx_k_9g), 0, 0, 1, 0},
  {&__pyx_kp_s_9h, __pyx_k_9h, sizeof(__pyx_k_9h), 0, 0, 1, 0},
  {&__pyx_kp_s_9i, __pyx_k_9i, sizeof(__pyx_k_9i), 0, 0, 1, 0},
  {&__pyx_n_s_A1, __pyx_k_A1, sizeof(__pyx_k_A1), 0, 0, 1, 1},
  {&__pyx_n_s_A2, __pyx_k_A2, sizeof(__pyx_k_A2), 0, 0, 1, 1},
  {&__pyx_n_s_A3, __pyx_k_A3, sizeof(__pyx_k_A3), 0, 0, 1, 1},
  {&__pyx_n_s_A4, __pyx_k_A4, sizeof(__pyx_k_A4), 0, 0, 1, 1},
  {&__pyx_n_s_A5, __pyx_k_A5, sizeof(__pyx_k_A5), 0, 0, 1, 1},
  {&__pyx_n_s_A6, __pyx_k_A6, sizeof(__pyx_k_A6), 0, 0, 1, 1},
  {&__pyx_n_s_A7, __pyx_k_A7, sizeof(__pyx_k_A7), 0, 0, 1, 1},
  {&__pyx_n_s_A8, __pyx_k_A8, sizeof(__pyx_k_A8), 0, 0, 1, 1},
  {&__pyx_n_s_A9, __pyx_k_A9, sizeof(__pyx_k_A9), 0, 0, 1, 1},
  {&__pyx_n_s_B1, __pyx_k_B1, sizeof(__pyx_k_B1), 0, 0, 1, 1},
  {&__pyx_n_s_B2, __pyx_k_B2, sizeof(__pyx_k_B2), 0, 0, 1, 1},
  {&__pyx_n_s_B3, __pyx_k_B3, sizeof(__pyx_k_B3), 0, 0, 1, 1},
  {&__pyx_n_s_B4, __pyx_k_B4, sizeof(__pyx_k_B4), 0, 0, 1, 1},
  {&__pyx_n_s_B5, __pyx_k_B5, sizeof(__pyx_k_B5), 0, 0, 1, 1},
  {&__pyx_n_s_B6, __pyx_k_B6, sizeof(__pyx_k_B6), 0, 0, 1, 1},
  {&__pyx_n_s_B7, __pyx_k_B7, sizeof(__pyx_k_B7), 0, 0, 1, 1},
  {&__pyx_n_s_B8, __pyx_k_B8, sizeof(__pyx_k_B8), 0, 0, 1, 1},
  {&__pyx_n_s_B9, __pyx_k_B9, sizeof(__pyx_k_B9), 0, 0, 1, 1},
  {&__pyx_n_s_BBISHOP, __pyx_k_BBISHOP, sizeof(__pyx_k_BBISHOP), 0, 0, 1, 1},
  {&__pyx_n_s_BGOLD, __pyx_k_BGOLD, sizeof(__pyx_k_BGOLD), 0, 0, 1, 1},
  {&__pyx_n_s_BISHOP, __pyx_k_BISHOP, sizeof(__pyx_k_BISHOP), 0, 0, 1, 1},
  {&__pyx_n_s_BKING, __pyx_k_BKING, sizeof(__pyx_k_BKING), 0, 0, 1, 1},
  {&__pyx_n_s_BKNIGHT, __pyx_k_BKNIGHT, sizeof(__pyx_k_BKNIGHT), 0, 0, 1, 1},
  {&__pyx_n_s_BLACK, __pyx_k_BLACK, sizeof(__pyx_k_BLACK), 0, 0, 1, 1},
  {&__pyx_n_s_BLACK_WIN, __pyx_k_BLACK_WIN, sizeof(__pyx_k_BLACK_WIN), 0, 0, 1, 1},
  {&__pyx_n_s_BLANCE, __pyx_k_BLANCE, sizeof(__pyx_k_BLANCE), 0, 0, 1, 1},
  {&__pyx_n_s_BPAWN, __pyx_k_BPAWN, sizeof(__pyx_k_BPAWN), 0, 0, 1, 1},
  {&__pyx_n_s_BPROM_BISHOP, __pyx_k_BPROM_BISHOP, sizeof(__pyx_k_BPROM_BISHOP), 0, 0, 1, 1},
  {&__pyx_n_s_BPROM_KNIGHT, __pyx_k_BPROM_KNIGHT, sizeof(__pyx_k_BPROM_KNIGHT), 0, 0, 1, 1},
  {&__pyx_n_s_BPROM_LANCE, __pyx_k_BPROM_LANCE, sizeof(__pyx_k_BPROM_LANCE), 0, 0, 1, 1},
  {&__pyx_n_s_BPROM_PAWN, __pyx_k_BPROM_PAWN, sizeof(__pyx_k_BPROM_PAWN), 0, 0, 1, 1},
  {&__pyx_n_s_BPROM_ROOK, __pyx_k_BPROM_ROOK, sizeof(__pyx_k_BPROM_ROOK), 0, 0, 1, 1},
  {&__pyx_n_s_BPROM_SILVER, __pyx_k_BPROM_SILVER, sizeof(__pyx_k_BPROM_SILVER), 0, 0, 1, 1},
  {&__pyx_n_s_BROOK, __pyx_k_BROOK, sizeof(__pyx_k_BROOK), 0, 0, 1, 1},
  {&__pyx_n_s_BSILVER, __pyx_k_BSILVER, sizeof(__pyx_k_BSILVER), 0, 0, 1, 1},
  {&__pyx_n_s_Board, __pyx_k_Board, sizeof(__pyx_k_Board), 0, 0, 1, 1},
  {&__pyx_n_s_BookEntry, __pyx_k_BookEntry, sizeof(__pyx_k_BookEntry), 0, 0, 1, 1},
  {&__pyx_n_s_C1, __pyx_k_C1, sizeof(__pyx_k_C1), 0, 0, 1, 1},
  {&__pyx_n_s_C2, __pyx_k_C2, sizeof(__pyx_k_C2), 0, 0, 1, 1},
  {&__pyx_n_s_C3, __pyx_k_C3, sizeof(__pyx_k_C3), 0, 0, 1, 1},
  {&__pyx_n_s_C4, __pyx_k_C4, sizeof(__pyx_k_C4), 0, 0, 1, 1},
  {&__pyx_n_s_C5, __pyx_k_C5, sizeof(__pyx_k_C5), 0, 0, 1, 1},
  {&__pyx_n_s_C6, __pyx_k_C6, sizeof(__pyx_k_C6), 0, 0, 1, 1},
  {&__pyx_n_s_C7, __pyx_k_C7, sizeof(__pyx_k_C7), 0, 0, 1, 1},
  {&__pyx_n_s_C8, __pyx_k_C8, sizeof(__pyx_k_C8), 0, 0, 1, 1},
  {&__pyx_n_s_C9, __pyx_k_C9, sizeof(__pyx_k_C9), 0, 0, 1, 1},
  {&__pyx_n_s_COLORS, __pyx_k_COLORS, sizeof(__pyx_k_COLORS), 0, 0, 1, 1},
  {&__pyx_n_s_D1, __pyx_k_D1, sizeof(__pyx_k_D1), 0, 0, 1, 1},
  {&__pyx_n_s_D2, __pyx_k_D2, sizeof(__pyx_k_D2), 0, 0, 1, 1},
  {&__pyx_n_s_D3, __pyx_k_D3, sizeof(__pyx_k_D3), 0, 0, 1, 1},
  {&__pyx_n_s_D4, __pyx_k_D4, sizeof(__pyx_k_D4), 0, 0, 1, 1},
  {&__pyx_n_s_D5, __pyx_k_D5, sizeof(__pyx_k_D5), 0, 0, 1, 1},
  {&__pyx_n_s_D6, __pyx_k_D6, sizeof(__pyx_k_D6), 0, 0, 1, 1},
  {&__pyx_n_s_D7, __pyx_k_D7, sizeof(__pyx_k_D7), 0, 0, 1, 1},
  {&__pyx_n_s_D8, __pyx_k_D8, sizeof(__pyx_k_D8), 0, 0, 1, 1},
  {&__pyx_n_s_D9, __pyx_k_D9, sizeof(__pyx_k_D9), 0, 0, 1, 1},
  {&__pyx_n_s_DRAW, __pyx_k_DRAW, sizeof(__pyx_k_DRAW), 0, 0, 1, 1},
  {&__pyx_n_s_DfPn, __pyx_k_DfPn, sizeof(__pyx_k_DfPn), 0, 0, 1, 1},
  {&__pyx_n_s_E1, __pyx_k_E1, sizeof(__pyx_k_E1), 0, 0, 1, 1},
  {&__pyx_n_s_E2, __pyx_k_E2, sizeof(__pyx_k_E2), 0, 0, 1, 1},
  {&__pyx_n_s_E3, __pyx_k_E3, sizeof(__pyx_k_E3), 0, 0, 1, 1},
  {&__pyx_n_s_E4, __pyx_k_E4, sizeof(__pyx_k_E4), 0, 0, 1, 1},
  {&__pyx_n_s_E5, __pyx_k_E5, sizeof(__pyx_k_E5), 0, 0, 1, 1},
  {&__pyx_n_s_E6, __pyx_k_E6, sizeof(__pyx_k_E6), 0, 0, 1, 1},
  {&__pyx_n_s_E7, __pyx_k_E7, sizeof(__pyx_k_E7), 0, 0, 1, 1},
  {&__pyx_n_s_E8, __pyx_k_E8, sizeof(__pyx_k_E8), 0, 0, 1, 1},
  {&__pyx_n_s_E9, __pyx_k_E9, sizeof(__pyx_k_E9), 0, 0, 1, 1},
  {&__pyx_n_s_Element, __pyx_k_Element, sizeof(__pyx_k_Element), 0, 0, 1, 1},
  {&__pyx_n_s_F1, __pyx_k_F1, sizeof(__pyx_k_F1), 0, 0, 1, 1},
  {&__pyx_n_s_F2, __pyx_k_F2, sizeof(__pyx_k_F2), 0, 0, 1, 1},
  {&__pyx_n_s_F3, __pyx_k_F3, sizeof(__pyx_k_F3), 0, 0, 1, 1},
  {&__pyx_n_s_F4, __pyx_k_F4, sizeof(__pyx_k_F4), 0, 0, 1, 1},
  {&__pyx_n_s_F5, __pyx_k_F5, sizeof(__pyx_k_F5), 0, 0, 1, 1},
  {&__pyx_n_s_F6, __pyx_k_F6, sizeof(__pyx_k_F6), 0, 0, 1, 1},
  {&__pyx_n_s_F7, __pyx_k_F7, sizeof(__pyx_k_F7), 0, 0, 1, 1},
  {&__pyx_n_s_F8, __pyx_k_F8, sizeof(__pyx_k_F8), 0, 0, 1, 1},
  {&__pyx_n_s_F9, __pyx_k_F9, sizeof(__pyx_k_F9), 0, 0, 1, 1},
  {&__pyx_n_s_G1, __pyx_k_G1, sizeof(__pyx_k_G1), 0, 0, 1, 1},
  {&__pyx_n_s_G2, __pyx_k_G2, sizeof(__pyx_k_G2), 0, 0, 1, 1},
  {&__pyx_n_s_G3, __pyx_k_G3, sizeof(__pyx_k_G3), 0, 0, 1, 1},
  {&__pyx_n_s_G4, __pyx_k_G4, sizeof(__pyx_k_G4), 0, 0, 1, 1},
  {&__pyx_n_s_G5, __pyx_k_G5, sizeof(__pyx_k_G5), 0, 0, 1, 1},
  {&__pyx_n_s_G6, __pyx_k_G6, sizeof(__pyx_k_G6), 0, 0, 1, 1},
  {&__pyx_n_s_G7, __pyx_k_G7, sizeof(__pyx_k_G7), 0, 0, 1, 1},
  {&__pyx_n_s_G8, __pyx_k_G8, sizeof(__pyx_k_G8), 0, 0, 1, 1},
  {&__pyx_n_s_G9, __pyx_k_G9, sizeof(__pyx_k_G9), 0, 0, 1, 1},
  {&__pyx_n_s_GAME_RESULTS, __pyx_k_GAME_RESULTS, sizeof(__pyx_k_GAME_RESULTS), 0, 0, 1, 1},
  {&__pyx_n_s_GOLD, __pyx_k_GOLD, sizeof(__pyx_k_GOLD), 0, 0, 1, 1},
  {&__pyx_n_s_H1, __pyx_k_H1, sizeof(__pyx_k_H1), 0, 0, 1, 1},
  {&__pyx_n_s_H2, __pyx_k_H2, sizeof(__pyx_k_H2), 0, 0, 1, 1},
  {&__pyx_n_s_H3, __pyx_k_H3, sizeof(__pyx_k_H3), 0, 0, 1, 1},
  {&__pyx_n_s_H4, __pyx_k_H4, sizeof(__pyx_k_H4), 0, 0, 1, 1},
  {&__pyx_n_s_H5, __pyx_k_H5, sizeof(__pyx_k_H5), 0, 0, 1, 1},
  {&__pyx_n_s_H6, __pyx_k_H6, sizeof(__pyx_k_H6), 0, 0, 1, 1},
  {&__pyx_n_s_H7, __pyx_k_H7, sizeof(__pyx_k_H7), 0, 0, 1, 1},
  {&__pyx_n_s_H8, __pyx_k_H8, sizeof(__pyx_k_H8), 0, 0, 1, 1},
  {&__pyx_n_s_H9, __pyx_k_H9, sizeof(__pyx_k_H9), 0, 0, 1, 1},
  {&__pyx_n_s_HAND_PIECES, __pyx_k_HAND_PIECES, sizeof(__pyx_k_HAND_PIECES), 0, 0, 1, 1},
  {&__pyx_n_s_HAND_PIECE_JAPANESE_SYMBOLS, __pyx_k_HAND_PIECE_JAPANESE_SYMBOLS, sizeof(__pyx_k_HAND_PIECE_JAPANESE_SYMBOLS), 0, 0, 1, 1},
  {&__pyx_n_s_HBISHOP, __pyx_k_HBISHOP, sizeof(__pyx_k_HBISHOP), 0, 0, 1, 1},
  {&__pyx_n_s_HGOLD, __pyx_k_HGOLD, sizeof(__pyx_k_HGOLD), 0, 0, 1, 1},
  {&__pyx_n_s_HKNIGHT, __pyx_k_HKNIGHT, sizeof(__pyx_k_HKNIGHT), 0, 0, 1, 1},
  {&__pyx_n_s_HLANCE, __pyx_k_HLANCE, sizeof(__pyx_k_HLANCE), 0, 0, 1, 1},
  {&__pyx_n_s_HPAWN, __pyx_k_HPAWN, sizeof(__pyx_k_HPAWN), 0, 0, 1, 1},
  {&__pyx_n_s_HROOK, __pyx_k_HROOK, sizeof(__pyx_k_HROOK), 0, 0, 1, 1},
  {&__pyx_n_s_HSILVER, __pyx_k_HSILVER, sizeof(__pyx_k_HSILVER), 0, 0, 1, 1},
  {&__pyx_n_s_HuffmanCodedPos, __pyx_k_HuffmanCodedPos, sizeof(__pyx_k_HuffmanCodedPos), 0, 0, 1, 1},
  {&__pyx_n_s_HuffmanCodedPosAndEval, __pyx_k_HuffmanCodedPosAndEval, sizeof(__pyx_k_HuffmanCodedPosAndEval), 0, 0, 1, 1},
  {&__pyx_n_s_I1, __pyx_k_I1, sizeof(__pyx_k_I1), 0, 0, 1, 1},
  {&__pyx_n_s_I2, __pyx_k_I2, sizeof(__pyx_k_I2), 0, 0, 1, 1},
  {&__pyx_n_s_I3, __pyx_k_I3, sizeof(__pyx_k_I3), 0, 0, 1, 1},
  {&__pyx_n_s_I4, __pyx_k_I4, sizeof(__pyx_k_I4), 0, 0, 1, 1},
  {&__pyx_n_s_I5, __pyx_k_I5, sizeof(__pyx_k_I5), 0, 0, 1, 1},
  {&__pyx_n_s_I6, __pyx_k_I6, sizeof(__pyx_k_I6), 0, 0, 1, 1},
  {&__pyx_n_s_I7, __pyx_k_I7, sizeof(__pyx_k_I7), 0, 0, 1, 1},
  {&__pyx_n_s_I8, __pyx_k_I8, sizeof(__pyx_k_I8), 0, 0, 1, 1},
  {&__pyx_n_s_I9, __pyx_k_I9, sizeof(__pyx_k_I9), 0, 0, 1, 1},
  {&__pyx_n_s_ImportError, __pyx_k_ImportError, sizeof(__pyx_k_ImportError), 0, 0, 1, 1},
  {&__pyx_n_s_KING, __pyx_k_KING, sizeof(__pyx_k_KING), 0, 0, 1, 1},
  {&__pyx_n_s_KNIGHT, __pyx_k_KNIGHT, sizeof(__pyx_k_KNIGHT), 0, 0, 1, 1},
  {&__pyx_n_s_LANCE, __pyx_k_LANCE, sizeof(__pyx_k_LANCE), 0, 0, 1, 1},
  {&__pyx_n_s_LegalMoveList, __pyx_k_LegalMoveList, sizeof(__pyx_k_LegalMoveList), 0, 0, 1, 1},
  {&__pyx_n_s_MAX_PIECES_IN_HAND, __pyx_k_MAX_PIECES_IN_HAND, sizeof(__pyx_k_MAX_PIECES_IN_HAND), 0, 0, 1, 1},
  {&__pyx_n_s_MOVE_NONE, __pyx_k_MOVE_NONE, sizeof(__pyx_k_MOVE_NONE), 0, 0, 1, 1},
  {&__pyx_n_s_NONE, __pyx_k_NONE, sizeof(__pyx_k_NONE), 0, 0, 1, 1},
  {&__pyx_n_s_NOTUSE, __pyx_k_NOTUSE, sizeof(__pyx_k_NOTUSE), 0, 0, 1, 1},
  {&__pyx_n_s_NOT_REPETITION, __pyx_k_NOT_REPETITION, sizeof(__pyx_k_NOT_REPETITION), 0, 0, 1, 1},
  {&__pyx_n_s_NUMBER_JAPANESE_KANJI_SYMBOLS, __pyx_k_NUMBER_JAPANESE_KANJI_SYMBOLS, sizeof(__pyx_k_NUMBER_JAPANESE_KANJI_SYMBOLS), 0, 0, 1, 1},
  {&__pyx_n_s_NUMBER_JAPANESE_NUMBER_SYMBOLS, __pyx_k_NUMBER_JAPANESE_NUMBER_SYMBOLS, sizeof(__pyx_k_NUMBER_JAPANESE_NUMBER_SYMBOLS), 0, 0, 1, 1},
  {&__pyx_n_s_PAWN, __pyx_k_PAWN, sizeof(__pyx_k_PAWN), 0, 0, 1, 1},
  {&__pyx_n_s_PIECES, __pyx_k_PIECES, sizeof(__pyx_k_PIECES), 0, 0, 1, 1},
  {&__pyx_n_s_PIECE_JAPANESE_SYMBOLS, __pyx_k_PIECE_JAPANESE_SYMBOLS, sizeof(__pyx_k_PIECE_JAPANESE_SYMBOLS), 0, 0, 1, 1},
  {&__pyx_n_s_PIECE_SYMBOLS, __pyx_k_PIECE_SYMBOLS, sizeof(__pyx_k_PIECE_SYMBOLS), 0, 0, 1, 1},
  {&__pyx_n_s_PIECE_TYPES, __pyx_k_PIECE_TYPES, sizeof(__pyx_k_PIECE_TYPES), 0, 0, 1, 1},
  {&__pyx_n_s_PIECE_TYPES_WITH_NONE, __pyx_k_PIECE_TYPES_WITH_NONE, sizeof(__pyx_k_PIECE_TYPES_WITH_NONE), 0, 0, 1, 1},
  {&__pyx_n_s_PROM_BISHOP, __pyx_k_PROM_BISHOP, sizeof(__pyx_k_PROM_BISHOP), 0, 0, 1, 1},
  {&__pyx_n_s_PROM_KNIGHT, __pyx_k_PROM_KNIGHT, sizeof(__pyx_k_PROM_KNIGHT), 0, 0, 1, 1},
  {&__pyx_n_s_PROM_LANCE, __pyx_k_PROM_LANCE, sizeof(__pyx_k_PROM_LANCE), 0, 0, 1, 1},
  {&__pyx_n_s_PROM_PAWN, __pyx_k_PROM_PAWN, sizeof(__pyx_k_PROM_PAWN), 0, 0, 1, 1},
  {&__pyx_n_s_PROM_ROOK, __pyx_k_PROM_ROOK, sizeof(__pyx_k_PROM_ROOK), 0, 0, 1, 1},
  {&__pyx_n_s_PROM_SILVER, __pyx_k_PROM_SILVER, sizeof(__pyx_k_PROM_SILVER), 0, 0, 1, 1},
  {&__pyx_n_s_PackedSfen, __pyx_k_PackedSfen, sizeof(__pyx_k_PackedSfen), 0, 0, 1, 1},
  {&__pyx_n_s_PackedSfenValue, __pyx_k_PackedSfenValue, sizeof(__pyx_k_PackedSfenValue), 0, 0, 1, 1},
  {&__pyx_n_s_Parser, __pyx_k_Parser, sizeof(__pyx_k_Parser), 0, 0, 1, 1},
  {&__pyx_n_s_REPETITION_DRAW, __pyx_k_REPETITION_DRAW, sizeof(__pyx_k_REPETITION_DRAW), 0, 0, 1, 1},
  {&__pyx_n_s_REPETITION_INFERIOR, __pyx_k_REPETITION_INFERIOR, sizeof(__pyx_k_REPETITION_INFERIOR), 0, 0, 1, 1},
  {&__pyx_n_s_REPETITION_LOSE, __pyx_k_REPETITION_LOSE, sizeof(__pyx_k_REPETITION_LOSE), 0, 0, 1, 1},
  {&__pyx_n_s_REPETITION_SUPERIOR, __pyx_k_REPETITION_SUPERIOR, sizeof(__pyx_k_REPETITION_SUPERIOR), 0, 0, 1, 1},
  {&__pyx_n_s_REPETITION_TYPES, __pyx_k_REPETITION_TYPES, sizeof(__pyx_k_REPETITION_TYPES), 0, 0, 1, 1},
  {&__pyx_n_s_REPETITION_WIN, __pyx_k_REPETITION_WIN, sizeof(__pyx_k_REPETITION_WIN), 0, 0, 1, 1},
  {&__pyx_n_s_ROOK, __pyx_k_ROOK, sizeof(__pyx_k_ROOK), 0, 0, 1, 1},
  {&__pyx_n_s_SILVER, __pyx_k_SILVER, sizeof(__pyx_k_SILVER), 0, 0, 1, 1},
  {&__pyx_n_s_SQUARES, __pyx_k_SQUARES, sizeof(__pyx_k_SQUARES), 0, 0, 1, 1},
  {&__pyx_n_s_SQUARE_NAMES, __pyx_k_SQUARE_NAMES, sizeof(__pyx_k_SQUARE_NAMES), 0, 0, 1, 1},
  {&__pyx_n_s_STARTING_SFEN, __pyx_k_STARTING_SFEN, sizeof(__pyx_k_STARTING_SFEN), 0, 0, 1, 1},
  {&__pyx_n_s_SVG_COORDINATES, __pyx_k_SVG_COORDINATES, sizeof(__pyx_k_SVG_COORDINATES), 0, 0, 1, 1},
  {&__pyx_n_s_SVG_PIECE_DEFS, __pyx_k_SVG_PIECE_DEFS, sizeof(__pyx_k_SVG_PIECE_DEFS), 0, 0, 1, 1},
  {&__pyx_n_s_SVG_PIECE_DEF_IDS, __pyx_k_SVG_PIECE_DEF_IDS, sizeof(__pyx_k_SVG_PIECE_DEF_IDS), 0, 0, 1, 1},
  {&__pyx_n_s_SVG_SQUARES, __pyx_k_SVG_SQUARES, sizeof(__pyx_k_SVG_SQUARES), 0, 0, 1, 1},
  {&__pyx_n_s_StopIteration, __pyx_k_StopIteration, sizeof(__pyx_k_StopIteration), 0, 0, 1, 1},
  {&__pyx_n_s_SubElement, __pyx_k_SubElement, sizeof(__pyx_k_SubElement), 0, 0, 1, 1},
  {&__pyx_n_s_SvgWrapper, __pyx_k_SvgWrapper, sizeof(__pyx_k_SvgWrapper), 0, 0, 1, 1},
  {&__pyx_n_s_SvgWrapper__repr_svg, __pyx_k_SvgWrapper__repr_svg, sizeof(__pyx_k_SvgWrapper__repr_svg), 0, 0, 1, 1},
  {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
  {&__pyx_n_s_WBISHOP, __pyx_k_WBISHOP, sizeof(__pyx_k_WBISHOP), 0, 0, 1, 1},
  {&__pyx_n_s_WGOLD, __pyx_k_WGOLD, sizeof(__pyx_k_WGOLD), 0, 0, 1, 1},
  {&__pyx_n_s_WHITE, __pyx_k_WHITE, sizeof(__pyx_k_WHITE), 0, 0, 1, 1},
  {&__pyx_n_s_WHITE_WIN, __pyx_k_WHITE_WIN, sizeof(__pyx_k_WHITE_WIN), 0, 0, 1, 1},
  {&__pyx_n_s_WKING, __pyx_k_WKING, sizeof(__pyx_k_WKING), 0, 0, 1, 1},
  {&__pyx_n_s_WKNIGHT, __pyx_k_WKNIGHT, sizeof(__pyx_k_WKNIGHT), 0, 0, 1, 1},
  {&__pyx_n_s_WLANCE, __pyx_k_WLANCE, sizeof(__pyx_k_WLANCE), 0, 0, 1, 1},
  {&__pyx_n_s_WPAWN, __pyx_k_WPAWN, sizeof(__pyx_k_WPAWN), 0, 0, 1, 1},
  {&__pyx_n_s_WPROM_BISHOP, __pyx_k_WPROM_BISHOP, sizeof(__pyx_k_WPROM_BISHOP), 0, 0, 1, 1},
  {&__pyx_n_s_WPROM_KNIGHT, __pyx_k_WPROM_KNIGHT, sizeof(__pyx_k_WPROM_KNIGHT), 0, 0, 1, 1},
  {&__pyx_n_s_WPROM_LANCE, __pyx_k_WPROM_LANCE, sizeof(__pyx_k_WPROM_LANCE), 0, 0, 1, 1},
  {&__pyx_n_s_WPROM_PAWN, __pyx_k_WPROM_PAWN, sizeof(__pyx_k_WPROM_PAWN), 0, 0, 1, 1},
  {&__pyx_n_s_WPROM_ROOK, __pyx_k_WPROM_ROOK, sizeof(__pyx_k_WPROM_ROOK), 0, 0, 1, 1},
  {&__pyx_n_s_WPROM_SILVER, __pyx_k_WPROM_SILVER, sizeof(__pyx_k_WPROM_SILVER), 0, 0, 1, 1},
  {&__pyx_n_s_WROOK, __pyx_k_WROOK, sizeof(__pyx_k_WROOK), 0, 0, 1, 1},
  {&__pyx_n_s_WSILVER, __pyx_k_WSILVER, sizeof(__pyx_k_WSILVER), 0, 0, 1, 1},
  {&__pyx_kp_s__15, __pyx_k__15, sizeof(__pyx_k__15), 0, 0, 1, 0},
  {&__pyx_kp_s__16, __pyx_k__16, sizeof(__pyx_k__16), 0, 0, 1, 0},
  {&__pyx_kp_s__3, __pyx_k__3, sizeof(__pyx_k__3), 0, 0, 1, 0},
  {&__pyx_kp_s__31, __pyx_k__31, sizeof(__pyx_k__31), 0, 0, 1, 0},
  {&__pyx_kp_s__32, __pyx_k__32, sizeof(__pyx_k__32), 0, 0, 1, 0},
  {&__pyx_kp_s__33, __pyx_k__33, sizeof(__pyx_k__33), 0, 0, 1, 0},
  {&__pyx_kp_s__34, __pyx_k__34, sizeof(__pyx_k__34), 0, 0, 1, 0},
  {&__pyx_kp_s__35, __pyx_k__35, sizeof(__pyx_k__35), 0, 0, 1, 0},
  {&__pyx_kp_s__36, __pyx_k__36, sizeof(__pyx_k__36), 0, 0, 1, 0},
  {&__pyx_kp_s__37, __pyx_k__37, sizeof(__pyx_k__37), 0, 0, 1, 0},
  {&__pyx_kp_s__38, __pyx_k__38, sizeof(__pyx_k__38), 0, 0, 1, 0},
  {&__pyx_kp_s__39, __pyx_k__39, sizeof(__pyx_k__39), 0, 0, 1, 0},
  {&__pyx_kp_s__4, __pyx_k__4, sizeof(__pyx_k__4), 0, 0, 1, 0},
  {&__pyx_kp_s__40, __pyx_k__40, sizeof(__pyx_k__40), 0, 0, 1, 0},
  {&__pyx_kp_s__41, __pyx_k__41, sizeof(__pyx_k__41), 0, 0, 1, 0},
  {&__pyx_kp_s__42, __pyx_k__42, sizeof(__pyx_k__42), 0, 0, 1, 0},
  {&__pyx_kp_s__43, __pyx_k__43, sizeof(__pyx_k__43), 0, 0, 1, 0},
  {&__pyx_kp_s__44, __pyx_k__44, sizeof(__pyx_k__44), 0, 0, 1, 0},
  {&__pyx_kp_s__45, __pyx_k__45, sizeof(__pyx_k__45), 0, 0, 1, 0},
  {&__pyx_kp_s__46, __pyx_k__46, sizeof(__pyx_k__46), 0, 0, 1, 0},
  {&__pyx_kp_s__47, __pyx_k__47, sizeof(__pyx_k__47), 0, 0, 1, 0},
  {&__pyx_kp_s__48, __pyx_k__48, sizeof(__pyx_k__48), 0, 0, 1, 0},
  {&__pyx_kp_s__49, __pyx_k__49, sizeof(__pyx_k__49), 0, 0, 1, 0},
  {&__pyx_kp_s__5, __pyx_k__5, sizeof(__pyx_k__5), 0, 0, 1, 0},
  {&__pyx_kp_s__50, __pyx_k__50, sizeof(__pyx_k__50), 0, 0, 1, 0},
  {&__pyx_kp_s__51, __pyx_k__51, sizeof(__pyx_k__51), 0, 0, 1, 0},
  {&__pyx_kp_s__52, __pyx_k__52, sizeof(__pyx_k__52), 0, 0, 1, 0},
  {&__pyx_kp_s__53, __pyx_k__53, sizeof(__pyx_k__53), 0, 0, 1, 0},
  {&__pyx_kp_s__54, __pyx_k__54, sizeof(__pyx_k__54), 0, 0, 1, 0},
  {&__pyx_kp_s__55, __pyx_k__55, sizeof(__pyx_k__55), 0, 0, 1, 0},
  {&__pyx_kp_s__56, __pyx_k__56, sizeof(__pyx_k__56), 0, 0, 1, 0},
  {&__pyx_kp_s__57, __pyx_k__57, sizeof(__pyx_k__57), 0, 0, 1, 0},
  {&__pyx_kp_s__58, __pyx_k__58, sizeof(__pyx_k__58), 0, 0, 1, 0},
  {&__pyx_kp_s__59, __pyx_k__59, sizeof(__pyx_k__59), 0, 0, 1, 0},
  {&__pyx_kp_s__6, __pyx_k__6, sizeof(__pyx_k__6), 0, 0, 1, 0},
  {&__pyx_kp_s__60, __pyx_k__60, sizeof(__pyx_k__60), 0, 0, 1, 0},
  {&__pyx_kp_s__61, __pyx_k__61, sizeof(__pyx_k__61), 0, 0, 1, 0},
  {&__pyx_kp_s__62, __pyx_k__62, sizeof(__pyx_k__62), 0, 0, 1, 0},
  {&__pyx_kp_s__63, __pyx_k__63, sizeof(__pyx_k__63), 0, 0, 1, 0},
  {&__pyx_kp_s__64, __pyx_k__64, sizeof(__pyx_k__64), 0, 0, 1, 0},
  {&__pyx_kp_s__7, __pyx_k__7, sizeof(__pyx_k__7), 0, 0, 1, 0},
  {&__pyx_kp_s__8, __pyx_k__8, sizeof(__pyx_k__8), 0, 0, 1, 0},
  {&__pyx_n_s_append, __pyx_k_append, sizeof(__pyx_k_append), 0, 0, 1, 1},
  {&__pyx_n_s_ascii, __pyx_k_ascii, sizeof(__pyx_k_ascii), 0, 0, 1, 1},
  {&__pyx_n_s_b, __pyx_k_b, sizeof(__pyx_k_b), 0, 0, 1, 1},
  {&__pyx_kp_s_b_2, __pyx_k_b_2, sizeof(__pyx_k_b_2), 0, 0, 1, 0},
  {&__pyx_n_s_bestMove16, __pyx_k_bestMove16, sizeof(__pyx_k_bestMove16), 0, 0, 1, 1},
  {&__pyx_kp_s_black_bishop, __pyx_k_black_bishop, sizeof(__pyx_k_black_bishop), 0, 0, 1, 0},
  {&__pyx_kp_s_black_dragon, __pyx_k_black_dragon, sizeof(__pyx_k_black_dragon), 0, 0, 1, 0},
  {&__pyx_kp_s_black_gold, __pyx_k_black_gold, sizeof(__pyx_k_black_gold), 0, 0, 1, 0},
  {&__pyx_kp_s_black_horse, __pyx_k_black_horse, sizeof(__pyx_k_black_horse), 0, 0, 1, 0},
  {&__pyx_kp_s_black_king, __pyx_k_black_king, sizeof(__pyx_k_black_king), 0, 0, 1, 0},
  {&__pyx_kp_s_black_knight, __pyx_k_black_knight, sizeof(__pyx_k_black_knight), 0, 0, 1, 0},
  {&__pyx_kp_s_black_lance, __pyx_k_black_lance, sizeof(__pyx_k_black_lance), 0, 0, 1, 0},
  {&__pyx_kp_s_black_pawn, __pyx_k_black_pawn, sizeof(__pyx_k_black_pawn), 0, 0, 1, 0},
  {&__pyx_kp_s_black_pro_knight, __pyx_k_black_pro_knight, sizeof(__pyx_k_black_pro_knight), 0, 0, 1, 0},
  {&__pyx_kp_s_black_pro_lance, __pyx_k_black_pro_lance, sizeof(__pyx_k_black_pro_lance), 0, 0, 1, 0},
  {&__pyx_kp_s_black_pro_pawn, __pyx_k_black_pro_pawn, sizeof(__pyx_k_black_pro_pawn), 0, 0, 1, 0},
  {&__pyx_kp_s_black_pro_silver, __pyx_k_black_pro_silver, sizeof(__pyx_k_black_pro_silver), 0, 0, 1, 0},
  {&__pyx_kp_s_black_rook, __pyx_k_black_rook, sizeof(__pyx_k_black_rook), 0, 0, 1, 0},
  {&__pyx_kp_s_black_silver, __pyx_k_black_silver, sizeof(__pyx_k_black_silver), 0, 0, 1, 0},
  {&__pyx_n_s_board, __pyx_k_board, sizeof(__pyx_k_board), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_color, __pyx_k_color, sizeof(__pyx_k_color), 0, 0, 1, 1},
  {&__pyx_n_s_count, __pyx_k_count, sizeof(__pyx_k_count), 0, 0, 1, 1},
  {&__pyx_n_s_csa, __pyx_k_csa, sizeof(__pyx_k_csa), 0, 0, 1, 1},
  {&__pyx_n_s_csa_b, __pyx_k_csa_b, sizeof(__pyx_k_csa_b), 0, 0, 1, 1},
  {&__pyx_n_s_csa_str, __pyx_k_csa_str, sizeof(__pyx_k_csa_str), 0, 0, 1, 1},
  {&__pyx_n_s_cshogi__cshogi, __pyx_k_cshogi__cshogi, sizeof(__pyx_k_cshogi__cshogi), 0, 0, 1, 1},
  {&__pyx_kp_s_cshogi__cshogi_pyx, __pyx_k_cshogi__cshogi_pyx, sizeof(__pyx_k_cshogi__cshogi_pyx), 0, 0, 1, 0},
  {&__pyx_n_s_decode, __pyx_k_decode, sizeof(__pyx_k_decode), 0, 0, 1, 1},
  {&__pyx_n_s_defs, __pyx_k_defs, sizeof(__pyx_k_defs), 0, 0, 1, 1},
  {&__pyx_n_s_depth, __pyx_k_depth, sizeof(__pyx_k_depth), 0, 0, 1, 1},
  {&__pyx_n_s_dlshogi_FEATURES1_NUM, __pyx_k_dlshogi_FEATURES1_NUM, sizeof(__pyx_k_dlshogi_FEATURES1_NUM), 0, 0, 1, 1},
  {&__pyx_n_s_dlshogi_FEATURES2_NUM, __pyx_k_dlshogi_FEATURES2_NUM, sizeof(__pyx_k_dlshogi_FEATURES2_NUM), 0, 0, 1, 1},
  {&__pyx_n_s_dlshogi_make_move_label, __pyx_k_dlshogi_make_move_label, sizeof(__pyx_k_dlshogi_make_move_label), 0, 0, 1, 1},
  {&__pyx_n_s_doc, __pyx_k_doc, sizeof(__pyx_k_doc), 0, 0, 1, 1},
  {&__pyx_n_s_draw_ply, __pyx_k_draw_ply, sizeof(__pyx_k_draw_ply), 0, 0, 1, 1},
  {&__pyx_n_s_drop_piece_type, __pyx_k_drop_piece_type, sizeof(__pyx_k_drop_piece_type), 0, 0, 1, 1},
  {&__pyx_n_s_dtypeEval, __pyx_k_dtypeEval, sizeof(__pyx_k_dtypeEval), 0, 0, 1, 1},
  {&__pyx_n_s_dtypeGameResult, __pyx_k_dtypeGameResult, sizeof(__pyx_k_dtypeGameResult), 0, 0, 1, 1},
  {&__pyx_n_s_dtypeHcp, __pyx_k_dtypeHcp, sizeof(__pyx_k_dtypeHcp), 0, 0, 1, 1},
  {&__pyx_n_s_dtypeKey, __pyx_k_dtypeKey, sizeof(__pyx_k_dtypeKey), 0, 0, 1, 1},
  {&__pyx_n_s_dtypeMove16, __pyx_k_dtypeMove16, sizeof(__pyx_k_dtypeMove16), 0, 0, 1, 1},
  {&__pyx_n_s_dummy, __pyx_k_dummy, sizeof(__pyx_k_dummy), 0, 0, 1, 1},
  {&__pyx_n_s_encode, __pyx_k_encode, sizeof(__pyx_k_encode), 0, 0, 1, 1},
  {&__pyx_n_s_encoding, __pyx_k_encoding, sizeof(__pyx_k_encoding), 0, 0, 1, 1},
  {&__pyx_n_s_enter, __pyx_k_enter, sizeof(__pyx_k_enter), 0, 0, 1, 1},
  {&__pyx_n_s_eval, __pyx_k_eval, sizeof(__pyx_k_eval), 0, 0, 1, 1},
  {&__pyx_n_s_exit, __pyx_k_exit, sizeof(__pyx_k_exit), 0, 0, 1, 1},
  {&__pyx_n_s_f, __pyx_k_f, sizeof(__pyx_k_f), 0, 0, 1, 1},
  {&__pyx_kp_s_f6b94d, __pyx_k_f6b94d, sizeof(__pyx_k_f6b94d), 0, 0, 1, 0},
  {&__pyx_kp_s_fdf0e3, __pyx_k_fdf0e3, sizeof(__pyx_k_fdf0e3), 0, 0, 1, 0},
  {&__pyx_n_s_features1, __pyx_k_features1, sizeof(__pyx_k_features1), 0, 0, 1, 1},
  {&__pyx_n_s_features2, __pyx_k_features2, sizeof(__pyx_k_features2), 0, 0, 1, 1},
  {&__pyx_n_s_file, __pyx_k_file, sizeof(__pyx_k_file), 0, 0, 1, 1},
  {&__pyx_n_s_fill, __pyx_k_fill, sizeof(__pyx_k_fill), 0, 0, 1, 1},
  {&__pyx_kp_s_font_family, __pyx_k_font_family, sizeof(__pyx_k_font_family), 0, 0, 1, 0},
  {&__pyx_kp_s_font_size, __pyx_k_font_size, sizeof(__pyx_k_font_size), 0, 0, 1, 0},
  {&__pyx_n_s_format, __pyx_k_format, sizeof(__pyx_k_format), 0, 0, 1, 1},
  {&__pyx_n_s_fromToPro, __pyx_k_fromToPro, sizeof(__pyx_k_fromToPro), 0, 0, 1, 1},
  {&__pyx_n_s_from_square, __pyx_k_from_square, sizeof(__pyx_k_from_square), 0, 0, 1, 1},
  {&__pyx_n_s_fromstring, __pyx_k_fromstring, sizeof(__pyx_k_fromstring), 0, 0, 1, 1},
  {&__pyx_n_s_g, __pyx_k_g, sizeof(__pyx_k_g), 0, 0, 1, 1},
  {&__pyx_kp_s_g_id_black_bishop_text_font_fam, __pyx_k_g_id_black_bishop_text_font_fam, sizeof(__pyx_k_g_id_black_bishop_text_font_fam), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_black_dragon_text_font_fam, __pyx_k_g_id_black_dragon_text_font_fam, sizeof(__pyx_k_g_id_black_dragon_text_font_fam), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_black_gold_text_font_famil, __pyx_k_g_id_black_gold_text_font_famil, sizeof(__pyx_k_g_id_black_gold_text_font_famil), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_black_horse_text_font_fami, __pyx_k_g_id_black_horse_text_font_fami, sizeof(__pyx_k_g_id_black_horse_text_font_fami), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_black_king_text_font_famil, __pyx_k_g_id_black_king_text_font_famil, sizeof(__pyx_k_g_id_black_king_text_font_famil), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_black_knight_text_font_fam, __pyx_k_g_id_black_knight_text_font_fam, sizeof(__pyx_k_g_id_black_knight_text_font_fam), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_black_lance_text_font_fami, __pyx_k_g_id_black_lance_text_font_fami, sizeof(__pyx_k_g_id_black_lance_text_font_fami), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_black_pawn_text_font_famil, __pyx_k_g_id_black_pawn_text_font_famil, sizeof(__pyx_k_g_id_black_pawn_text_font_famil), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_black_pro_knight_transform, __pyx_k_g_id_black_pro_knight_transform, sizeof(__pyx_k_g_id_black_pro_knight_transform), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_black_pro_lance_transform, __pyx_k_g_id_black_pro_lance_transform, sizeof(__pyx_k_g_id_black_pro_lance_transform), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_black_pro_pawn_text_font_f, __pyx_k_g_id_black_pro_pawn_text_font_f, sizeof(__pyx_k_g_id_black_pro_pawn_text_font_f), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_black_pro_silver_transform, __pyx_k_g_id_black_pro_silver_transform, sizeof(__pyx_k_g_id_black_pro_silver_transform), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_black_rook_text_font_famil, __pyx_k_g_id_black_rook_text_font_famil, sizeof(__pyx_k_g_id_black_rook_text_font_famil), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_black_silver_text_font_fam, __pyx_k_g_id_black_silver_text_font_fam, sizeof(__pyx_k_g_id_black_silver_text_font_fam), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_white_bishop_transform_rot, __pyx_k_g_id_white_bishop_transform_rot, sizeof(__pyx_k_g_id_white_bishop_transform_rot), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_white_dragon_transform_rot, __pyx_k_g_id_white_dragon_transform_rot, sizeof(__pyx_k_g_id_white_dragon_transform_rot), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_white_gold_transform_rotat, __pyx_k_g_id_white_gold_transform_rotat, sizeof(__pyx_k_g_id_white_gold_transform_rotat), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_white_horse_transform_rota, __pyx_k_g_id_white_horse_transform_rota, sizeof(__pyx_k_g_id_white_horse_transform_rota), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_white_king_transform_rotat, __pyx_k_g_id_white_king_transform_rotat, sizeof(__pyx_k_g_id_white_king_transform_rotat), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_white_knight_transform_rot, __pyx_k_g_id_white_knight_transform_rot, sizeof(__pyx_k_g_id_white_knight_transform_rot), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_white_lance_transform_rota, __pyx_k_g_id_white_lance_transform_rota, sizeof(__pyx_k_g_id_white_lance_transform_rota), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_white_pawn_transform_rotat, __pyx_k_g_id_white_pawn_transform_rotat, sizeof(__pyx_k_g_id_white_pawn_transform_rotat), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_white_pro_knight_transform, __pyx_k_g_id_white_pro_knight_transform, sizeof(__pyx_k_g_id_white_pro_knight_transform), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_white_pro_lance_transform, __pyx_k_g_id_white_pro_lance_transform, sizeof(__pyx_k_g_id_white_pro_lance_transform), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_white_pro_pawn_transform_r, __pyx_k_g_id_white_pro_pawn_transform_r, sizeof(__pyx_k_g_id_white_pro_pawn_transform_r), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_white_pro_silver_transform, __pyx_k_g_id_white_pro_silver_transform, sizeof(__pyx_k_g_id_white_pro_silver_transform), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_white_rook_transform_rotat, __pyx_k_g_id_white_rook_transform_rotat, sizeof(__pyx_k_g_id_white_rook_transform_rotat), 0, 0, 1, 0},
  {&__pyx_kp_s_g_id_white_silver_transform_rot, __pyx_k_g_id_white_silver_transform_rot, sizeof(__pyx_k_g_id_white_silver_transform_rot), 0, 0, 1, 0},
  {&__pyx_kp_s_g_stroke_black_rect_x_20_y_10_w, __pyx_k_g_stroke_black_rect_x_20_y_10_w, sizeof(__pyx_k_g_stroke_black_rect_x_20_y_10_w), 0, 0, 1, 0},
  {&__pyx_kp_s_g_text_font_family_serif_text_a, __pyx_k_g_text_font_family_serif_text_a, sizeof(__pyx_k_g_text_font_family_serif_text_a), 0, 0, 1, 0},
  {&__pyx_n_s_gamePly, __pyx_k_gamePly, sizeof(__pyx_k_gamePly), 0, 0, 1, 1},
  {&__pyx_n_s_gameResult, __pyx_k_gameResult, sizeof(__pyx_k_gameResult), 0, 0, 1, 1},
  {&__pyx_n_s_game_result, __pyx_k_game_result, sizeof(__pyx_k_game_result), 0, 0, 1, 1},
  {&__pyx_n_s_getpreferredencoding, __pyx_k_getpreferredencoding, sizeof(__pyx_k_getpreferredencoding), 0, 0, 1, 1},
  {&__pyx_n_s_getstate, __pyx_k_getstate, sizeof(__pyx_k_getstate), 0, 0, 1, 1},
  {&__pyx_n_s_hcp, __pyx_k_hcp, sizeof(__pyx_k_hcp), 0, 0, 1, 1},
  {&__pyx_n_s_height, __pyx_k_height, sizeof(__pyx_k_height), 0, 0, 1, 1},
  {&__pyx_kp_s_http_www_w3_org_1999_xlink, __pyx_k_http_www_w3_org_1999_xlink, sizeof(__pyx_k_http_www_w3_org_1999_xlink), 0, 0, 1, 0},
  {&__pyx_kp_s_http_www_w3_org_2000_svg, __pyx_k_http_www_w3_org_2000_svg, sizeof(__pyx_k_http_www_w3_org_2000_svg), 0, 0, 1, 0},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_int16, __pyx_k_int16, sizeof(__pyx_k_int16), 0, 0, 1, 1},
  {&__pyx_n_s_int32, __pyx_k_int32, sizeof(__pyx_k_int32), 0, 0, 1, 1},
  {&__pyx_n_s_int8, __pyx_k_int8, sizeof(__pyx_k_int8), 0, 0, 1, 1},
  {&__pyx_n_s_is_check, __pyx_k_is_check, sizeof(__pyx_k_is_check), 0, 0, 1, 1},
  {&__pyx_n_s_k, __pyx_k_k, sizeof(__pyx_k_k), 0, 0, 1, 1},
  {&__pyx_n_s_key, __pyx_k_key, sizeof(__pyx_k_key), 0, 0, 1, 1},
  {&__pyx_n_s_l, __pyx_k_l, sizeof(__pyx_k_l), 0, 0, 1, 1},
  {&__pyx_kp_s_l_2, __pyx_k_l_2, sizeof(__pyx_k_l_2), 0, 0, 1, 0},
  {&__pyx_n_s_lastmove, __pyx_k_lastmove, sizeof(__pyx_k_lastmove), 0, 0, 1, 1},
  {&__pyx_kp_s_lnsgkgsnl_1r5b1_ppppppppp_9_9_9, __pyx_k_lnsgkgsnl_1r5b1_ppppppppp_9_9_9, sizeof(__pyx_k_lnsgkgsnl_1r5b1_ppppppppp_9_9_9), 0, 0, 1, 0},
  {&__pyx_n_s_locale, __pyx_k_locale, sizeof(__pyx_k_locale), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_matches, __pyx_k_matches, sizeof(__pyx_k_matches), 0, 0, 1, 1},
  {&__pyx_n_s_metaclass, __pyx_k_metaclass, sizeof(__pyx_k_metaclass), 0, 0, 1, 1},
  {&__pyx_n_s_module, __pyx_k_module, sizeof(__pyx_k_module), 0, 0, 1, 1},
  {&__pyx_n_s_move, __pyx_k_move, sizeof(__pyx_k_move), 0, 0, 1, 1},
  {&__pyx_n_s_move16, __pyx_k_move16, sizeof(__pyx_k_move16), 0, 0, 1, 1},
  {&__pyx_n_s_move16_from_psv, __pyx_k_move16_from_psv, sizeof(__pyx_k_move16_from_psv), 0, 0, 1, 1},
  {&__pyx_n_s_move16_to_psv, __pyx_k_move16_to_psv, sizeof(__pyx_k_move16_to_psv), 0, 0, 1, 1},
  {&__pyx_n_s_move_cap, __pyx_k_move_cap, sizeof(__pyx_k_move_cap), 0, 0, 1, 1},
  {&__pyx_n_s_move_drop_hand_piece, __pyx_k_move_drop_hand_piece, sizeof(__pyx_k_move_drop_hand_piece), 0, 0, 1, 1},
  {&__pyx_n_s_move_from, __pyx_k_move_from, sizeof(__pyx_k_move_from), 0, 0, 1, 1},
  {&__pyx_n_s_move_from_csa, __pyx_k_move_from_csa, sizeof(__pyx_k_move_from_csa), 0, 0, 1, 1},
  {&__pyx_n_s_move_from_piece_type, __pyx_k_move_from_piece_type, sizeof(__pyx_k_move_from_piece_type), 0, 0, 1, 1},
  {&__pyx_n_s_move_is_drop, __pyx_k_move_is_drop, sizeof(__pyx_k_move_is_drop), 0, 0, 1, 1},
  {&__pyx_n_s_move_is_promotion, __pyx_k_move_is_promotion, sizeof(__pyx_k_move_is_promotion), 0, 0, 1, 1},
  {&__pyx_n_s_move_rotate, __pyx_k_move_rotate, sizeof(__pyx_k_move_rotate), 0, 0, 1, 1},
  {&__pyx_n_s_move_to, __pyx_k_move_to, sizeof(__pyx_k_move_to), 0, 0, 1, 1},
  {&__pyx_n_s_move_to_csa, __pyx_k_move_to_csa, sizeof(__pyx_k_move_to_csa), 0, 0, 1, 1},
  {&__pyx_n_s_move_to_usi, __pyx_k_move_to_usi, sizeof(__pyx_k_move_to_usi), 0, 0, 1, 1},
  {&__pyx_n_s_n, __pyx_k_n, sizeof(__pyx_k_n), 0, 0, 1, 1},
  {&__pyx_kp_s_n_2, __pyx_k_n_2, sizeof(__pyx_k_n_2), 0, 0, 1, 0},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_kp_s_no_default___reduce___due_to_non, __pyx_k_no_default___reduce___due_to_non, sizeof(__pyx_k_no_default___reduce___due_to_non), 0, 0, 1, 0},
  {&__pyx_n_s_nodes, __pyx_k_nodes, sizeof(__pyx_k_nodes), 0, 0, 1, 1},
  {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
  {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
  {&__pyx_kp_s_numpy_core_multiarray_failed_to, __pyx_k_numpy_core_multiarray_failed_to, sizeof(__pyx_k_numpy_core_multiarray_failed_to), 0, 0, 1, 0},
  {&__pyx_kp_s_numpy_core_umath_failed_to_impor, __pyx_k_numpy_core_umath_failed_to_impor, sizeof(__pyx_k_numpy_core_umath_failed_to_impor), 0, 0, 1, 0},
  {&__pyx_n_s_one_csa_str, __pyx_k_one_csa_str, sizeof(__pyx_k_one_csa_str), 0, 0, 1, 1},
  {&__pyx_n_s_open, __pyx_k_open, sizeof(__pyx_k_open), 0, 0, 1, 1},
  {&__pyx_n_s_opponent, __pyx_k_opponent, sizeof(__pyx_k_opponent), 0, 0, 1, 1},
  {&__pyx_n_s_p, __pyx_k_p, sizeof(__pyx_k_p), 0, 0, 1, 1},
  {&__pyx_kp_s_p_2, __pyx_k_p_2, sizeof(__pyx_k_p_2), 0, 0, 1, 0},
  {&__pyx_n_s_padding, __pyx_k_padding, sizeof(__pyx_k_padding), 0, 0, 1, 1},
  {&__pyx_n_s_parse_csa_str, __pyx_k_parse_csa_str, sizeof(__pyx_k_parse_csa_str), 0, 0, 1, 1},
  {&__pyx_n_s_parse_file, __pyx_k_parse_file, sizeof(__pyx_k_parse_file), 0, 0, 1, 1},
  {&__pyx_n_s_parse_str, __pyx_k_parse_str, sizeof(__pyx_k_parse_str), 0, 0, 1, 1},
  {&__pyx_n_s_parser, __pyx_k_parser, sizeof(__pyx_k_parser), 0, 0, 1, 1},
  {&__pyx_n_s_parsers, __pyx_k_parsers, sizeof(__pyx_k_parsers), 0, 0, 1, 1},
  {&__pyx_n_s_piece_to_piece_type, __pyx_k_piece_to_piece_type, sizeof(__pyx_k_piece_to_piece_type), 0, 0, 1, 1},
  {&__pyx_n_s_ply, __pyx_k_ply, sizeof(__pyx_k_ply), 0, 0, 1, 1},
  {&__pyx_n_s_prepare, __pyx_k_prepare, sizeof(__pyx_k_prepare), 0, 0, 1, 1},
  {&__pyx_n_s_promotion, __pyx_k_promotion, sizeof(__pyx_k_promotion), 0, 0, 1, 1},
  {&__pyx_n_s_qualname, __pyx_k_qualname, sizeof(__pyx_k_qualname), 0, 0, 1, 1},
  {&__pyx_n_s_r, __pyx_k_r, sizeof(__pyx_k_r), 0, 0, 1, 1},
  {&__pyx_kp_s_r_2, __pyx_k_r_2, sizeof(__pyx_k_r_2), 0, 0, 1, 0},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_read, __pyx_k_read, sizeof(__pyx_k_read), 0, 0, 1, 1},
  {&__pyx_n_s_rect, __pyx_k_rect, sizeof(__pyx_k_rect), 0, 0, 1, 1},
  {&__pyx_n_s_reduce, __pyx_k_reduce, sizeof(__pyx_k_reduce), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_cython, __pyx_k_reduce_cython, sizeof(__pyx_k_reduce_cython), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_ex, __pyx_k_reduce_ex, sizeof(__pyx_k_reduce_ex), 0, 0, 1, 1},
  {&__pyx_n_s_repr_svg, __pyx_k_repr_svg, sizeof(__pyx_k_repr_svg), 0, 0, 1, 1},
  {&__pyx_kp_s_rotate_180, __pyx_k_rotate_180, sizeof(__pyx_k_rotate_180), 0, 0, 1, 0},
  {&__pyx_n_s_s, __pyx_k_s, sizeof(__pyx_k_s), 0, 0, 1, 1},
  {&__pyx_kp_s_s_2, __pyx_k_s_2, sizeof(__pyx_k_s_2), 0, 0, 1, 0},
  {&__pyx_n_s_scale, __pyx_k_scale, sizeof(__pyx_k_scale), 0, 0, 1, 1},
  {&__pyx_n_s_score, __pyx_k_score, sizeof(__pyx_k_score), 0, 0, 1, 1},
  {&__pyx_n_s_self, __pyx_k_self, sizeof(__pyx_k_self), 0, 0, 1, 1},
  {&__pyx_n_s_serif, __pyx_k_serif, sizeof(__pyx_k_serif), 0, 0, 1, 1},
  {&__pyx_n_s_set, __pyx_k_set, sizeof(__pyx_k_set), 0, 0, 1, 1},
  {&__pyx_n_s_setstate, __pyx_k_setstate, sizeof(__pyx_k_setstate), 0, 0, 1, 1},
  {&__pyx_n_s_setstate_cython, __pyx_k_setstate_cython, sizeof(__pyx_k_setstate_cython), 0, 0, 1, 1},
  {&__pyx_n_s_sfen, __pyx_k_sfen, sizeof(__pyx_k_sfen), 0, 0, 1, 1},
  {&__pyx_n_s_split, __pyx_k_split, sizeof(__pyx_k_split), 0, 0, 1, 1},
  {&__pyx_n_s_staticmethod, __pyx_k_staticmethod, sizeof(__pyx_k_staticmethod), 0, 0, 1, 1},
  {&__pyx_n_s_svg, __pyx_k_svg, sizeof(__pyx_k_svg), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_text, __pyx_k_text, sizeof(__pyx_k_text), 0, 0, 1, 1},
  {&__pyx_n_s_to_csa, __pyx_k_to_csa, sizeof(__pyx_k_to_csa), 0, 0, 1, 1},
  {&__pyx_n_s_to_square, __pyx_k_to_square, sizeof(__pyx_k_to_square), 0, 0, 1, 1},
  {&__pyx_n_s_to_svg, __pyx_k_to_svg, sizeof(__pyx_k_to_svg), 0, 0, 1, 1},
  {&__pyx_n_s_to_usi, __pyx_k_to_usi, sizeof(__pyx_k_to_usi), 0, 0, 1, 1},
  {&__pyx_n_s_tostring, __pyx_k_tostring, sizeof(__pyx_k_tostring), 0, 0, 1, 1},
  {&__pyx_n_s_transform, __pyx_k_transform, sizeof(__pyx_k_transform), 0, 0, 1, 1},
  {&__pyx_n_s_uint16, __pyx_k_uint16, sizeof(__pyx_k_uint16), 0, 0, 1, 1},
  {&__pyx_n_s_uint64, __pyx_k_uint64, sizeof(__pyx_k_uint64), 0, 0, 1, 1},
  {&__pyx_n_s_uint8, __pyx_k_uint8, sizeof(__pyx_k_uint8), 0, 0, 1, 1},
  {&__pyx_n_s_use, __pyx_k_use, sizeof(__pyx_k_use), 0, 0, 1, 1},
  {&__pyx_kp_s_utf_8, __pyx_k_utf_8, sizeof(__pyx_k_utf_8), 0, 0, 1, 0},
  {&__pyx_n_s_version, __pyx_k_version, sizeof(__pyx_k_version), 0, 0, 1, 1},
  {&__pyx_n_s_viewBox, __pyx_k_viewBox, sizeof(__pyx_k_viewBox), 0, 0, 1, 1},
  {&__pyx_kp_s_white_bishop, __pyx_k_white_bishop, sizeof(__pyx_k_white_bishop), 0, 0, 1, 0},
  {&__pyx_kp_s_white_dragon, __pyx_k_white_dragon, sizeof(__pyx_k_white_dragon), 0, 0, 1, 0},
  {&__pyx_kp_s_white_gold, __pyx_k_white_gold, sizeof(__pyx_k_white_gold), 0, 0, 1, 0},
  {&__pyx_kp_s_white_horse, __pyx_k_white_horse, sizeof(__pyx_k_white_horse), 0, 0, 1, 0},
  {&__pyx_kp_s_white_king, __pyx_k_white_king, sizeof(__pyx_k_white_king), 0, 0, 1, 0},
  {&__pyx_kp_s_white_knight, __pyx_k_white_knight, sizeof(__pyx_k_white_knight), 0, 0, 1, 0},
  {&__pyx_kp_s_white_lance, __pyx_k_white_lance, sizeof(__pyx_k_white_lance), 0, 0, 1, 0},
  {&__pyx_kp_s_white_pawn, __pyx_k_white_pawn, sizeof(__pyx_k_white_pawn), 0, 0, 1, 0},
  {&__pyx_kp_s_white_pro_knight, __pyx_k_white_pro_knight, sizeof(__pyx_k_white_pro_knight), 0, 0, 1, 0},
  {&__pyx_kp_s_white_pro_lance, __pyx_k_white_pro_lance, sizeof(__pyx_k_white_pro_lance), 0, 0, 1, 0},
  {&__pyx_kp_s_white_pro_pawn, __pyx_k_white_pro_pawn, sizeof(__pyx_k_white_pro_pawn), 0, 0, 1, 0},
  {&__pyx_kp_s_white_pro_silver, __pyx_k_white_pro_silver, sizeof(__pyx_k_white_pro_silver), 0, 0, 1, 0},
  {&__pyx_kp_s_white_rook, __pyx_k_white_rook, sizeof(__pyx_k_white_rook), 0, 0, 1, 0},
  {&__pyx_kp_s_white_silver, __pyx_k_white_silver, sizeof(__pyx_k_white_silver), 0, 0, 1, 0},
  {&__pyx_n_s_width, __pyx_k_width, sizeof(__pyx_k_width), 0, 0, 1, 1},
  {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
  {&__pyx_kp_s_xlink_href, __pyx_k_xlink_href, sizeof(__pyx_k_xlink_href), 0, 0, 1, 0},
  {&__pyx_n_s_xml_etree_ElementTree, __pyx_k_xml_etree_ElementTree, sizeof(__pyx_k_xml_etree_ElementTree), 0, 0, 1, 1},
  {&__pyx_n_s_xmlns, __pyx_k_xmlns, sizeof(__pyx_k_xmlns), 0, 0, 1, 1},
  {&__pyx_kp_s_xmlns_xlink, __pyx_k_xmlns_xlink, sizeof(__pyx_k_xmlns_xlink), 0, 0, 1, 0},
  {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
  {&__pyx_n_s_zip, __pyx_k_zip, sizeof(__pyx_k_zip), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 61, __pyx_L1_error)
  __pyx_builtin_staticmethod = __Pyx_GetBuiltinName(__pyx_n_s_staticmethod); if (!__pyx_builtin_staticmethod) __PYX_ERR(0, 694, __pyx_L1_error)
  __pyx_builtin_zip = __Pyx_GetBuiltinName(__pyx_n_s_zip); if (!__pyx_builtin_zip) __PYX_ERR(0, 526, __pyx_L1_error)
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) __PYX_ERR(1, 2, __pyx_L1_error)
  __pyx_builtin_StopIteration = __Pyx_GetBuiltinName(__pyx_n_s_StopIteration); if (!__pyx_builtin_StopIteration) __PYX_ERR(0, 616, __pyx_L1_error)
  __pyx_builtin_open = __Pyx_GetBuiltinName(__pyx_n_s_open); if (!__pyx_builtin_open) __PYX_ERR(0, 697, __pyx_L1_error)
  __pyx_builtin_ImportError = __Pyx_GetBuiltinName(__pyx_n_s_ImportError); if (!__pyx_builtin_ImportError) __PYX_ERR(2, 947, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "cshogi/_cshogi.pyx":493
 * 				"x": str(20.5 + (8 - i) * 20),
 * 				"y": str(10.5 + j * 20),
 * 				"width": str(20),             # <<<<<<<<<<<<<<
 * 				"height": str(20),
 * 				"fill": "#f6b94d"
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_int_20); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(0, 493, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "cshogi/_cshogi.pyx":563
 * 				e.set("y", str(y - 14 * scale * i))
 * 				if c == WHITE:
 * 					e.set("transform", "rotate(180)")             # <<<<<<<<<<<<<<
 * 				e.text = text
 * 
 */
  __pyx_tuple__9 = PyTuple_Pack(2, __pyx_n_s_transform, __pyx_kp_s_rotate_180); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(0, 563, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__10 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__12 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__13 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);

  /* "cshogi/_cshogi.pyx":697
 * 	def parse_file(file, encoding=None):
 * 		if type(file) is str:
 * 			with open(file, 'r', encoding=encoding) as f:             # <<<<<<<<<<<<<<
 * 				return Parser.parse_str(f.read())
 * 		else:
 */
  __pyx_tuple__14 = PyTuple_Pack(3, Py_None, Py_None, Py_None); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 697, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "cshogi/_cshogi.pyx":735
 * 		for information in self.__parser.informations:
 * 			k, v = information.decode('utf-8').split(':', 1)
 * 			d[k[1:]] = v             # <<<<<<<<<<<<<<
 * 		return d
 * 
 */
  __pyx_slice__17 = PySlice_New(__pyx_int_1, Py_None, Py_None); if (unlikely(!__pyx_slice__17)) __PYX_ERR(0, 735, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__17);
  __Pyx_GIVEREF(__pyx_slice__17);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__18 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__19 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__19)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__20 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__21 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__21)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":947
 *         __pyx_import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
  __pyx_tuple__22 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_multiarray_failed_to); if (unlikely(!__pyx_tuple__22)) __PYX_ERR(2, 947, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);

  /* "../../appdata/local/programs/python/python39/lib/site-packages/numpy/__init__.pxd":953
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
  __pyx_tuple__23 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_umath_failed_to_impor); if (unlikely(!__pyx_tuple__23)) __PYX_ERR(2, 953, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);

  /* "cshogi/_cshogi.pyx":61
 * 	A8, B8, C8, D8, E8, F8, G8, H8, I8,
 * 	A9, B9, C9, D9, E9, F9, G9, H9, I9,
 * ] = range(81)             # <<<<<<<<<<<<<<
 * 
 * SQUARE_NAMES = [
 */
  __pyx_tuple__24 = PyTuple_Pack(1, __pyx_int_81); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(0, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);

  /* "cshogi/_cshogi.pyx":75
 * ]
 * 
 * COLORS = [BLACK, WHITE] = range(2)             # <<<<<<<<<<<<<<
 * 
 * GAME_RESULTS = [
 */
  __pyx_tuple__25 = PyTuple_Pack(1, __pyx_int_2); if (unlikely(!__pyx_tuple__25)) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__25);
  __Pyx_GIVEREF(__pyx_tuple__25);

  /* "cshogi/_cshogi.pyx":79
 * GAME_RESULTS = [
 * 	DRAW, BLACK_WIN, WHITE_WIN,
 * ] = range(3)             # <<<<<<<<<<<<<<
 * 
 * PIECE_TYPES_WITH_NONE = [NONE,
 */
  __pyx_tuple__26 = PyTuple_Pack(1, __pyx_int_3); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(0, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);

  /* "cshogi/_cshogi.pyx":88
 * 	  PROM_PAWN, PROM_LANCE, PROM_KNIGHT, PROM_SILVER,
 * 	PROM_BISHOP,  PROM_ROOK,
 * ] = range(15)             # <<<<<<<<<<<<<<
 * 
 * PIECE_TYPES = [
 */
  __pyx_tuple__27 = PyTuple_Pack(1, __pyx_int_15); if (unlikely(!__pyx_tuple__27)) __PYX_ERR(0, 88, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__27);
  __Pyx_GIVEREF(__pyx_tuple__27);

  /* "cshogi/_cshogi.pyx":112
 * 	 WPROM_PAWN, WPROM_LANCE, WPROM_KNIGHT, WPROM_SILVER,
 *    WPROM_BISHOP, WPROM_ROOK,
 * ] = range(31)             # <<<<<<<<<<<<<<
 * 
 * HAND_PIECES = [
 */
  __pyx_tuple__28 = PyTuple_Pack(1, __pyx_int_31); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);

  /* "cshogi/_cshogi.pyx":118
 * 		  HGOLD,
 * 		HBISHOP,      HROOK,
 * ] = range(7)             # <<<<<<<<<<<<<<
 * 
 * MAX_PIECES_IN_HAND = [
 */
  __pyx_tuple__29 = PyTuple_Pack(1, __pyx_int_7); if (unlikely(!__pyx_tuple__29)) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__29);
  __Pyx_GIVEREF(__pyx_tuple__29);

  /* "cshogi/_cshogi.pyx":131
 * 	NOT_REPETITION, REPETITION_DRAW, REPETITION_WIN, REPETITION_LOSE,
 * 	REPETITION_SUPERIOR, REPETITION_INFERIOR
 * ] = range(6)             # <<<<<<<<<<<<<<
 * 
 * SVG_PIECE_DEFS = [
 */
  __pyx_tuple__30 = PyTuple_Pack(1, __pyx_int_6); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(0, 131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);

  /* "cshogi/_cshogi.pyx":196
 * 
 * class SvgWrapper(str):
 * 	def _repr_svg_(self):             # <<<<<<<<<<<<<<
 * 		return self
 * 
 */
  __pyx_tuple__65 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__65)) __PYX_ERR(0, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__65);
  __Pyx_GIVEREF(__pyx_tuple__65);
  __pyx_codeobj__66 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__65, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_repr_svg, 196, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__66)) __PYX_ERR(0, 196, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":224
 * 	string __to_csa(const int move)
 * 
 * def to_usi(int move):             # <<<<<<<<<<<<<<
 * 	return __to_usi(move)
 * 
 */
  __pyx_tuple__67 = PyTuple_Pack(2, __pyx_n_s_move, __pyx_n_s_move); if (unlikely(!__pyx_tuple__67)) __PYX_ERR(0, 224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__67);
  __Pyx_GIVEREF(__pyx_tuple__67);
  __pyx_codeobj__68 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__67, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_to_usi, 224, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__68)) __PYX_ERR(0, 224, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":227
 * 	return __to_usi(move)
 * 
 * def to_csa(int move):             # <<<<<<<<<<<<<<
 * 	return __to_csa(move)
 * 
 */
  __pyx_tuple__69 = PyTuple_Pack(2, __pyx_n_s_move, __pyx_n_s_move); if (unlikely(!__pyx_tuple__69)) __PYX_ERR(0, 227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__69);
  __Pyx_GIVEREF(__pyx_tuple__69);
  __pyx_codeobj__70 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__69, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_to_csa, 227, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__70)) __PYX_ERR(0, 227, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":575
 * 			return self.to_svg(move)
 * 
 * def piece_to_piece_type(int p):             # <<<<<<<<<<<<<<
 * 	return __piece_to_piece_type(p)
 * 
 */
  __pyx_tuple__71 = PyTuple_Pack(2, __pyx_n_s_p, __pyx_n_s_p); if (unlikely(!__pyx_tuple__71)) __PYX_ERR(0, 575, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__71);
  __Pyx_GIVEREF(__pyx_tuple__71);
  __pyx_codeobj__72 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__71, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_piece_to_piece_type, 575, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__72)) __PYX_ERR(0, 575, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":624
 * 		return self.__ml.size()
 * 
 * def move_to(int move):             # <<<<<<<<<<<<<<
 * 	return __move_to(move)
 * 
 */
  __pyx_tuple__73 = PyTuple_Pack(2, __pyx_n_s_move, __pyx_n_s_move); if (unlikely(!__pyx_tuple__73)) __PYX_ERR(0, 624, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__73);
  __Pyx_GIVEREF(__pyx_tuple__73);
  __pyx_codeobj__74 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__73, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_move_to, 624, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__74)) __PYX_ERR(0, 624, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":627
 * 	return __move_to(move)
 * 
 * def move_from(int move):             # <<<<<<<<<<<<<<
 * 	return __move_from(move)
 * 
 */
  __pyx_tuple__75 = PyTuple_Pack(2, __pyx_n_s_move, __pyx_n_s_move); if (unlikely(!__pyx_tuple__75)) __PYX_ERR(0, 627, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__75);
  __Pyx_GIVEREF(__pyx_tuple__75);
  __pyx_codeobj__76 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__75, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_move_from, 627, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__76)) __PYX_ERR(0, 627, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":630
 * 	return __move_from(move)
 * 
 * def move_cap(int move):             # <<<<<<<<<<<<<<
 * 	return __move_cap(move)
 * 
 */
  __pyx_tuple__77 = PyTuple_Pack(2, __pyx_n_s_move, __pyx_n_s_move); if (unlikely(!__pyx_tuple__77)) __PYX_ERR(0, 630, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__77);
  __Pyx_GIVEREF(__pyx_tuple__77);
  __pyx_codeobj__78 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__77, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_move_cap, 630, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__78)) __PYX_ERR(0, 630, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":633
 * 	return __move_cap(move)
 * 
 * def move_is_promotion(int move):             # <<<<<<<<<<<<<<
 * 	return __move_is_promotion(move)
 * 
 */
  __pyx_tuple__79 = PyTuple_Pack(2, __pyx_n_s_move, __pyx_n_s_move); if (unlikely(!__pyx_tuple__79)) __PYX_ERR(0, 633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__79);
  __Pyx_GIVEREF(__pyx_tuple__79);
  __pyx_codeobj__80 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__79, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_move_is_promotion, 633, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__80)) __PYX_ERR(0, 633, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":636
 * 	return __move_is_promotion(move)
 * 
 * def move_is_drop(int move):             # <<<<<<<<<<<<<<
 * 	return __move_is_drop(move)
 * 
 */
  __pyx_tuple__81 = PyTuple_Pack(2, __pyx_n_s_move, __pyx_n_s_move); if (unlikely(!__pyx_tuple__81)) __PYX_ERR(0, 636, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__81);
  __Pyx_GIVEREF(__pyx_tuple__81);
  __pyx_codeobj__82 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__81, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_move_is_drop, 636, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__82)) __PYX_ERR(0, 636, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":639
 * 	return __move_is_drop(move)
 * 
 * def move_from_piece_type(int move):             # <<<<<<<<<<<<<<
 * 	return __move_from_piece_type(move)
 * 
 */
  __pyx_tuple__83 = PyTuple_Pack(2, __pyx_n_s_move, __pyx_n_s_move); if (unlikely(!__pyx_tuple__83)) __PYX_ERR(0, 639, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__83);
  __Pyx_GIVEREF(__pyx_tuple__83);
  __pyx_codeobj__84 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__83, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_move_from_piece_type, 639, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__84)) __PYX_ERR(0, 639, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":642
 * 	return __move_from_piece_type(move)
 * 
 * def move_drop_hand_piece(int move):             # <<<<<<<<<<<<<<
 * 	return __move_drop_hand_piece(move)
 * 
 */
  __pyx_tuple__85 = PyTuple_Pack(2, __pyx_n_s_move, __pyx_n_s_move); if (unlikely(!__pyx_tuple__85)) __PYX_ERR(0, 642, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__85);
  __Pyx_GIVEREF(__pyx_tuple__85);
  __pyx_codeobj__86 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__85, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_move_drop_hand_piece, 642, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__86)) __PYX_ERR(0, 642, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":645
 * 	return __move_drop_hand_piece(move)
 * 
 * def move16(int move):             # <<<<<<<<<<<<<<
 * 	return __move16(move)
 * 
 */
  __pyx_tuple__87 = PyTuple_Pack(2, __pyx_n_s_move, __pyx_n_s_move); if (unlikely(!__pyx_tuple__87)) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__87);
  __Pyx_GIVEREF(__pyx_tuple__87);
  __pyx_codeobj__88 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__87, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_move16, 645, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__88)) __PYX_ERR(0, 645, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":648
 * 	return __move16(move)
 * 
 * def move16_from_psv(unsigned short move16):             # <<<<<<<<<<<<<<
 * 	return __move16_from_psv(move16)
 * 
 */
  __pyx_tuple__89 = PyTuple_Pack(2, __pyx_n_s_move16, __pyx_n_s_move16); if (unlikely(!__pyx_tuple__89)) __PYX_ERR(0, 648, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__89);
  __Pyx_GIVEREF(__pyx_tuple__89);
  __pyx_codeobj__90 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__89, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_move16_from_psv, 648, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__90)) __PYX_ERR(0, 648, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":651
 * 	return __move16_from_psv(move16)
 * 
 * def move16_to_psv(unsigned short move16):             # <<<<<<<<<<<<<<
 * 	return __move16_to_psv(move16)
 * 
 */
  __pyx_tuple__91 = PyTuple_Pack(2, __pyx_n_s_move16, __pyx_n_s_move16); if (unlikely(!__pyx_tuple__91)) __PYX_ERR(0, 651, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__91);
  __Pyx_GIVEREF(__pyx_tuple__91);
  __pyx_codeobj__92 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__91, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_move16_to_psv, 651, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__92)) __PYX_ERR(0, 651, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":654
 * 	return __move16_to_psv(move16)
 * 
 * def move_rotate(int move):             # <<<<<<<<<<<<<<
 * 	return __move_rotate(move)
 * 
 */
  __pyx_tuple__93 = PyTuple_Pack(2, __pyx_n_s_move, __pyx_n_s_move); if (unlikely(!__pyx_tuple__93)) __PYX_ERR(0, 654, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__93);
  __Pyx_GIVEREF(__pyx_tuple__93);
  __pyx_codeobj__94 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__93, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_move_rotate, 654, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__94)) __PYX_ERR(0, 654, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":657
 * 	return __move_rotate(move)
 * 
 * def move_to_usi(int move):             # <<<<<<<<<<<<<<
 * 	return __move_to_usi(move).decode('ascii')
 * 
 */
  __pyx_tuple__95 = PyTuple_Pack(2, __pyx_n_s_move, __pyx_n_s_move); if (unlikely(!__pyx_tuple__95)) __PYX_ERR(0, 657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__95);
  __Pyx_GIVEREF(__pyx_tuple__95);
  __pyx_codeobj__96 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__95, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_move_to_usi, 657, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__96)) __PYX_ERR(0, 657, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":660
 * 	return __move_to_usi(move).decode('ascii')
 * 
 * def move_to_csa(int move):             # <<<<<<<<<<<<<<
 * 	return __move_to_csa(move).decode('ascii')
 * 
 */
  __pyx_tuple__97 = PyTuple_Pack(2, __pyx_n_s_move, __pyx_n_s_move); if (unlikely(!__pyx_tuple__97)) __PYX_ERR(0, 660, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__97);
  __Pyx_GIVEREF(__pyx_tuple__97);
  __pyx_codeobj__98 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__97, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_move_to_csa, 660, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__98)) __PYX_ERR(0, 660, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":663
 * 	return __move_to_csa(move).decode('ascii')
 * 
 * def move_from_csa(str csa):             # <<<<<<<<<<<<<<
 * 	cdef string csa_b = csa.encode('ascii')
 * 	return __move_from_csa(csa_b)
 */
  __pyx_tuple__99 = PyTuple_Pack(2, __pyx_n_s_csa, __pyx_n_s_csa_b); if (unlikely(!__pyx_tuple__99)) __PYX_ERR(0, 663, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__99);
  __Pyx_GIVEREF(__pyx_tuple__99);
  __pyx_codeobj__100 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__99, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_move_from_csa, 663, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__100)) __PYX_ERR(0, 663, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":667
 * 	return __move_from_csa(csa_b)
 * 
 * def opponent(int color):             # <<<<<<<<<<<<<<
 * 	return BLACK if color == WHITE else WHITE
 * 
 */
  __pyx_tuple__101 = PyTuple_Pack(2, __pyx_n_s_color, __pyx_n_s_color); if (unlikely(!__pyx_tuple__101)) __PYX_ERR(0, 667, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__101);
  __Pyx_GIVEREF(__pyx_tuple__101);
  __pyx_codeobj__102 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__101, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_opponent, 667, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__102)) __PYX_ERR(0, 667, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":672
 * _dlshogi_FEATURES1_NUM = __dlshogi_get_features1_num()
 * _dlshogi_FEATURES2_NUM = __dlshogi_get_features2_num()
 * def _dlshogi_make_move_label(int move, int color):             # <<<<<<<<<<<<<<
 * 	return __dlshogi_make_move_label(move, color)
 * 
 */
  __pyx_tuple__103 = PyTuple_Pack(2, __pyx_n_s_move, __pyx_n_s_color); if (unlikely(!__pyx_tuple__103)) __PYX_ERR(0, 672, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__103);
  __Pyx_GIVEREF(__pyx_tuple__103);
  __pyx_codeobj__104 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__103, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_dlshogi_make_move_label, 672, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__104)) __PYX_ERR(0, 672, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":695
 * cdef class Parser:
 * 	@staticmethod
 * 	def parse_file(file, encoding=None):             # <<<<<<<<<<<<<<
 * 		if type(file) is str:
 * 			with open(file, 'r', encoding=encoding) as f:
 */
  __pyx_tuple__105 = PyTuple_Pack(3, __pyx_n_s_file, __pyx_n_s_encoding, __pyx_n_s_f); if (unlikely(!__pyx_tuple__105)) __PYX_ERR(0, 695, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__105);
  __Pyx_GIVEREF(__pyx_tuple__105);
  __pyx_codeobj__106 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__105, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_parse_file, 695, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__106)) __PYX_ERR(0, 695, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":703
 * 
 * 	@staticmethod
 * 	def parse_str(csa_str):             # <<<<<<<<<<<<<<
 * 		parsers = []
 * 		# split multiple matches
 */
  __pyx_tuple__107 = PyTuple_Pack(5, __pyx_n_s_csa_str, __pyx_n_s_parsers, __pyx_n_s_matches, __pyx_n_s_one_csa_str, __pyx_n_s_parser); if (unlikely(!__pyx_tuple__107)) __PYX_ERR(0, 703, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__107);
  __Pyx_GIVEREF(__pyx_tuple__107);
  __pyx_codeobj__108 = (PyObject*)__Pyx_PyCode_New(1, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__107, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cshogi__cshogi_pyx, __pyx_n_s_parse_str, 703, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__108)) __PYX_ERR(0, 703, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  __pyx_umethod_PyString_Type_encode.type = (PyObject*)&PyString_Type;
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_float_1_0 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_float_1_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_10_5 = PyFloat_FromDouble(10.5); if (unlikely(!__pyx_float_10_5)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_20_5 = PyFloat_FromDouble(20.5); if (unlikely(!__pyx_float_20_5)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_4 = PyInt_FromLong(4); if (unlikely(!__pyx_int_4)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_6 = PyInt_FromLong(6); if (unlikely(!__pyx_int_6)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_7 = PyInt_FromLong(7); if (unlikely(!__pyx_int_7)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_8 = PyInt_FromLong(8); if (unlikely(!__pyx_int_8)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_9 = PyInt_FromLong(9); if (unlikely(!__pyx_int_9)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_10 = PyInt_FromLong(10); if (unlikely(!__pyx_int_10)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_11 = PyInt_FromLong(11); if (unlikely(!__pyx_int_11)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_14 = PyInt_FromLong(14); if (unlikely(!__pyx_int_14)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_15 = PyInt_FromLong(15); if (unlikely(!__pyx_int_15)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_18 = PyInt_FromLong(18); if (unlikely(!__pyx_int_18)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_20 = PyInt_FromLong(20); if (unlikely(!__pyx_int_20)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_31 = PyInt_FromLong(31); if (unlikely(!__pyx_int_31)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_32 = PyInt_FromLong(32); if (unlikely(!__pyx_int_32)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_81 = PyInt_FromLong(81); if (unlikely(!__pyx_int_81)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_190 = PyInt_FromLong(190); if (unlikely(!__pyx_int_190)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_192 = PyInt_FromLong(192); if (unlikely(!__pyx_int_192)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_214 = PyInt_FromLong(214); if (unlikely(!__pyx_int_214)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_230 = PyInt_FromLong(230); if (unlikely(!__pyx_int_230)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_32767 = PyInt_FromLong(32767L); if (unlikely(!__pyx_int_32767)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1048576 = PyInt_FromLong(1048576L); if (unlikely(!__pyx_int_1048576)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_neg_10 = PyInt_FromLong(-10); if (unlikely(!__pyx_int_neg_10)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_neg_16 = PyInt_FromLong(-16); if (unlikely(!__pyx_int_neg_16)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_6cshogi_7_cshogi_Board) < 0) __PYX_ERR(0, 279, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_6cshogi_7_cshogi_Board.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_6cshogi_7_cshogi_Board.tp_dictoffset && __pyx_type_6cshogi_7_cshogi_Board.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_6cshogi_7_cshogi_Board.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_Board, (PyObject *)&__pyx_type_6cshogi_7_cshogi_Board) < 0) __PYX_ERR(0, 279, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6cshogi_7_cshogi_Board) < 0) __PYX_ERR(0, 279, __pyx_L1_error)
  __pyx_ptype_6cshogi_7_cshogi_Board = &__pyx_type_6cshogi_7_cshogi_Board;
  if (PyType_Ready(&__pyx_type_6cshogi_7_cshogi_LegalMoveList) < 0) __PYX_ERR(0, 605, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_6cshogi_7_cshogi_LegalMoveList.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_6cshogi_7_cshogi_LegalMoveList.tp_dictoffset && __pyx_type_6cshogi_7_cshogi_LegalMoveList.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_6cshogi_7_cshogi_LegalMoveList.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_LegalMoveList, (PyObject *)&__pyx_type_6cshogi_7_cshogi_LegalMoveList) < 0) __PYX_ERR(0, 605, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6cshogi_7_cshogi_LegalMoveList) < 0) __PYX_ERR(0, 605, __pyx_L1_error)
  __pyx_ptype_6cshogi_7_cshogi_LegalMoveList = &__pyx_type_6cshogi_7_cshogi_LegalMoveList;
  if (PyType_Ready(&__pyx_type_6cshogi_7_cshogi_Parser) < 0) __PYX_ERR(0, 693, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_6cshogi_7_cshogi_Parser.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_6cshogi_7_cshogi_Parser.tp_dictoffset && __pyx_type_6cshogi_7_cshogi_Parser.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_6cshogi_7_cshogi_Parser.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_Parser, (PyObject *)&__pyx_type_6cshogi_7_cshogi_Parser) < 0) __PYX_ERR(0, 693, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6cshogi_7_cshogi_Parser) < 0) __PYX_ERR(0, 693, __pyx_L1_error)
  __pyx_ptype_6cshogi_7_cshogi_Parser = &__pyx_type_6cshogi_7_cshogi_Parser;
  if (PyType_Ready(&__pyx_type_6cshogi_7_cshogi_DfPn) < 0) __PYX_ERR(0, 793, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_6cshogi_7_cshogi_DfPn.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_6cshogi_7_cshogi_DfPn.tp_dictoffset && __pyx_type_6cshogi_7_cshogi_DfPn.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_6cshogi_7_cshogi_DfPn.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_DfPn, (PyObject *)&__pyx_type_6cshogi_7_cshogi_DfPn) < 0) __PYX_ERR(0, 793, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6cshogi_7_cshogi_DfPn) < 0) __PYX_ERR(0, 793, __pyx_L1_error)
  __pyx_ptype_6cshogi_7_cshogi_DfPn = &__pyx_type_6cshogi_7_cshogi_DfPn;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__pyx_t_1, __Pyx_BUILTIN_MODULE_NAME, "type", 
  #if defined(PYPY_VERSION_NUM) && PYPY_VERSION_NUM < 0x050B0000
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_7cpython_4type_type) __PYX_ERR(3, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("numpy"); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType(__pyx_t_1, "numpy", "dtype", sizeof(PyArray_Descr), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_dtype) __PYX_ERR(2, 200, __pyx_L1_error)
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType(__pyx_t_1, "numpy", "flatiter", sizeof(PyArrayIterObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_flatiter) __PYX_ERR(2, 223, __pyx_L1_error)
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType(__pyx_t_1, "numpy", "broadcast", sizeof(PyArrayMultiIterObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_broadcast) __PYX_ERR(2, 227, __pyx_L1_error)
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType(__pyx_t_1, "numpy", "ndarray", sizeof(PyArrayObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_ndarray) __PYX_ERR(2, 239, __pyx_L1_error)
  __pyx_ptype_5numpy_generic = __Pyx_ImportType(__pyx_t_1, "numpy", "generic", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_generic) __PYX_ERR(2, 771, __pyx_L1_error)
  __pyx_ptype_5numpy_number = __Pyx_ImportType(__pyx_t_1, "numpy", "number", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_number) __PYX_ERR(2, 773, __pyx_L1_error)
  __pyx_ptype_5numpy_integer = __Pyx_ImportType(__pyx_t_1, "numpy", "integer", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_integer) __PYX_ERR(2, 775, __pyx_L1_error)
  __pyx_ptype_5numpy_signedinteger = __Pyx_ImportType(__pyx_t_1, "numpy", "signedinteger", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_signedinteger) __PYX_ERR(2, 777, __pyx_L1_error)
  __pyx_ptype_5numpy_unsignedinteger = __Pyx_ImportType(__pyx_t_1, "numpy", "unsignedinteger", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_unsignedinteger) __PYX_ERR(2, 779, __pyx_L1_error)
  __pyx_ptype_5numpy_inexact = __Pyx_ImportType(__pyx_t_1, "numpy", "inexact", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_inexact) __PYX_ERR(2, 781, __pyx_L1_error)
  __pyx_ptype_5numpy_floating = __Pyx_ImportType(__pyx_t_1, "numpy", "floating", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_floating) __PYX_ERR(2, 783, __pyx_L1_error)
  __pyx_ptype_5numpy_complexfloating = __Pyx_ImportType(__pyx_t_1, "numpy", "complexfloating", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_complexfloating) __PYX_ERR(2, 785, __pyx_L1_error)
  __pyx_ptype_5numpy_flexible = __Pyx_ImportType(__pyx_t_1, "numpy", "flexible", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_flexible) __PYX_ERR(2, 787, __pyx_L1_error)
  __pyx_ptype_5numpy_character = __Pyx_ImportType(__pyx_t_1, "numpy", "character", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_character) __PYX_ERR(2, 789, __pyx_L1_error)
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType(__pyx_t_1, "numpy", "ufunc", sizeof(PyUFuncObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_ufunc) __PYX_ERR(2, 827, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC init_cshogi(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC init_cshogi(void)
#else
__Pyx_PyMODINIT_FUNC PyInit__cshogi(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit__cshogi(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec__cshogi(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  PyObject *__pyx_t_20 = NULL;
  PyObject *__pyx_t_21 = NULL;
  PyObject *__pyx_t_22 = NULL;
  PyObject *__pyx_t_23 = NULL;
  PyObject *__pyx_t_24 = NULL;
  PyObject *__pyx_t_25 = NULL;
  PyObject *__pyx_t_26 = NULL;
  PyObject *__pyx_t_27 = NULL;
  PyObject *__pyx_t_28 = NULL;
  PyObject *__pyx_t_29 = NULL;
  PyObject *__pyx_t_30 = NULL;
  PyObject *__pyx_t_31 = NULL;
  PyObject *__pyx_t_32 = NULL;
  PyObject *__pyx_t_33 = NULL;
  PyObject *__pyx_t_34 = NULL;
  PyObject *__pyx_t_35 = NULL;
  PyObject *__pyx_t_36 = NULL;
  PyObject *__pyx_t_37 = NULL;
  PyObject *__pyx_t_38 = NULL;
  PyObject *__pyx_t_39 = NULL;
  PyObject *__pyx_t_40 = NULL;
  PyObject *__pyx_t_41 = NULL;
  PyObject *__pyx_t_42 = NULL;
  PyObject *__pyx_t_43 = NULL;
  PyObject *__pyx_t_44 = NULL;
  PyObject *__pyx_t_45 = NULL;
  PyObject *__pyx_t_46 = NULL;
  PyObject *__pyx_t_47 = NULL;
  PyObject *__pyx_t_48 = NULL;
  PyObject *__pyx_t_49 = NULL;
  PyObject *__pyx_t_50 = NULL;
  PyObject *__pyx_t_51 = NULL;
  PyObject *__pyx_t_52 = NULL;
  PyObject *__pyx_t_53 = NULL;
  PyObject *__pyx_t_54 = NULL;
  PyObject *__pyx_t_55 = NULL;
  PyObject *__pyx_t_56 = NULL;
  PyObject *__pyx_t_57 = NULL;
  PyObject *__pyx_t_58 = NULL;
  PyObject *__pyx_t_59 = NULL;
  PyObject *__pyx_t_60 = NULL;
  PyObject *__pyx_t_61 = NULL;
  PyObject *__pyx_t_62 = NULL;
  PyObject *__pyx_t_63 = NULL;
  PyObject *__pyx_t_64 = NULL;
  PyObject *__pyx_t_65 = NULL;
  PyObject *__pyx_t_66 = NULL;
  PyObject *__pyx_t_67 = NULL;
  PyObject *__pyx_t_68 = NULL;
  PyObject *__pyx_t_69 = NULL;
  PyObject *__pyx_t_70 = NULL;
  PyObject *__pyx_t_71 = NULL;
  PyObject *__pyx_t_72 = NULL;
  PyObject *__pyx_t_73 = NULL;
  PyObject *__pyx_t_74 = NULL;
  PyObject *__pyx_t_75 = NULL;
  PyObject *__pyx_t_76 = NULL;
  PyObject *__pyx_t_77 = NULL;
  PyObject *__pyx_t_78 = NULL;
  PyObject *__pyx_t_79 = NULL;
  PyObject *__pyx_t_80 = NULL;
  PyObject *__pyx_t_81 = NULL;
  PyObject *__pyx_t_82 = NULL;
  PyObject *__pyx_t_83 = NULL;
  PyObject *(*__pyx_t_84)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module '_cshogi' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit__cshogi(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("_cshogi", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_b);
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_cython_runtime);
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_cshogi___cshogi) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "cshogi._cshogi")) {
      if (unlikely(PyDict_SetItemString(modules, "cshogi._cshogi", __pyx_m) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  if (unlikely(__Pyx_modinit_type_init_code() < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
  if (unlikely(__Pyx_modinit_type_import_code() < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "cshogi/_cshogi.pyx":5
 * from libcpp cimport bool
 * 
 * import numpy as np             # <<<<<<<<<<<<<<
 * cimport numpy as np
 * 
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_numpy, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_1) < 0) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cshogi/_cshogi.pyx":8
 * cimport numpy as np
 * 
 * import locale             # <<<<<<<<<<<<<<
 * 
 * dtypeHcp = np.dtype((np.uint8, 32))
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_locale, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_locale, __pyx_t_1) < 0) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cshogi/_cshogi.pyx":10
 * import locale
 * 
 * dtypeHcp = np.dtype((np.uint8, 32))             # <<<<<<<<<<<<<<
 * dtypeEval = np.dtype(np.int16)
 * dtypeMove16 = np.dtype(np.int16)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_uint8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_INCREF(__pyx_int_32);
  __Pyx_GIVEREF(__pyx_int_32);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_32);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_dtype), __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_dtypeHcp, __pyx_t_2) < 0) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cshogi/_cshogi.pyx":11
 * 
 * dtypeHcp = np.dtype((np.uint8, 32))
 * dtypeEval = np.dtype(np.int16)             # <<<<<<<<<<<<<<
 * dtypeMove16 = np.dtype(np.int16)
 * dtypeGameResult = np.dtype(np.int8)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_int16); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_dtype), __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_dtypeEval, __pyx_t_2) < 0) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cshogi/_cshogi.pyx":12
 * dtypeHcp = np.dtype((np.uint8, 32))
 * dtypeEval = np.dtype(np.int16)
 * dtypeMove16 = np.dtype(np.int16)             # <<<<<<<<<<<<<<
 * dtypeGameResult = np.dtype(np.int8)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_int16); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_dtype), __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_dtypeMove16, __pyx_t_2) < 0) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cshogi/_cshogi.pyx":13
 * dtypeEval = np.dtype(np.int16)
 * dtypeMove16 = np.dtype(np.int16)
 * dtypeGameResult = np.dtype(np.int8)             # <<<<<<<<<<<<<<
 * 
 * HuffmanCodedPos = np.dtype([
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_int8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_dtype), __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_dtypeGameResult, __pyx_t_2) < 0) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cshogi/_cshogi.pyx":16
 * 
 * HuffmanCodedPos = np.dtype([
 * 	('hcp', dtypeHcp),             # <<<<<<<<<<<<<<
 * 	])
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_dtypeHcp); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_hcp);
  __Pyx_GIVEREF(__pyx_n_s_hcp);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_hcp);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __pyx_t_2 = 0;

  /* "cshogi/_cshogi.pyx":15
 * dtypeGameResult = np.dtype(np.int8)
 * 
 * HuffmanCodedPos = np.dtype([             # <<<<<<<<<<<<<<
 * 	('hcp', dtypeHcp),
 * 	])
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_dtype), __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HuffmanCodedPos, __pyx_t_1) < 0) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cshogi/_cshogi.pyx":20
 * 
 * HuffmanCodedPosAndEval = np.dtype([
 * 	('hcp', dtypeHcp),             # <<<<<<<<<<<<<<
 * 	('eval', dtypeEval),
 * 	('bestMove16', dtypeMove16),
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_dtypeHcp); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_hcp);
  __Pyx_GIVEREF(__pyx_n_s_hcp);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_hcp);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "cshogi/_cshogi.pyx":21
 * HuffmanCodedPosAndEval = np.dtype([
 * 	('hcp', dtypeHcp),
 * 	('eval', dtypeEval),             # <<<<<<<<<<<<<<
 * 	('bestMove16', dtypeMove16),
 * 	('gameResult', dtypeGameResult),
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_dtypeEval); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_n_s_eval);
  __Pyx_GIVEREF(__pyx_n_s_eval);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_n_s_eval);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "cshogi/_cshogi.pyx":22
 * 	('hcp', dtypeHcp),
 * 	('eval', dtypeEval),
 * 	('bestMove16', dtypeMove16),             # <<<<<<<<<<<<<<
 * 	('gameResult', dtypeGameResult),
 * 	('dummy', np.uint8),
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_dtypeMove16); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_n_s_bestMove16);
  __Pyx_GIVEREF(__pyx_n_s_bestMove16);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_n_s_bestMove16);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "cshogi/_cshogi.pyx":23
 * 	('eval', dtypeEval),
 * 	('bestMove16', dtypeMove16),
 * 	('gameResult', dtypeGameResult),             # <<<<<<<<<<<<<<
 * 	('dummy', np.uint8),
 * 	])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_dtypeGameResult); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(__pyx_n_s_gameResult);
  __Pyx_GIVEREF(__pyx_n_s_gameResult);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_n_s_gameResult);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "cshogi/_cshogi.pyx":24
 * 	('bestMove16', dtypeMove16),
 * 	('gameResult', dtypeGameResult),
 * 	('dummy', np.uint8),             # <<<<<<<<<<<<<<
 * 	])
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_uint8); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_dummy);
  __Pyx_GIVEREF(__pyx_n_s_dummy);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_dummy);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_6);
  __pyx_t_6 = 0;

  /* "cshogi/_cshogi.pyx":19
 * 	])
 * 
 * HuffmanCodedPosAndEval = np.dtype([             # <<<<<<<<<<<<<<
 * 	('hcp', dtypeHcp),
 * 	('eval', dtypeEval),
 */
  __pyx_t_6 = PyList_New(5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_6, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_6, 2, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyList_SET_ITEM(__pyx_t_6, 3, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_6, 4, __pyx_t_1);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_dtype), __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HuffmanCodedPosAndEval, __pyx_t_1) < 0) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cshogi/_cshogi.pyx":28
 * 
 * PackedSfen = np.dtype([
 * 	('sfen', np.uint8, 32),             # <<<<<<<<<<<<<<
 * 	])
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_uint8); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_sfen);
  __Pyx_GIVEREF(__pyx_n_s_sfen);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_sfen);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_6);
  __Pyx_INCREF(__pyx_int_32);
  __Pyx_GIVEREF(__pyx_int_32);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_int_32);
  __pyx_t_6 = 0;

  /* "cshogi/_cshogi.pyx":27
 * 	])
 * 
 * PackedSfen = np.dtype([             # <<<<<<<<<<<<<<
 * 	('sfen', np.uint8, 32),
 * 	])
 */
  __pyx_t_6 = PyList_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_dtype), __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PackedSfen, __pyx_t_1) < 0) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cshogi/_cshogi.pyx":32
 * 
 * PackedSfenValue = np.dtype([
 * 	('sfen', np.uint8, 32),             # <<<<<<<<<<<<<<
 * 	('score', np.int16),
 * 	('move', np.uint16),
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_uint8); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_sfen);
  __Pyx_GIVEREF(__pyx_n_s_sfen);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_sfen);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_6);
  __Pyx_INCREF(__pyx_int_32);
  __Pyx_GIVEREF(__pyx_int_32);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_int_32);
  __pyx_t_6 = 0;

  /* "cshogi/_cshogi.pyx":33
 * PackedSfenValue = np.dtype([
 * 	('sfen', np.uint8, 32),
 * 	('score', np.int16),             # <<<<<<<<<<<<<<
 * 	('move', np.uint16),
 * 	('gamePly', np.uint16),
 */
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_int16); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_INCREF(__pyx_n_s_score);
  __Pyx_GIVEREF(__pyx_n_s_score);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_n_s_score);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_5);
  __pyx_t_5 = 0;

  /* "cshogi/_cshogi.pyx":34
 * 	('sfen', np.uint8, 32),
 * 	('score', np.int16),
 * 	('move', np.uint16),             # <<<<<<<<<<<<<<
 * 	('gamePly', np.uint16),
 * 	('game_result', np.int8),
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_uint16); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(__pyx_n_s_move);
  __Pyx_GIVEREF(__pyx_n_s_move);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_n_s_move);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
  __pyx_t_4 = 0;

  /* "cshogi/_cshogi.pyx":35
 * 	('score', np.int16),
 * 	('move', np.uint16),
 * 	('gamePly', np.uint16),             # <<<<<<<<<<<<<<
 * 	('game_result', np.int8),
 * 	('padding', np.uint8),
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_uint16); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_n_s_gamePly);
  __Pyx_GIVEREF(__pyx_n_s_gamePly);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_n_s_gamePly);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __pyx_t_3 = 0;

  /* "cshogi/_cshogi.pyx":36
 * 	('move', np.uint16),
 * 	('gamePly', np.uint16),
 * 	('game_result', np.int8),             # <<<<<<<<<<<<<<
 * 	('padding', np.uint8),
 * 	])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_int8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_n_s_game_result);
  __Pyx_GIVEREF(__pyx_n_s_game_result);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_n_s_game_result);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_2 = 0;

  /* "cshogi/_cshogi.pyx":37
 * 	('gamePly', np.uint16),
 * 	('game_result', np.int8),
 * 	('padding', np.uint8),             # <<<<<<<<<<<<<<
 * 	])
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_uint8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_padding);
  __Pyx_GIVEREF(__pyx_n_s_padding);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_padding);
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_7);
  __pyx_t_7 = 0;

  /* "cshogi/_cshogi.pyx":31
 * 	])
 * 
 * PackedSfenValue = np.dtype([             # <<<<<<<<<<<<<<
 * 	('sfen', np.uint8, 32),
 * 	('score', np.int16),
 */
  __pyx_t_7 = PyList_New(6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_7, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_6);
  PyList_SET_ITEM(__pyx_t_7, 1, __pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_5);
  PyList_SET_ITEM(__pyx_t_7, 2, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_7, 3, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_7, 4, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_7, 5, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_6 = 0;
  __pyx_t_5 = 0;
  __pyx_t_4 = 0;
  __pyx_t_3 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_dtype), __pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PackedSfenValue, __pyx_t_2) < 0) __PYX_ERR(0, 31, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cshogi/_cshogi.pyx":40
 * 	])
 * 
 * dtypeKey = np.dtype(np.uint64)             # <<<<<<<<<<<<<<
 * BookEntry = np.dtype([
 * 	('key', dtypeKey),
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_uint64); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_dtype), __pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_dtypeKey, __pyx_t_2) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cshogi/_cshogi.pyx":42
 * dtypeKey = np.dtype(np.uint64)
 * BookEntry = np.dtype([
 * 	('key', dtypeKey),             # <<<<<<<<<<<<<<
 * 	('fromToPro', dtypeMove16),
 * 	('count', np.uint16),
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_dtypeKey); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = PyTuple_New(2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_INCREF(__pyx_n_s_key);
  __Pyx_GIVEREF(__pyx_n_s_key);
  PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_n_s_key);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_2);
  __pyx_t_2 = 0;

  /* "cshogi/_cshogi.pyx":43
 * BookEntry = np.dtype([
 * 	('key', dtypeKey),
 * 	('fromToPro', dtypeMove16),             # <<<<<<<<<<<<<<
 * 	('count', np.uint16),
 * 	('score', np.int32),
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_dtypeMove16); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_n_s_fromToPro);
  __Pyx_GIVEREF(__pyx_n_s_fromToPro);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_n_s_fromToPro);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_2 = 0;

  /* "cshogi/_cshogi.pyx":44
 * 	('key', dtypeKey),
 * 	('fromToPro', dtypeMove16),
 * 	('count', np.uint16),             # <<<<<<<<<<<<<<
 * 	('score', np.int32),
 * 	])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_uint16); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_count);
  __Pyx_GIVEREF(__pyx_n_s_count);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_count);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
  __pyx_t_4 = 0;

  /* "cshogi/_cshogi.pyx":45
 * 	('fromToPro', dtypeMove16),
 * 	('count', np.uint16),
 * 	('score', np.int32),             # <<<<<<<<<<<<<<
 * 	])
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_int32); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_n_s_score);
  __Pyx_GIVEREF(__pyx_n_s_score);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_n_s_score);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_5);
  __pyx_t_5 = 0;

  /* "cshogi/_cshogi.pyx":41
 * 
 * dtypeKey = np.dtype(np.uint64)
 * BookEntry = np.dtype([             # <<<<<<<<<<<<<<
 * 	('key', dtypeKey),
 * 	('fromToPro', dtypeMove16),
 */
  __pyx_t_5 = PyList_New(4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 41, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_7);
  PyList_SET_ITEM(__pyx_t_5, 0, __pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_5, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_5, 2, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_5, 3, __pyx_t_4);
  __pyx_t_7 = 0;
  __pyx_t_3 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_dtype), __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 41, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BookEntry, __pyx_t_4) < 0) __PYX_ERR(0, 41, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "cshogi/_cshogi.pyx":49
 * 
 * 
 * STARTING_SFEN = 'lnsgkgsnl/1r5b1/ppppppppp/9/9/9/PPPPPPPPP/1B5R1/LNSGKGSNL b - 1'             # <<<<<<<<<<<<<<
 * 
 * SQUARES = [
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_STARTING_SFEN, __pyx_kp_s_lnsgkgsnl_1r5b1_ppppppppp_9_9_9) < 0) __PYX_ERR(0, 49, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":61
 * 	A8, B8, C8, D8, E8, F8, G8, H8, I8,
 * 	A9, B9, C9, D9, E9, F9, G9, H9, I9,
 * ] = range(81)             # <<<<<<<<<<<<<<
 * 
 * SQUARE_NAMES = [
 */
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SQUARES, __pyx_t_4) < 0) __PYX_ERR(0, 51, __pyx_L1_error)
  if ((likely(PyTuple_CheckExact(__pyx_t_4))) || (PyList_CheckExact(__pyx_t_4))) {
    PyObject* sequence = __pyx_t_4;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 81)) {
      if (size > 81) __Pyx_RaiseTooManyValuesError(81);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 51, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_5 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyTuple_GET_ITEM(sequence, 1); 
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 2); 
      __pyx_t_7 = PyTuple_GET_ITEM(sequence, 3); 
      __pyx_t_6 = PyTuple_GET_ITEM(sequence, 4); 
      __pyx_t_1 = PyTuple_GET_ITEM(sequence, 5); 
      __pyx_t_8 = PyTuple_GET_ITEM(sequence, 6); 
      __pyx_t_9 = PyTuple_GET_ITEM(sequence, 7); 
      __pyx_t_10 = PyTuple_GET_ITEM(sequence, 8); 
      __pyx_t_11 = PyTuple_GET_ITEM(sequence, 9); 
      __pyx_t_12 = PyTuple_GET_ITEM(sequence, 10); 
      __pyx_t_13 = PyTuple_GET_ITEM(sequence, 11); 
      __pyx_t_14 = PyTuple_GET_ITEM(sequence, 12); 
      __pyx_t_15 = PyTuple_GET_ITEM(sequence, 13); 
      __pyx_t_16 = PyTuple_GET_ITEM(sequence, 14); 
      __pyx_t_17 = PyTuple_GET_ITEM(sequence, 15); 
      __pyx_t_18 = PyTuple_GET_ITEM(sequence, 16); 
      __pyx_t_19 = PyTuple_GET_ITEM(sequence, 17); 
      __pyx_t_20 = PyTuple_GET_ITEM(sequence, 18); 
      __pyx_t_21 = PyTuple_GET_ITEM(sequence, 19); 
      __pyx_t_22 = PyTuple_GET_ITEM(sequence, 20); 
      __pyx_t_23 = PyTuple_GET_ITEM(sequence, 21); 
      __pyx_t_24 = PyTuple_GET_ITEM(sequence, 22); 
      __pyx_t_25 = PyTuple_GET_ITEM(sequence, 23); 
      __pyx_t_26 = PyTuple_GET_ITEM(sequence, 24); 
      __pyx_t_27 = PyTuple_GET_ITEM(sequence, 25); 
      __pyx_t_28 = PyTuple_GET_ITEM(sequence, 26); 
      __pyx_t_29 = PyTuple_GET_ITEM(sequence, 27); 
      __pyx_t_30 = PyTuple_GET_ITEM(sequence, 28); 
      __pyx_t_31 = PyTuple_GET_ITEM(sequence, 29); 
      __pyx_t_32 = PyTuple_GET_ITEM(sequence, 30); 
      __pyx_t_33 = PyTuple_GET_ITEM(sequence, 31); 
      __pyx_t_34 = PyTuple_GET_ITEM(sequence, 32); 
      __pyx_t_35 = PyTuple_GET_ITEM(sequence, 33); 
      __pyx_t_36 = PyTuple_GET_ITEM(sequence, 34); 
      __pyx_t_37 = PyTuple_GET_ITEM(sequence, 35); 
      __pyx_t_38 = PyTuple_GET_ITEM(sequence, 36); 
      __pyx_t_39 = PyTuple_GET_ITEM(sequence, 37); 
      __pyx_t_40 = PyTuple_GET_ITEM(sequence, 38); 
      __pyx_t_41 = PyTuple_GET_ITEM(sequence, 39); 
      __pyx_t_42 = PyTuple_GET_ITEM(sequence, 40); 
      __pyx_t_43 = PyTuple_GET_ITEM(sequence, 41); 
      __pyx_t_44 = PyTuple_GET_ITEM(sequence, 42); 
      __pyx_t_45 = PyTuple_GET_ITEM(sequence, 43); 
      __pyx_t_46 = PyTuple_GET_ITEM(sequence, 44); 
      __pyx_t_47 = PyTuple_GET_ITEM(sequence, 45); 
      __pyx_t_48 = PyTuple_GET_ITEM(sequence, 46); 
      __pyx_t_49 = PyTuple_GET_ITEM(sequence, 47); 
      __pyx_t_50 = PyTuple_GET_ITEM(sequence, 48); 
      __pyx_t_51 = PyTuple_GET_ITEM(sequence, 49); 
      __pyx_t_52 = PyTuple_GET_ITEM(sequence, 50); 
      __pyx_t_53 = PyTuple_GET_ITEM(sequence, 51); 
      __pyx_t_54 = PyTuple_GET_ITEM(sequence, 52); 
      __pyx_t_55 = PyTuple_GET_ITEM(sequence, 53); 
      __pyx_t_56 = PyTuple_GET_ITEM(sequence, 54); 
      __pyx_t_57 = PyTuple_GET_ITEM(sequence, 55); 
      __pyx_t_58 = PyTuple_GET_ITEM(sequence, 56); 
      __pyx_t_59 = PyTuple_GET_ITEM(sequence, 57); 
      __pyx_t_60 = PyTuple_GET_ITEM(sequence, 58); 
      __pyx_t_61 = PyTuple_GET_ITEM(sequence, 59); 
      __pyx_t_62 = PyTuple_GET_ITEM(sequence, 60); 
      __pyx_t_63 = PyTuple_GET_ITEM(sequence, 61); 
      __pyx_t_64 = PyTuple_GET_ITEM(sequence, 62); 
      __pyx_t_65 = PyTuple_GET_ITEM(sequence, 63); 
      __pyx_t_66 = PyTuple_GET_ITEM(sequence, 64); 
      __pyx_t_67 = PyTuple_GET_ITEM(sequence, 65); 
      __pyx_t_68 = PyTuple_GET_ITEM(sequence, 66); 
      __pyx_t_69 = PyTuple_GET_ITEM(sequence, 67); 
      __pyx_t_70 = PyTuple_GET_ITEM(sequence, 68); 
      __pyx_t_71 = PyTuple_GET_ITEM(sequence, 69); 
      __pyx_t_72 = PyTuple_GET_ITEM(sequence, 70); 
      __pyx_t_73 = PyTuple_GET_ITEM(sequence, 71); 
      __pyx_t_74 = PyTuple_GET_ITEM(sequence, 72); 
      __pyx_t_75 = PyTuple_GET_ITEM(sequence, 73); 
      __pyx_t_76 = PyTuple_GET_ITEM(sequence, 74); 
      __pyx_t_77 = PyTuple_GET_ITEM(sequence, 75); 
      __pyx_t_78 = PyTuple_GET_ITEM(sequence, 76); 
      __pyx_t_79 = PyTuple_GET_ITEM(sequence, 77); 
      __pyx_t_80 = PyTuple_GET_ITEM(sequence, 78); 
      __pyx_t_81 = PyTuple_GET_ITEM(sequence, 79); 
      __pyx_t_82 = PyTuple_GET_ITEM(sequence, 80); 
    } else {
      __pyx_t_5 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyList_GET_ITEM(sequence, 1); 
      __pyx_t_3 = PyList_GET_ITEM(sequence, 2); 
      __pyx_t_7 = PyList_GET_ITEM(sequence, 3); 
      __pyx_t_6 = PyList_GET_ITEM(sequence, 4); 
      __pyx_t_1 = PyList_GET_ITEM(sequence, 5); 
      __pyx_t_8 = PyList_GET_ITEM(sequence, 6); 
      __pyx_t_9 = PyList_GET_ITEM(sequence, 7); 
      __pyx_t_10 = PyList_GET_ITEM(sequence, 8); 
      __pyx_t_11 = PyList_GET_ITEM(sequence, 9); 
      __pyx_t_12 = PyList_GET_ITEM(sequence, 10); 
      __pyx_t_13 = PyList_GET_ITEM(sequence, 11); 
      __pyx_t_14 = PyList_GET_ITEM(sequence, 12); 
      __pyx_t_15 = PyList_GET_ITEM(sequence, 13); 
      __pyx_t_16 = PyList_GET_ITEM(sequence, 14); 
      __pyx_t_17 = PyList_GET_ITEM(sequence, 15); 
      __pyx_t_18 = PyList_GET_ITEM(sequence, 16); 
      __pyx_t_19 = PyList_GET_ITEM(sequence, 17); 
      __pyx_t_20 = PyList_GET_ITEM(sequence, 18); 
      __pyx_t_21 = PyList_GET_ITEM(sequence, 19); 
      __pyx_t_22 = PyList_GET_ITEM(sequence, 20); 
      __pyx_t_23 = PyList_GET_ITEM(sequence, 21); 
      __pyx_t_24 = PyList_GET_ITEM(sequence, 22); 
      __pyx_t_25 = PyList_GET_ITEM(sequence, 23); 
      __pyx_t_26 = PyList_GET_ITEM(sequence, 24); 
      __pyx_t_27 = PyList_GET_ITEM(sequence, 25); 
      __pyx_t_28 = PyList_GET_ITEM(sequence, 26); 
      __pyx_t_29 = PyList_GET_ITEM(sequence, 27); 
      __pyx_t_30 = PyList_GET_ITEM(sequence, 28); 
      __pyx_t_31 = PyList_GET_ITEM(sequence, 29); 
      __pyx_t_32 = PyList_GET_ITEM(sequence, 30); 
      __pyx_t_33 = PyList_GET_ITEM(sequence, 31); 
      __pyx_t_34 = PyList_GET_ITEM(sequence, 32); 
      __pyx_t_35 = PyList_GET_ITEM(sequence, 33); 
      __pyx_t_36 = PyList_GET_ITEM(sequence, 34); 
      __pyx_t_37 = PyList_GET_ITEM(sequence, 35); 
      __pyx_t_38 = PyList_GET_ITEM(sequence, 36); 
      __pyx_t_39 = PyList_GET_ITEM(sequence, 37); 
      __pyx_t_40 = PyList_GET_ITEM(sequence, 38); 
      __pyx_t_41 = PyList_GET_ITEM(sequence, 39); 
      __pyx_t_42 = PyList_GET_ITEM(sequence, 40); 
      __pyx_t_43 = PyList_GET_ITEM(sequence, 41); 
      __pyx_t_44 = PyList_GET_ITEM(sequence, 42); 
      __pyx_t_45 = PyList_GET_ITEM(sequence, 43); 
      __pyx_t_46 = PyList_GET_ITEM(sequence, 44); 
      __pyx_t_47 = PyList_GET_ITEM(sequence, 45); 
      __pyx_t_48 = PyList_GET_ITEM(sequence, 46); 
      __pyx_t_49 = PyList_GET_ITEM(sequence, 47); 
      __pyx_t_50 = PyList_GET_ITEM(sequence, 48); 
      __pyx_t_51 = PyList_GET_ITEM(sequence, 49); 
      __pyx_t_52 = PyList_GET_ITEM(sequence, 50); 
      __pyx_t_53 = PyList_GET_ITEM(sequence, 51); 
      __pyx_t_54 = PyList_GET_ITEM(sequence, 52); 
      __pyx_t_55 = PyList_GET_ITEM(sequence, 53); 
      __pyx_t_56 = PyList_GET_ITEM(sequence, 54); 
      __pyx_t_57 = PyList_GET_ITEM(sequence, 55); 
      __pyx_t_58 = PyList_GET_ITEM(sequence, 56); 
      __pyx_t_59 = PyList_GET_ITEM(sequence, 57); 
      __pyx_t_60 = PyList_GET_ITEM(sequence, 58); 
      __pyx_t_61 = PyList_GET_ITEM(sequence, 59); 
      __pyx_t_62 = PyList_GET_ITEM(sequence, 60); 
      __pyx_t_63 = PyList_GET_ITEM(sequence, 61); 
      __pyx_t_64 = PyList_GET_ITEM(sequence, 62); 
      __pyx_t_65 = PyList_GET_ITEM(sequence, 63); 
      __pyx_t_66 = PyList_GET_ITEM(sequence, 64); 
      __pyx_t_67 = PyList_GET_ITEM(sequence, 65); 
      __pyx_t_68 = PyList_GET_ITEM(sequence, 66); 
      __pyx_t_69 = PyList_GET_ITEM(sequence, 67); 
      __pyx_t_70 = PyList_GET_ITEM(sequence, 68); 
      __pyx_t_71 = PyList_GET_ITEM(sequence, 69); 
      __pyx_t_72 = PyList_GET_ITEM(sequence, 70); 
      __pyx_t_73 = PyList_GET_ITEM(sequence, 71); 
      __pyx_t_74 = PyList_GET_ITEM(sequence, 72); 
      __pyx_t_75 = PyList_GET_ITEM(sequence, 73); 
      __pyx_t_76 = PyList_GET_ITEM(sequence, 74); 
      __pyx_t_77 = PyList_GET_ITEM(sequence, 75); 
      __pyx_t_78 = PyList_GET_ITEM(sequence, 76); 
      __pyx_t_79 = PyList_GET_ITEM(sequence, 77); 
      __pyx_t_80 = PyList_GET_ITEM(sequence, 78); 
      __pyx_t_81 = PyList_GET_ITEM(sequence, 79); 
      __pyx_t_82 = PyList_GET_ITEM(sequence, 80); 
    }
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_8);
    __Pyx_INCREF(__pyx_t_9);
    __Pyx_INCREF(__pyx_t_10);
    __Pyx_INCREF(__pyx_t_11);
    __Pyx_INCREF(__pyx_t_12);
    __Pyx_INCREF(__pyx_t_13);
    __Pyx_INCREF(__pyx_t_14);
    __Pyx_INCREF(__pyx_t_15);
    __Pyx_INCREF(__pyx_t_16);
    __Pyx_INCREF(__pyx_t_17);
    __Pyx_INCREF(__pyx_t_18);
    __Pyx_INCREF(__pyx_t_19);
    __Pyx_INCREF(__pyx_t_20);
    __Pyx_INCREF(__pyx_t_21);
    __Pyx_INCREF(__pyx_t_22);
    __Pyx_INCREF(__pyx_t_23);
    __Pyx_INCREF(__pyx_t_24);
    __Pyx_INCREF(__pyx_t_25);
    __Pyx_INCREF(__pyx_t_26);
    __Pyx_INCREF(__pyx_t_27);
    __Pyx_INCREF(__pyx_t_28);
    __Pyx_INCREF(__pyx_t_29);
    __Pyx_INCREF(__pyx_t_30);
    __Pyx_INCREF(__pyx_t_31);
    __Pyx_INCREF(__pyx_t_32);
    __Pyx_INCREF(__pyx_t_33);
    __Pyx_INCREF(__pyx_t_34);
    __Pyx_INCREF(__pyx_t_35);
    __Pyx_INCREF(__pyx_t_36);
    __Pyx_INCREF(__pyx_t_37);
    __Pyx_INCREF(__pyx_t_38);
    __Pyx_INCREF(__pyx_t_39);
    __Pyx_INCREF(__pyx_t_40);
    __Pyx_INCREF(__pyx_t_41);
    __Pyx_INCREF(__pyx_t_42);
    __Pyx_INCREF(__pyx_t_43);
    __Pyx_INCREF(__pyx_t_44);
    __Pyx_INCREF(__pyx_t_45);
    __Pyx_INCREF(__pyx_t_46);
    __Pyx_INCREF(__pyx_t_47);
    __Pyx_INCREF(__pyx_t_48);
    __Pyx_INCREF(__pyx_t_49);
    __Pyx_INCREF(__pyx_t_50);
    __Pyx_INCREF(__pyx_t_51);
    __Pyx_INCREF(__pyx_t_52);
    __Pyx_INCREF(__pyx_t_53);
    __Pyx_INCREF(__pyx_t_54);
    __Pyx_INCREF(__pyx_t_55);
    __Pyx_INCREF(__pyx_t_56);
    __Pyx_INCREF(__pyx_t_57);
    __Pyx_INCREF(__pyx_t_58);
    __Pyx_INCREF(__pyx_t_59);
    __Pyx_INCREF(__pyx_t_60);
    __Pyx_INCREF(__pyx_t_61);
    __Pyx_INCREF(__pyx_t_62);
    __Pyx_INCREF(__pyx_t_63);
    __Pyx_INCREF(__pyx_t_64);
    __Pyx_INCREF(__pyx_t_65);
    __Pyx_INCREF(__pyx_t_66);
    __Pyx_INCREF(__pyx_t_67);
    __Pyx_INCREF(__pyx_t_68);
    __Pyx_INCREF(__pyx_t_69);
    __Pyx_INCREF(__pyx_t_70);
    __Pyx_INCREF(__pyx_t_71);
    __Pyx_INCREF(__pyx_t_72);
    __Pyx_INCREF(__pyx_t_73);
    __Pyx_INCREF(__pyx_t_74);
    __Pyx_INCREF(__pyx_t_75);
    __Pyx_INCREF(__pyx_t_76);
    __Pyx_INCREF(__pyx_t_77);
    __Pyx_INCREF(__pyx_t_78);
    __Pyx_INCREF(__pyx_t_79);
    __Pyx_INCREF(__pyx_t_80);
    __Pyx_INCREF(__pyx_t_81);
    __Pyx_INCREF(__pyx_t_82);
    #else
    {
      Py_ssize_t i;
      PyObject** temps[81] = {&__pyx_t_5,&__pyx_t_2,&__pyx_t_3,&__pyx_t_7,&__pyx_t_6,&__pyx_t_1,&__pyx_t_8,&__pyx_t_9,&__pyx_t_10,&__pyx_t_11,&__pyx_t_12,&__pyx_t_13,&__pyx_t_14,&__pyx_t_15,&__pyx_t_16,&__pyx_t_17,&__pyx_t_18,&__pyx_t_19,&__pyx_t_20,&__pyx_t_21,&__pyx_t_22,&__pyx_t_23,&__pyx_t_24,&__pyx_t_25,&__pyx_t_26,&__pyx_t_27,&__pyx_t_28,&__pyx_t_29,&__pyx_t_30,&__pyx_t_31,&__pyx_t_32,&__pyx_t_33,&__pyx_t_34,&__pyx_t_35,&__pyx_t_36,&__pyx_t_37,&__pyx_t_38,&__pyx_t_39,&__pyx_t_40,&__pyx_t_41,&__pyx_t_42,&__pyx_t_43,&__pyx_t_44,&__pyx_t_45,&__pyx_t_46,&__pyx_t_47,&__pyx_t_48,&__pyx_t_49,&__pyx_t_50,&__pyx_t_51,&__pyx_t_52,&__pyx_t_53,&__pyx_t_54,&__pyx_t_55,&__pyx_t_56,&__pyx_t_57,&__pyx_t_58,&__pyx_t_59,&__pyx_t_60,&__pyx_t_61,&__pyx_t_62,&__pyx_t_63,&__pyx_t_64,&__pyx_t_65,&__pyx_t_66,&__pyx_t_67,&__pyx_t_68,&__pyx_t_69,&__pyx_t_70,&__pyx_t_71,&__pyx_t_72,&__pyx_t_73,&__pyx_t_74,&__pyx_t_75,&__pyx_t_76,&__pyx_t_77,&__pyx_t_78,&__pyx_t_79,&__pyx_t_80,&__pyx_t_81,&__pyx_t_82};
      for (i=0; i < 81; i++) {
        PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 51, __pyx_L1_error)
        __Pyx_GOTREF(item);
        *(temps[i]) = item;
      }
    }
    #endif
  } else {
    Py_ssize_t index = -1;
    PyObject** temps[81] = {&__pyx_t_5,&__pyx_t_2,&__pyx_t_3,&__pyx_t_7,&__pyx_t_6,&__pyx_t_1,&__pyx_t_8,&__pyx_t_9,&__pyx_t_10,&__pyx_t_11,&__pyx_t_12,&__pyx_t_13,&__pyx_t_14,&__pyx_t_15,&__pyx_t_16,&__pyx_t_17,&__pyx_t_18,&__pyx_t_19,&__pyx_t_20,&__pyx_t_21,&__pyx_t_22,&__pyx_t_23,&__pyx_t_24,&__pyx_t_25,&__pyx_t_26,&__pyx_t_27,&__pyx_t_28,&__pyx_t_29,&__pyx_t_30,&__pyx_t_31,&__pyx_t_32,&__pyx_t_33,&__pyx_t_34,&__pyx_t_35,&__pyx_t_36,&__pyx_t_37,&__pyx_t_38,&__pyx_t_39,&__pyx_t_40,&__pyx_t_41,&__pyx_t_42,&__pyx_t_43,&__pyx_t_44,&__pyx_t_45,&__pyx_t_46,&__pyx_t_47,&__pyx_t_48,&__pyx_t_49,&__pyx_t_50,&__pyx_t_51,&__pyx_t_52,&__pyx_t_53,&__pyx_t_54,&__pyx_t_55,&__pyx_t_56,&__pyx_t_57,&__pyx_t_58,&__pyx_t_59,&__pyx_t_60,&__pyx_t_61,&__pyx_t_62,&__pyx_t_63,&__pyx_t_64,&__pyx_t_65,&__pyx_t_66,&__pyx_t_67,&__pyx_t_68,&__pyx_t_69,&__pyx_t_70,&__pyx_t_71,&__pyx_t_72,&__pyx_t_73,&__pyx_t_74,&__pyx_t_75,&__pyx_t_76,&__pyx_t_77,&__pyx_t_78,&__pyx_t_79,&__pyx_t_80,&__pyx_t_81,&__pyx_t_82};
    __pyx_t_83 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_83)) __PYX_ERR(0, 51, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_83);
    __pyx_t_84 = Py_TYPE(__pyx_t_83)->tp_iternext;
    for (index=0; index < 81; index++) {
      PyObject* item = __pyx_t_84(__pyx_t_83); if (unlikely(!item)) goto __pyx_L2_unpacking_failed;
      __Pyx_GOTREF(item);
      *(temps[index]) = item;
    }
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_84(__pyx_t_83), 81) < 0) __PYX_ERR(0, 51, __pyx_L1_error)
    __pyx_t_84 = NULL;
    __Pyx_DECREF(__pyx_t_83); __pyx_t_83 = 0;
    goto __pyx_L3_unpacking_done;
    __pyx_L2_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_83); __pyx_t_83 = 0;
    __pyx_t_84 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 51, __pyx_L1_error)
    __pyx_L3_unpacking_done:;
  }

  /* "cshogi/_cshogi.pyx":51
 * STARTING_SFEN = 'lnsgkgsnl/1r5b1/ppppppppp/9/9/9/PPPPPPPPP/1B5R1/LNSGKGSNL b - 1'
 * 
 * SQUARES = [             # <<<<<<<<<<<<<<
 * 	A1, B1, C1, D1, E1, F1, G1, H1, I1,
 * 	A2, B2, C2, D2, E2, F2, G2, H2, I2,
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_A1, __pyx_t_5) < 0) __PYX_ERR(0, 52, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_B1, __pyx_t_2) < 0) __PYX_ERR(0, 52, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_C1, __pyx_t_3) < 0) __PYX_ERR(0, 52, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_D1, __pyx_t_7) < 0) __PYX_ERR(0, 52, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_E1, __pyx_t_6) < 0) __PYX_ERR(0, 52, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_F1, __pyx_t_1) < 0) __PYX_ERR(0, 52, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_G1, __pyx_t_8) < 0) __PYX_ERR(0, 52, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_H1, __pyx_t_9) < 0) __PYX_ERR(0, 52, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_I1, __pyx_t_10) < 0) __PYX_ERR(0, 52, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_A2, __pyx_t_11) < 0) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_B2, __pyx_t_12) < 0) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_C2, __pyx_t_13) < 0) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_D2, __pyx_t_14) < 0) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_E2, __pyx_t_15) < 0) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_F2, __pyx_t_16) < 0) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_G2, __pyx_t_17) < 0) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_H2, __pyx_t_18) < 0) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_I2, __pyx_t_19) < 0) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_A3, __pyx_t_20) < 0) __PYX_ERR(0, 54, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_B3, __pyx_t_21) < 0) __PYX_ERR(0, 54, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_C3, __pyx_t_22) < 0) __PYX_ERR(0, 54, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_D3, __pyx_t_23) < 0) __PYX_ERR(0, 54, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_E3, __pyx_t_24) < 0) __PYX_ERR(0, 54, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_F3, __pyx_t_25) < 0) __PYX_ERR(0, 54, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_25); __pyx_t_25 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_G3, __pyx_t_26) < 0) __PYX_ERR(0, 54, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_26); __pyx_t_26 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_H3, __pyx_t_27) < 0) __PYX_ERR(0, 54, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_I3, __pyx_t_28) < 0) __PYX_ERR(0, 54, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_28); __pyx_t_28 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_A4, __pyx_t_29) < 0) __PYX_ERR(0, 55, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_B4, __pyx_t_30) < 0) __PYX_ERR(0, 55, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_C4, __pyx_t_31) < 0) __PYX_ERR(0, 55, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_31); __pyx_t_31 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_D4, __pyx_t_32) < 0) __PYX_ERR(0, 55, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_32); __pyx_t_32 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_E4, __pyx_t_33) < 0) __PYX_ERR(0, 55, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_33); __pyx_t_33 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_F4, __pyx_t_34) < 0) __PYX_ERR(0, 55, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_34); __pyx_t_34 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_G4, __pyx_t_35) < 0) __PYX_ERR(0, 55, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_35); __pyx_t_35 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_H4, __pyx_t_36) < 0) __PYX_ERR(0, 55, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_36); __pyx_t_36 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_I4, __pyx_t_37) < 0) __PYX_ERR(0, 55, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_37); __pyx_t_37 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_A5, __pyx_t_38) < 0) __PYX_ERR(0, 56, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_38); __pyx_t_38 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_B5, __pyx_t_39) < 0) __PYX_ERR(0, 56, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_C5, __pyx_t_40) < 0) __PYX_ERR(0, 56, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_D5, __pyx_t_41) < 0) __PYX_ERR(0, 56, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_41); __pyx_t_41 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_E5, __pyx_t_42) < 0) __PYX_ERR(0, 56, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_42); __pyx_t_42 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_F5, __pyx_t_43) < 0) __PYX_ERR(0, 56, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_43); __pyx_t_43 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_G5, __pyx_t_44) < 0) __PYX_ERR(0, 56, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_44); __pyx_t_44 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_H5, __pyx_t_45) < 0) __PYX_ERR(0, 56, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_45); __pyx_t_45 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_I5, __pyx_t_46) < 0) __PYX_ERR(0, 56, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_46); __pyx_t_46 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_A6, __pyx_t_47) < 0) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_47); __pyx_t_47 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_B6, __pyx_t_48) < 0) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_48); __pyx_t_48 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_C6, __pyx_t_49) < 0) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_49); __pyx_t_49 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_D6, __pyx_t_50) < 0) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_50); __pyx_t_50 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_E6, __pyx_t_51) < 0) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_51); __pyx_t_51 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_F6, __pyx_t_52) < 0) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_52); __pyx_t_52 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_G6, __pyx_t_53) < 0) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_53); __pyx_t_53 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_H6, __pyx_t_54) < 0) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_54); __pyx_t_54 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_I6, __pyx_t_55) < 0) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_55); __pyx_t_55 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_A7, __pyx_t_56) < 0) __PYX_ERR(0, 58, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_56); __pyx_t_56 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_B7, __pyx_t_57) < 0) __PYX_ERR(0, 58, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_57); __pyx_t_57 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_C7, __pyx_t_58) < 0) __PYX_ERR(0, 58, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_58); __pyx_t_58 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_D7, __pyx_t_59) < 0) __PYX_ERR(0, 58, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_59); __pyx_t_59 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_E7, __pyx_t_60) < 0) __PYX_ERR(0, 58, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_60); __pyx_t_60 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_F7, __pyx_t_61) < 0) __PYX_ERR(0, 58, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_61); __pyx_t_61 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_G7, __pyx_t_62) < 0) __PYX_ERR(0, 58, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_62); __pyx_t_62 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_H7, __pyx_t_63) < 0) __PYX_ERR(0, 58, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_63); __pyx_t_63 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_I7, __pyx_t_64) < 0) __PYX_ERR(0, 58, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_64); __pyx_t_64 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_A8, __pyx_t_65) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_65); __pyx_t_65 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_B8, __pyx_t_66) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_66); __pyx_t_66 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_C8, __pyx_t_67) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_67); __pyx_t_67 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_D8, __pyx_t_68) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_68); __pyx_t_68 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_E8, __pyx_t_69) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_69); __pyx_t_69 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_F8, __pyx_t_70) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_70); __pyx_t_70 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_G8, __pyx_t_71) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_71); __pyx_t_71 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_H8, __pyx_t_72) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_72); __pyx_t_72 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_I8, __pyx_t_73) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_73); __pyx_t_73 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_A9, __pyx_t_74) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_74); __pyx_t_74 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_B9, __pyx_t_75) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_75); __pyx_t_75 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_C9, __pyx_t_76) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_76); __pyx_t_76 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_D9, __pyx_t_77) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_77); __pyx_t_77 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_E9, __pyx_t_78) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_78); __pyx_t_78 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_F9, __pyx_t_79) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_79); __pyx_t_79 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_G9, __pyx_t_80) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_80); __pyx_t_80 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_H9, __pyx_t_81) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_81); __pyx_t_81 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_I9, __pyx_t_82) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "cshogi/_cshogi.pyx":63
 * ] = range(81)
 * 
 * SQUARE_NAMES = [             # <<<<<<<<<<<<<<
 * 	'1a', '1b', '1c', '1d', '1e', '1f', '1g', '1h', '1i',
 * 	'2a', '2b', '2c', '2d', '2e', '2f', '2g', '2h', '2i',
 */
  __pyx_t_4 = PyList_New(81); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_kp_s_1a);
  __Pyx_GIVEREF(__pyx_kp_s_1a);
  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_kp_s_1a);
  __Pyx_INCREF(__pyx_kp_s_1b);
  __Pyx_GIVEREF(__pyx_kp_s_1b);
  PyList_SET_ITEM(__pyx_t_4, 1, __pyx_kp_s_1b);
  __Pyx_INCREF(__pyx_kp_s_1c);
  __Pyx_GIVEREF(__pyx_kp_s_1c);
  PyList_SET_ITEM(__pyx_t_4, 2, __pyx_kp_s_1c);
  __Pyx_INCREF(__pyx_kp_s_1d);
  __Pyx_GIVEREF(__pyx_kp_s_1d);
  PyList_SET_ITEM(__pyx_t_4, 3, __pyx_kp_s_1d);
  __Pyx_INCREF(__pyx_kp_s_1e);
  __Pyx_GIVEREF(__pyx_kp_s_1e);
  PyList_SET_ITEM(__pyx_t_4, 4, __pyx_kp_s_1e);
  __Pyx_INCREF(__pyx_kp_s_1f);
  __Pyx_GIVEREF(__pyx_kp_s_1f);
  PyList_SET_ITEM(__pyx_t_4, 5, __pyx_kp_s_1f);
  __Pyx_INCREF(__pyx_kp_s_1g);
  __Pyx_GIVEREF(__pyx_kp_s_1g);
  PyList_SET_ITEM(__pyx_t_4, 6, __pyx_kp_s_1g);
  __Pyx_INCREF(__pyx_kp_s_1h);
  __Pyx_GIVEREF(__pyx_kp_s_1h);
  PyList_SET_ITEM(__pyx_t_4, 7, __pyx_kp_s_1h);
  __Pyx_INCREF(__pyx_kp_s_1i);
  __Pyx_GIVEREF(__pyx_kp_s_1i);
  PyList_SET_ITEM(__pyx_t_4, 8, __pyx_kp_s_1i);
  __Pyx_INCREF(__pyx_kp_s_2a);
  __Pyx_GIVEREF(__pyx_kp_s_2a);
  PyList_SET_ITEM(__pyx_t_4, 9, __pyx_kp_s_2a);
  __Pyx_INCREF(__pyx_kp_s_2b);
  __Pyx_GIVEREF(__pyx_kp_s_2b);
  PyList_SET_ITEM(__pyx_t_4, 10, __pyx_kp_s_2b);
  __Pyx_INCREF(__pyx_kp_s_2c);
  __Pyx_GIVEREF(__pyx_kp_s_2c);
  PyList_SET_ITEM(__pyx_t_4, 11, __pyx_kp_s_2c);
  __Pyx_INCREF(__pyx_kp_s_2d);
  __Pyx_GIVEREF(__pyx_kp_s_2d);
  PyList_SET_ITEM(__pyx_t_4, 12, __pyx_kp_s_2d);
  __Pyx_INCREF(__pyx_kp_s_2e);
  __Pyx_GIVEREF(__pyx_kp_s_2e);
  PyList_SET_ITEM(__pyx_t_4, 13, __pyx_kp_s_2e);
  __Pyx_INCREF(__pyx_kp_s_2f);
  __Pyx_GIVEREF(__pyx_kp_s_2f);
  PyList_SET_ITEM(__pyx_t_4, 14, __pyx_kp_s_2f);
  __Pyx_INCREF(__pyx_kp_s_2g);
  __Pyx_GIVEREF(__pyx_kp_s_2g);
  PyList_SET_ITEM(__pyx_t_4, 15, __pyx_kp_s_2g);
  __Pyx_INCREF(__pyx_kp_s_2h);
  __Pyx_GIVEREF(__pyx_kp_s_2h);
  PyList_SET_ITEM(__pyx_t_4, 16, __pyx_kp_s_2h);
  __Pyx_INCREF(__pyx_kp_s_2i);
  __Pyx_GIVEREF(__pyx_kp_s_2i);
  PyList_SET_ITEM(__pyx_t_4, 17, __pyx_kp_s_2i);
  __Pyx_INCREF(__pyx_kp_s_3a);
  __Pyx_GIVEREF(__pyx_kp_s_3a);
  PyList_SET_ITEM(__pyx_t_4, 18, __pyx_kp_s_3a);
  __Pyx_INCREF(__pyx_kp_s_3b);
  __Pyx_GIVEREF(__pyx_kp_s_3b);
  PyList_SET_ITEM(__pyx_t_4, 19, __pyx_kp_s_3b);
  __Pyx_INCREF(__pyx_kp_s_3c);
  __Pyx_GIVEREF(__pyx_kp_s_3c);
  PyList_SET_ITEM(__pyx_t_4, 20, __pyx_kp_s_3c);
  __Pyx_INCREF(__pyx_kp_s_3d);
  __Pyx_GIVEREF(__pyx_kp_s_3d);
  PyList_SET_ITEM(__pyx_t_4, 21, __pyx_kp_s_3d);
  __Pyx_INCREF(__pyx_kp_s_3e);
  __Pyx_GIVEREF(__pyx_kp_s_3e);
  PyList_SET_ITEM(__pyx_t_4, 22, __pyx_kp_s_3e);
  __Pyx_INCREF(__pyx_kp_s_3f);
  __Pyx_GIVEREF(__pyx_kp_s_3f);
  PyList_SET_ITEM(__pyx_t_4, 23, __pyx_kp_s_3f);
  __Pyx_INCREF(__pyx_kp_s_3g);
  __Pyx_GIVEREF(__pyx_kp_s_3g);
  PyList_SET_ITEM(__pyx_t_4, 24, __pyx_kp_s_3g);
  __Pyx_INCREF(__pyx_kp_s_3h);
  __Pyx_GIVEREF(__pyx_kp_s_3h);
  PyList_SET_ITEM(__pyx_t_4, 25, __pyx_kp_s_3h);
  __Pyx_INCREF(__pyx_kp_s_3i);
  __Pyx_GIVEREF(__pyx_kp_s_3i);
  PyList_SET_ITEM(__pyx_t_4, 26, __pyx_kp_s_3i);
  __Pyx_INCREF(__pyx_kp_s_4a);
  __Pyx_GIVEREF(__pyx_kp_s_4a);
  PyList_SET_ITEM(__pyx_t_4, 27, __pyx_kp_s_4a);
  __Pyx_INCREF(__pyx_kp_s_4b);
  __Pyx_GIVEREF(__pyx_kp_s_4b);
  PyList_SET_ITEM(__pyx_t_4, 28, __pyx_kp_s_4b);
  __Pyx_INCREF(__pyx_kp_s_4c);
  __Pyx_GIVEREF(__pyx_kp_s_4c);
  PyList_SET_ITEM(__pyx_t_4, 29, __pyx_kp_s_4c);
  __Pyx_INCREF(__pyx_kp_s_4d);
  __Pyx_GIVEREF(__pyx_kp_s_4d);
  PyList_SET_ITEM(__pyx_t_4, 30, __pyx_kp_s_4d);
  __Pyx_INCREF(__pyx_kp_s_4e);
  __Pyx_GIVEREF(__pyx_kp_s_4e);
  PyList_SET_ITEM(__pyx_t_4, 31, __pyx_kp_s_4e);
  __Pyx_INCREF(__pyx_kp_s_4f);
  __Pyx_GIVEREF(__pyx_kp_s_4f);
  PyList_SET_ITEM(__pyx_t_4, 32, __pyx_kp_s_4f);
  __Pyx_INCREF(__pyx_kp_s_4g);
  __Pyx_GIVEREF(__pyx_kp_s_4g);
  PyList_SET_ITEM(__pyx_t_4, 33, __pyx_kp_s_4g);
  __Pyx_INCREF(__pyx_kp_s_4h);
  __Pyx_GIVEREF(__pyx_kp_s_4h);
  PyList_SET_ITEM(__pyx_t_4, 34, __pyx_kp_s_4h);
  __Pyx_INCREF(__pyx_kp_s_4i);
  __Pyx_GIVEREF(__pyx_kp_s_4i);
  PyList_SET_ITEM(__pyx_t_4, 35, __pyx_kp_s_4i);
  __Pyx_INCREF(__pyx_kp_s_5a);
  __Pyx_GIVEREF(__pyx_kp_s_5a);
  PyList_SET_ITEM(__pyx_t_4, 36, __pyx_kp_s_5a);
  __Pyx_INCREF(__pyx_kp_s_5b);
  __Pyx_GIVEREF(__pyx_kp_s_5b);
  PyList_SET_ITEM(__pyx_t_4, 37, __pyx_kp_s_5b);
  __Pyx_INCREF(__pyx_kp_s_5c);
  __Pyx_GIVEREF(__pyx_kp_s_5c);
  PyList_SET_ITEM(__pyx_t_4, 38, __pyx_kp_s_5c);
  __Pyx_INCREF(__pyx_kp_s_5d);
  __Pyx_GIVEREF(__pyx_kp_s_5d);
  PyList_SET_ITEM(__pyx_t_4, 39, __pyx_kp_s_5d);
  __Pyx_INCREF(__pyx_kp_s_5e);
  __Pyx_GIVEREF(__pyx_kp_s_5e);
  PyList_SET_ITEM(__pyx_t_4, 40, __pyx_kp_s_5e);
  __Pyx_INCREF(__pyx_kp_s_5f);
  __Pyx_GIVEREF(__pyx_kp_s_5f);
  PyList_SET_ITEM(__pyx_t_4, 41, __pyx_kp_s_5f);
  __Pyx_INCREF(__pyx_kp_s_5g);
  __Pyx_GIVEREF(__pyx_kp_s_5g);
  PyList_SET_ITEM(__pyx_t_4, 42, __pyx_kp_s_5g);
  __Pyx_INCREF(__pyx_kp_s_5h);
  __Pyx_GIVEREF(__pyx_kp_s_5h);
  PyList_SET_ITEM(__pyx_t_4, 43, __pyx_kp_s_5h);
  __Pyx_INCREF(__pyx_kp_s_5i);
  __Pyx_GIVEREF(__pyx_kp_s_5i);
  PyList_SET_ITEM(__pyx_t_4, 44, __pyx_kp_s_5i);
  __Pyx_INCREF(__pyx_kp_s_6a);
  __Pyx_GIVEREF(__pyx_kp_s_6a);
  PyList_SET_ITEM(__pyx_t_4, 45, __pyx_kp_s_6a);
  __Pyx_INCREF(__pyx_kp_s_6b);
  __Pyx_GIVEREF(__pyx_kp_s_6b);
  PyList_SET_ITEM(__pyx_t_4, 46, __pyx_kp_s_6b);
  __Pyx_INCREF(__pyx_kp_s_6c);
  __Pyx_GIVEREF(__pyx_kp_s_6c);
  PyList_SET_ITEM(__pyx_t_4, 47, __pyx_kp_s_6c);
  __Pyx_INCREF(__pyx_kp_s_6d);
  __Pyx_GIVEREF(__pyx_kp_s_6d);
  PyList_SET_ITEM(__pyx_t_4, 48, __pyx_kp_s_6d);
  __Pyx_INCREF(__pyx_kp_s_6e);
  __Pyx_GIVEREF(__pyx_kp_s_6e);
  PyList_SET_ITEM(__pyx_t_4, 49, __pyx_kp_s_6e);
  __Pyx_INCREF(__pyx_kp_s_6f);
  __Pyx_GIVEREF(__pyx_kp_s_6f);
  PyList_SET_ITEM(__pyx_t_4, 50, __pyx_kp_s_6f);
  __Pyx_INCREF(__pyx_kp_s_6g);
  __Pyx_GIVEREF(__pyx_kp_s_6g);
  PyList_SET_ITEM(__pyx_t_4, 51, __pyx_kp_s_6g);
  __Pyx_INCREF(__pyx_kp_s_6h);
  __Pyx_GIVEREF(__pyx_kp_s_6h);
  PyList_SET_ITEM(__pyx_t_4, 52, __pyx_kp_s_6h);
  __Pyx_INCREF(__pyx_kp_s_6i);
  __Pyx_GIVEREF(__pyx_kp_s_6i);
  PyList_SET_ITEM(__pyx_t_4, 53, __pyx_kp_s_6i);
  __Pyx_INCREF(__pyx_kp_s_7a);
  __Pyx_GIVEREF(__pyx_kp_s_7a);
  PyList_SET_ITEM(__pyx_t_4, 54, __pyx_kp_s_7a);
  __Pyx_INCREF(__pyx_kp_s_7b);
  __Pyx_GIVEREF(__pyx_kp_s_7b);
  PyList_SET_ITEM(__pyx_t_4, 55, __pyx_kp_s_7b);
  __Pyx_INCREF(__pyx_kp_s_7c);
  __Pyx_GIVEREF(__pyx_kp_s_7c);
  PyList_SET_ITEM(__pyx_t_4, 56, __pyx_kp_s_7c);
  __Pyx_INCREF(__pyx_kp_s_7d);
  __Pyx_GIVEREF(__pyx_kp_s_7d);
  PyList_SET_ITEM(__pyx_t_4, 57, __pyx_kp_s_7d);
  __Pyx_INCREF(__pyx_kp_s_7e);
  __Pyx_GIVEREF(__pyx_kp_s_7e);
  PyList_SET_ITEM(__pyx_t_4, 58, __pyx_kp_s_7e);
  __Pyx_INCREF(__pyx_kp_s_7f);
  __Pyx_GIVEREF(__pyx_kp_s_7f);
  PyList_SET_ITEM(__pyx_t_4, 59, __pyx_kp_s_7f);
  __Pyx_INCREF(__pyx_kp_s_7g);
  __Pyx_GIVEREF(__pyx_kp_s_7g);
  PyList_SET_ITEM(__pyx_t_4, 60, __pyx_kp_s_7g);
  __Pyx_INCREF(__pyx_kp_s_7h);
  __Pyx_GIVEREF(__pyx_kp_s_7h);
  PyList_SET_ITEM(__pyx_t_4, 61, __pyx_kp_s_7h);
  __Pyx_INCREF(__pyx_kp_s_7i);
  __Pyx_GIVEREF(__pyx_kp_s_7i);
  PyList_SET_ITEM(__pyx_t_4, 62, __pyx_kp_s_7i);
  __Pyx_INCREF(__pyx_kp_s_8a);
  __Pyx_GIVEREF(__pyx_kp_s_8a);
  PyList_SET_ITEM(__pyx_t_4, 63, __pyx_kp_s_8a);
  __Pyx_INCREF(__pyx_kp_s_8b);
  __Pyx_GIVEREF(__pyx_kp_s_8b);
  PyList_SET_ITEM(__pyx_t_4, 64, __pyx_kp_s_8b);
  __Pyx_INCREF(__pyx_kp_s_8c);
  __Pyx_GIVEREF(__pyx_kp_s_8c);
  PyList_SET_ITEM(__pyx_t_4, 65, __pyx_kp_s_8c);
  __Pyx_INCREF(__pyx_kp_s_8d);
  __Pyx_GIVEREF(__pyx_kp_s_8d);
  PyList_SET_ITEM(__pyx_t_4, 66, __pyx_kp_s_8d);
  __Pyx_INCREF(__pyx_kp_s_8e);
  __Pyx_GIVEREF(__pyx_kp_s_8e);
  PyList_SET_ITEM(__pyx_t_4, 67, __pyx_kp_s_8e);
  __Pyx_INCREF(__pyx_kp_s_8f);
  __Pyx_GIVEREF(__pyx_kp_s_8f);
  PyList_SET_ITEM(__pyx_t_4, 68, __pyx_kp_s_8f);
  __Pyx_INCREF(__pyx_kp_s_8g);
  __Pyx_GIVEREF(__pyx_kp_s_8g);
  PyList_SET_ITEM(__pyx_t_4, 69, __pyx_kp_s_8g);
  __Pyx_INCREF(__pyx_kp_s_8h);
  __Pyx_GIVEREF(__pyx_kp_s_8h);
  PyList_SET_ITEM(__pyx_t_4, 70, __pyx_kp_s_8h);
  __Pyx_INCREF(__pyx_kp_s_8i);
  __Pyx_GIVEREF(__pyx_kp_s_8i);
  PyList_SET_ITEM(__pyx_t_4, 71, __pyx_kp_s_8i);
  __Pyx_INCREF(__pyx_kp_s_9a);
  __Pyx_GIVEREF(__pyx_kp_s_9a);
  PyList_SET_ITEM(__pyx_t_4, 72, __pyx_kp_s_9a);
  __Pyx_INCREF(__pyx_kp_s_9b);
  __Pyx_GIVEREF(__pyx_kp_s_9b);
  PyList_SET_ITEM(__pyx_t_4, 73, __pyx_kp_s_9b);
  __Pyx_INCREF(__pyx_kp_s_9c);
  __Pyx_GIVEREF(__pyx_kp_s_9c);
  PyList_SET_ITEM(__pyx_t_4, 74, __pyx_kp_s_9c);
  __Pyx_INCREF(__pyx_kp_s_9d);
  __Pyx_GIVEREF(__pyx_kp_s_9d);
  PyList_SET_ITEM(__pyx_t_4, 75, __pyx_kp_s_9d);
  __Pyx_INCREF(__pyx_kp_s_9e);
  __Pyx_GIVEREF(__pyx_kp_s_9e);
  PyList_SET_ITEM(__pyx_t_4, 76, __pyx_kp_s_9e);
  __Pyx_INCREF(__pyx_kp_s_9f);
  __Pyx_GIVEREF(__pyx_kp_s_9f);
  PyList_SET_ITEM(__pyx_t_4, 77, __pyx_kp_s_9f);
  __Pyx_INCREF(__pyx_kp_s_9g);
  __Pyx_GIVEREF(__pyx_kp_s_9g);
  PyList_SET_ITEM(__pyx_t_4, 78, __pyx_kp_s_9g);
  __Pyx_INCREF(__pyx_kp_s_9h);
  __Pyx_GIVEREF(__pyx_kp_s_9h);
  PyList_SET_ITEM(__pyx_t_4, 79, __pyx_kp_s_9h);
  __Pyx_INCREF(__pyx_kp_s_9i);
  __Pyx_GIVEREF(__pyx_kp_s_9i);
  PyList_SET_ITEM(__pyx_t_4, 80, __pyx_kp_s_9i);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SQUARE_NAMES, __pyx_t_4) < 0) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "cshogi/_cshogi.pyx":75
 * ]
 * 
 * COLORS = [BLACK, WHITE] = range(2)             # <<<<<<<<<<<<<<
 * 
 * GAME_RESULTS = [
 */
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_COLORS, __pyx_t_4) < 0) __PYX_ERR(0, 75, __pyx_L1_error)
  if ((likely(PyTuple_CheckExact(__pyx_t_4))) || (PyList_CheckExact(__pyx_t_4))) {
    PyObject* sequence = __pyx_t_4;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 75, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_82 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_81 = PyTuple_GET_ITEM(sequence, 1); 
    } else {
      __pyx_t_82 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_81 = PyList_GET_ITEM(sequence, 1); 
    }
    __Pyx_INCREF(__pyx_t_82);
    __Pyx_INCREF(__pyx_t_81);
    #else
    __pyx_t_82 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 75, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_82);
    __pyx_t_81 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_81)) __PYX_ERR(0, 75, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_81);
    #endif
  } else {
    Py_ssize_t index = -1;
    __pyx_t_80 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_80)) __PYX_ERR(0, 75, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_80);
    __pyx_t_84 = Py_TYPE(__pyx_t_80)->tp_iternext;
    index = 0; __pyx_t_82 = __pyx_t_84(__pyx_t_80); if (unlikely(!__pyx_t_82)) goto __pyx_L4_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_82);
    index = 1; __pyx_t_81 = __pyx_t_84(__pyx_t_80); if (unlikely(!__pyx_t_81)) goto __pyx_L4_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_81);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_84(__pyx_t_80), 2) < 0) __PYX_ERR(0, 75, __pyx_L1_error)
    __pyx_t_84 = NULL;
    __Pyx_DECREF(__pyx_t_80); __pyx_t_80 = 0;
    goto __pyx_L5_unpacking_done;
    __pyx_L4_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_80); __pyx_t_80 = 0;
    __pyx_t_84 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 75, __pyx_L1_error)
    __pyx_L5_unpacking_done:;
  }
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BLACK, __pyx_t_82) < 0) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_WHITE, __pyx_t_81) < 0) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_81); __pyx_t_81 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "cshogi/_cshogi.pyx":79
 * GAME_RESULTS = [
 * 	DRAW, BLACK_WIN, WHITE_WIN,
 * ] = range(3)             # <<<<<<<<<<<<<<
 * 
 * PIECE_TYPES_WITH_NONE = [NONE,
 */
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__26, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAME_RESULTS, __pyx_t_4) < 0) __PYX_ERR(0, 77, __pyx_L1_error)
  if ((likely(PyTuple_CheckExact(__pyx_t_4))) || (PyList_CheckExact(__pyx_t_4))) {
    PyObject* sequence = __pyx_t_4;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 3)) {
      if (size > 3) __Pyx_RaiseTooManyValuesError(3);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 77, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_81 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_82 = PyTuple_GET_ITEM(sequence, 1); 
      __pyx_t_80 = PyTuple_GET_ITEM(sequence, 2); 
    } else {
      __pyx_t_81 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_82 = PyList_GET_ITEM(sequence, 1); 
      __pyx_t_80 = PyList_GET_ITEM(sequence, 2); 
    }
    __Pyx_INCREF(__pyx_t_81);
    __Pyx_INCREF(__pyx_t_82);
    __Pyx_INCREF(__pyx_t_80);
    #else
    __pyx_t_81 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_81)) __PYX_ERR(0, 77, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_81);
    __pyx_t_82 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 77, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_82);
    __pyx_t_80 = PySequence_ITEM(sequence, 2); if (unlikely(!__pyx_t_80)) __PYX_ERR(0, 77, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_80);
    #endif
  } else {
    Py_ssize_t index = -1;
    __pyx_t_79 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_79)) __PYX_ERR(0, 77, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_79);
    __pyx_t_84 = Py_TYPE(__pyx_t_79)->tp_iternext;
    index = 0; __pyx_t_81 = __pyx_t_84(__pyx_t_79); if (unlikely(!__pyx_t_81)) goto __pyx_L6_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_81);
    index = 1; __pyx_t_82 = __pyx_t_84(__pyx_t_79); if (unlikely(!__pyx_t_82)) goto __pyx_L6_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_82);
    index = 2; __pyx_t_80 = __pyx_t_84(__pyx_t_79); if (unlikely(!__pyx_t_80)) goto __pyx_L6_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_80);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_84(__pyx_t_79), 3) < 0) __PYX_ERR(0, 77, __pyx_L1_error)
    __pyx_t_84 = NULL;
    __Pyx_DECREF(__pyx_t_79); __pyx_t_79 = 0;
    goto __pyx_L7_unpacking_done;
    __pyx_L6_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_79); __pyx_t_79 = 0;
    __pyx_t_84 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 77, __pyx_L1_error)
    __pyx_L7_unpacking_done:;
  }

  /* "cshogi/_cshogi.pyx":77
 * COLORS = [BLACK, WHITE] = range(2)
 * 
 * GAME_RESULTS = [             # <<<<<<<<<<<<<<
 * 	DRAW, BLACK_WIN, WHITE_WIN,
 * ] = range(3)
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DRAW, __pyx_t_81) < 0) __PYX_ERR(0, 78, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_81); __pyx_t_81 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BLACK_WIN, __pyx_t_82) < 0) __PYX_ERR(0, 78, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_WHITE_WIN, __pyx_t_80) < 0) __PYX_ERR(0, 78, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_80); __pyx_t_80 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "cshogi/_cshogi.pyx":88
 * 	  PROM_PAWN, PROM_LANCE, PROM_KNIGHT, PROM_SILVER,
 * 	PROM_BISHOP,  PROM_ROOK,
 * ] = range(15)             # <<<<<<<<<<<<<<
 * 
 * PIECE_TYPES = [
 */
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__27, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 88, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PIECE_TYPES_WITH_NONE, __pyx_t_4) < 0) __PYX_ERR(0, 81, __pyx_L1_error)
  if ((likely(PyTuple_CheckExact(__pyx_t_4))) || (PyList_CheckExact(__pyx_t_4))) {
    PyObject* sequence = __pyx_t_4;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 15)) {
      if (size > 15) __Pyx_RaiseTooManyValuesError(15);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 81, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_80 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_82 = PyTuple_GET_ITEM(sequence, 1); 
      __pyx_t_81 = PyTuple_GET_ITEM(sequence, 2); 
      __pyx_t_79 = PyTuple_GET_ITEM(sequence, 3); 
      __pyx_t_78 = PyTuple_GET_ITEM(sequence, 4); 
      __pyx_t_77 = PyTuple_GET_ITEM(sequence, 5); 
      __pyx_t_76 = PyTuple_GET_ITEM(sequence, 6); 
      __pyx_t_75 = PyTuple_GET_ITEM(sequence, 7); 
      __pyx_t_74 = PyTuple_GET_ITEM(sequence, 8); 
      __pyx_t_73 = PyTuple_GET_ITEM(sequence, 9); 
      __pyx_t_72 = PyTuple_GET_ITEM(sequence, 10); 
      __pyx_t_71 = PyTuple_GET_ITEM(sequence, 11); 
      __pyx_t_70 = PyTuple_GET_ITEM(sequence, 12); 
      __pyx_t_69 = PyTuple_GET_ITEM(sequence, 13); 
      __pyx_t_68 = PyTuple_GET_ITEM(sequence, 14); 
    } else {
      __pyx_t_80 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_82 = PyList_GET_ITEM(sequence, 1); 
      __pyx_t_81 = PyList_GET_ITEM(sequence, 2); 
      __pyx_t_79 = PyList_GET_ITEM(sequence, 3); 
      __pyx_t_78 = PyList_GET_ITEM(sequence, 4); 
      __pyx_t_77 = PyList_GET_ITEM(sequence, 5); 
      __pyx_t_76 = PyList_GET_ITEM(sequence, 6); 
      __pyx_t_75 = PyList_GET_ITEM(sequence, 7); 
      __pyx_t_74 = PyList_GET_ITEM(sequence, 8); 
      __pyx_t_73 = PyList_GET_ITEM(sequence, 9); 
      __pyx_t_72 = PyList_GET_ITEM(sequence, 10); 
      __pyx_t_71 = PyList_GET_ITEM(sequence, 11); 
      __pyx_t_70 = PyList_GET_ITEM(sequence, 12); 
      __pyx_t_69 = PyList_GET_ITEM(sequence, 13); 
      __pyx_t_68 = PyList_GET_ITEM(sequence, 14); 
    }
    __Pyx_INCREF(__pyx_t_80);
    __Pyx_INCREF(__pyx_t_82);
    __Pyx_INCREF(__pyx_t_81);
    __Pyx_INCREF(__pyx_t_79);
    __Pyx_INCREF(__pyx_t_78);
    __Pyx_INCREF(__pyx_t_77);
    __Pyx_INCREF(__pyx_t_76);
    __Pyx_INCREF(__pyx_t_75);
    __Pyx_INCREF(__pyx_t_74);
    __Pyx_INCREF(__pyx_t_73);
    __Pyx_INCREF(__pyx_t_72);
    __Pyx_INCREF(__pyx_t_71);
    __Pyx_INCREF(__pyx_t_70);
    __Pyx_INCREF(__pyx_t_69);
    __Pyx_INCREF(__pyx_t_68);
    #else
    {
      Py_ssize_t i;
      PyObject** temps[15] = {&__pyx_t_80,&__pyx_t_82,&__pyx_t_81,&__pyx_t_79,&__pyx_t_78,&__pyx_t_77,&__pyx_t_76,&__pyx_t_75,&__pyx_t_74,&__pyx_t_73,&__pyx_t_72,&__pyx_t_71,&__pyx_t_70,&__pyx_t_69,&__pyx_t_68};
      for (i=0; i < 15; i++) {
        PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 81, __pyx_L1_error)
        __Pyx_GOTREF(item);
        *(temps[i]) = item;
      }
    }
    #endif
  } else {
    Py_ssize_t index = -1;
    PyObject** temps[15] = {&__pyx_t_80,&__pyx_t_82,&__pyx_t_81,&__pyx_t_79,&__pyx_t_78,&__pyx_t_77,&__pyx_t_76,&__pyx_t_75,&__pyx_t_74,&__pyx_t_73,&__pyx_t_72,&__pyx_t_71,&__pyx_t_70,&__pyx_t_69,&__pyx_t_68};
    __pyx_t_67 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_67)) __PYX_ERR(0, 81, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_67);
    __pyx_t_84 = Py_TYPE(__pyx_t_67)->tp_iternext;
    for (index=0; index < 15; index++) {
      PyObject* item = __pyx_t_84(__pyx_t_67); if (unlikely(!item)) goto __pyx_L8_unpacking_failed;
      __Pyx_GOTREF(item);
      *(temps[index]) = item;
    }
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_84(__pyx_t_67), 15) < 0) __PYX_ERR(0, 81, __pyx_L1_error)
    __pyx_t_84 = NULL;
    __Pyx_DECREF(__pyx_t_67); __pyx_t_67 = 0;
    goto __pyx_L9_unpacking_done;
    __pyx_L8_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_67); __pyx_t_67 = 0;
    __pyx_t_84 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 81, __pyx_L1_error)
    __pyx_L9_unpacking_done:;
  }

  /* "cshogi/_cshogi.pyx":81
 * ] = range(3)
 * 
 * PIECE_TYPES_WITH_NONE = [NONE,             # <<<<<<<<<<<<<<
 * 		   PAWN,      LANCE,      KNIGHT,      SILVER,
 * 		 BISHOP,       ROOK,
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NONE, __pyx_t_80) < 0) __PYX_ERR(0, 81, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_80); __pyx_t_80 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PAWN, __pyx_t_82) < 0) __PYX_ERR(0, 82, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LANCE, __pyx_t_81) < 0) __PYX_ERR(0, 82, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_81); __pyx_t_81 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KNIGHT, __pyx_t_79) < 0) __PYX_ERR(0, 82, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_79); __pyx_t_79 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SILVER, __pyx_t_78) < 0) __PYX_ERR(0, 82, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_78); __pyx_t_78 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BISHOP, __pyx_t_77) < 0) __PYX_ERR(0, 83, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_77); __pyx_t_77 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ROOK, __pyx_t_76) < 0) __PYX_ERR(0, 83, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_76); __pyx_t_76 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GOLD, __pyx_t_75) < 0) __PYX_ERR(0, 84, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_75); __pyx_t_75 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KING, __pyx_t_74) < 0) __PYX_ERR(0, 85, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_74); __pyx_t_74 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PROM_PAWN, __pyx_t_73) < 0) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_73); __pyx_t_73 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PROM_LANCE, __pyx_t_72) < 0) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_72); __pyx_t_72 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PROM_KNIGHT, __pyx_t_71) < 0) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_71); __pyx_t_71 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PROM_SILVER, __pyx_t_70) < 0) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_70); __pyx_t_70 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PROM_BISHOP, __pyx_t_69) < 0) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_69); __pyx_t_69 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PROM_ROOK, __pyx_t_68) < 0) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_68); __pyx_t_68 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "cshogi/_cshogi.pyx":91
 * 
 * PIECE_TYPES = [
 * 		   PAWN,      LANCE,      KNIGHT,      SILVER,             # <<<<<<<<<<<<<<
 * 		 BISHOP,       ROOK,
 * 		   GOLD,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_PAWN); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 91, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GetModuleGlobalName(__pyx_t_68, __pyx_n_s_LANCE); if (unlikely(!__pyx_t_68)) __PYX_ERR(0, 91, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_68);
  __Pyx_GetModuleGlobalName(__pyx_t_69, __pyx_n_s_KNIGHT); if (unlikely(!__pyx_t_69)) __PYX_ERR(0, 91, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_69);
  __Pyx_GetModuleGlobalName(__pyx_t_70, __pyx_n_s_SILVER); if (unlikely(!__pyx_t_70)) __PYX_ERR(0, 91, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_70);

  /* "cshogi/_cshogi.pyx":92
 * PIECE_TYPES = [
 * 		   PAWN,      LANCE,      KNIGHT,      SILVER,
 * 		 BISHOP,       ROOK,             # <<<<<<<<<<<<<<
 * 		   GOLD,
 * 		   KING,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_71, __pyx_n_s_BISHOP); if (unlikely(!__pyx_t_71)) __PYX_ERR(0, 92, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_71);
  __Pyx_GetModuleGlobalName(__pyx_t_72, __pyx_n_s_ROOK); if (unlikely(!__pyx_t_72)) __PYX_ERR(0, 92, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_72);

  /* "cshogi/_cshogi.pyx":93
 * 		   PAWN,      LANCE,      KNIGHT,      SILVER,
 * 		 BISHOP,       ROOK,
 * 		   GOLD,             # <<<<<<<<<<<<<<
 * 		   KING,
 * 	  PROM_PAWN, PROM_LANCE, PROM_KNIGHT, PROM_SILVER,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_73, __pyx_n_s_GOLD); if (unlikely(!__pyx_t_73)) __PYX_ERR(0, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_73);

  /* "cshogi/_cshogi.pyx":94
 * 		 BISHOP,       ROOK,
 * 		   GOLD,
 * 		   KING,             # <<<<<<<<<<<<<<
 * 	  PROM_PAWN, PROM_LANCE, PROM_KNIGHT, PROM_SILVER,
 * 	PROM_BISHOP,  PROM_ROOK,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_74, __pyx_n_s_KING); if (unlikely(!__pyx_t_74)) __PYX_ERR(0, 94, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_74);

  /* "cshogi/_cshogi.pyx":95
 * 		   GOLD,
 * 		   KING,
 * 	  PROM_PAWN, PROM_LANCE, PROM_KNIGHT, PROM_SILVER,             # <<<<<<<<<<<<<<
 * 	PROM_BISHOP,  PROM_ROOK,
 * ]
 */
  __Pyx_GetModuleGlobalName(__pyx_t_75, __pyx_n_s_PROM_PAWN); if (unlikely(!__pyx_t_75)) __PYX_ERR(0, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_75);
  __Pyx_GetModuleGlobalName(__pyx_t_76, __pyx_n_s_PROM_LANCE); if (unlikely(!__pyx_t_76)) __PYX_ERR(0, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_76);
  __Pyx_GetModuleGlobalName(__pyx_t_77, __pyx_n_s_PROM_KNIGHT); if (unlikely(!__pyx_t_77)) __PYX_ERR(0, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_77);
  __Pyx_GetModuleGlobalName(__pyx_t_78, __pyx_n_s_PROM_SILVER); if (unlikely(!__pyx_t_78)) __PYX_ERR(0, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_78);

  /* "cshogi/_cshogi.pyx":96
 * 		   KING,
 * 	  PROM_PAWN, PROM_LANCE, PROM_KNIGHT, PROM_SILVER,
 * 	PROM_BISHOP,  PROM_ROOK,             # <<<<<<<<<<<<<<
 * ]
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_79, __pyx_n_s_PROM_BISHOP); if (unlikely(!__pyx_t_79)) __PYX_ERR(0, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_79);
  __Pyx_GetModuleGlobalName(__pyx_t_81, __pyx_n_s_PROM_ROOK); if (unlikely(!__pyx_t_81)) __PYX_ERR(0, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_81);

  /* "cshogi/_cshogi.pyx":90
 * ] = range(15)
 * 
 * PIECE_TYPES = [             # <<<<<<<<<<<<<<
 * 		   PAWN,      LANCE,      KNIGHT,      SILVER,
 * 		 BISHOP,       ROOK,
 */
  __pyx_t_82 = PyList_New(14); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_82, 0, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_68);
  PyList_SET_ITEM(__pyx_t_82, 1, __pyx_t_68);
  __Pyx_GIVEREF(__pyx_t_69);
  PyList_SET_ITEM(__pyx_t_82, 2, __pyx_t_69);
  __Pyx_GIVEREF(__pyx_t_70);
  PyList_SET_ITEM(__pyx_t_82, 3, __pyx_t_70);
  __Pyx_GIVEREF(__pyx_t_71);
  PyList_SET_ITEM(__pyx_t_82, 4, __pyx_t_71);
  __Pyx_GIVEREF(__pyx_t_72);
  PyList_SET_ITEM(__pyx_t_82, 5, __pyx_t_72);
  __Pyx_GIVEREF(__pyx_t_73);
  PyList_SET_ITEM(__pyx_t_82, 6, __pyx_t_73);
  __Pyx_GIVEREF(__pyx_t_74);
  PyList_SET_ITEM(__pyx_t_82, 7, __pyx_t_74);
  __Pyx_GIVEREF(__pyx_t_75);
  PyList_SET_ITEM(__pyx_t_82, 8, __pyx_t_75);
  __Pyx_GIVEREF(__pyx_t_76);
  PyList_SET_ITEM(__pyx_t_82, 9, __pyx_t_76);
  __Pyx_GIVEREF(__pyx_t_77);
  PyList_SET_ITEM(__pyx_t_82, 10, __pyx_t_77);
  __Pyx_GIVEREF(__pyx_t_78);
  PyList_SET_ITEM(__pyx_t_82, 11, __pyx_t_78);
  __Pyx_GIVEREF(__pyx_t_79);
  PyList_SET_ITEM(__pyx_t_82, 12, __pyx_t_79);
  __Pyx_GIVEREF(__pyx_t_81);
  PyList_SET_ITEM(__pyx_t_82, 13, __pyx_t_81);
  __pyx_t_4 = 0;
  __pyx_t_68 = 0;
  __pyx_t_69 = 0;
  __pyx_t_70 = 0;
  __pyx_t_71 = 0;
  __pyx_t_72 = 0;
  __pyx_t_73 = 0;
  __pyx_t_74 = 0;
  __pyx_t_75 = 0;
  __pyx_t_76 = 0;
  __pyx_t_77 = 0;
  __pyx_t_78 = 0;
  __pyx_t_79 = 0;
  __pyx_t_81 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PIECE_TYPES, __pyx_t_82) < 0) __PYX_ERR(0, 90, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":112
 * 	 WPROM_PAWN, WPROM_LANCE, WPROM_KNIGHT, WPROM_SILVER,
 *    WPROM_BISHOP, WPROM_ROOK,
 * ] = range(31)             # <<<<<<<<<<<<<<
 * 
 * HAND_PIECES = [
 */
  __pyx_t_82 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__28, NULL); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PIECES, __pyx_t_82) < 0) __PYX_ERR(0, 99, __pyx_L1_error)
  if ((likely(PyTuple_CheckExact(__pyx_t_82))) || (PyList_CheckExact(__pyx_t_82))) {
    PyObject* sequence = __pyx_t_82;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 31)) {
      if (size > 31) __Pyx_RaiseTooManyValuesError(31);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 99, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_81 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_79 = PyTuple_GET_ITEM(sequence, 1); 
      __pyx_t_78 = PyTuple_GET_ITEM(sequence, 2); 
      __pyx_t_77 = PyTuple_GET_ITEM(sequence, 3); 
      __pyx_t_76 = PyTuple_GET_ITEM(sequence, 4); 
      __pyx_t_75 = PyTuple_GET_ITEM(sequence, 5); 
      __pyx_t_74 = PyTuple_GET_ITEM(sequence, 6); 
      __pyx_t_73 = PyTuple_GET_ITEM(sequence, 7); 
      __pyx_t_72 = PyTuple_GET_ITEM(sequence, 8); 
      __pyx_t_71 = PyTuple_GET_ITEM(sequence, 9); 
      __pyx_t_70 = PyTuple_GET_ITEM(sequence, 10); 
      __pyx_t_69 = PyTuple_GET_ITEM(sequence, 11); 
      __pyx_t_68 = PyTuple_GET_ITEM(sequence, 12); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 13); 
      __pyx_t_80 = PyTuple_GET_ITEM(sequence, 14); 
      __pyx_t_67 = PyTuple_GET_ITEM(sequence, 15); 
      __pyx_t_66 = PyTuple_GET_ITEM(sequence, 16); 
      __pyx_t_65 = PyTuple_GET_ITEM(sequence, 17); 
      __pyx_t_64 = PyTuple_GET_ITEM(sequence, 18); 
      __pyx_t_63 = PyTuple_GET_ITEM(sequence, 19); 
      __pyx_t_62 = PyTuple_GET_ITEM(sequence, 20); 
      __pyx_t_61 = PyTuple_GET_ITEM(sequence, 21); 
      __pyx_t_60 = PyTuple_GET_ITEM(sequence, 22); 
      __pyx_t_59 = PyTuple_GET_ITEM(sequence, 23); 
      __pyx_t_58 = PyTuple_GET_ITEM(sequence, 24); 
      __pyx_t_57 = PyTuple_GET_ITEM(sequence, 25); 
      __pyx_t_56 = PyTuple_GET_ITEM(sequence, 26); 
      __pyx_t_55 = PyTuple_GET_ITEM(sequence, 27); 
      __pyx_t_54 = PyTuple_GET_ITEM(sequence, 28); 
      __pyx_t_53 = PyTuple_GET_ITEM(sequence, 29); 
      __pyx_t_52 = PyTuple_GET_ITEM(sequence, 30); 
    } else {
      __pyx_t_81 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_79 = PyList_GET_ITEM(sequence, 1); 
      __pyx_t_78 = PyList_GET_ITEM(sequence, 2); 
      __pyx_t_77 = PyList_GET_ITEM(sequence, 3); 
      __pyx_t_76 = PyList_GET_ITEM(sequence, 4); 
      __pyx_t_75 = PyList_GET_ITEM(sequence, 5); 
      __pyx_t_74 = PyList_GET_ITEM(sequence, 6); 
      __pyx_t_73 = PyList_GET_ITEM(sequence, 7); 
      __pyx_t_72 = PyList_GET_ITEM(sequence, 8); 
      __pyx_t_71 = PyList_GET_ITEM(sequence, 9); 
      __pyx_t_70 = PyList_GET_ITEM(sequence, 10); 
      __pyx_t_69 = PyList_GET_ITEM(sequence, 11); 
      __pyx_t_68 = PyList_GET_ITEM(sequence, 12); 
      __pyx_t_4 = PyList_GET_ITEM(sequence, 13); 
      __pyx_t_80 = PyList_GET_ITEM(sequence, 14); 
      __pyx_t_67 = PyList_GET_ITEM(sequence, 15); 
      __pyx_t_66 = PyList_GET_ITEM(sequence, 16); 
      __pyx_t_65 = PyList_GET_ITEM(sequence, 17); 
      __pyx_t_64 = PyList_GET_ITEM(sequence, 18); 
      __pyx_t_63 = PyList_GET_ITEM(sequence, 19); 
      __pyx_t_62 = PyList_GET_ITEM(sequence, 20); 
      __pyx_t_61 = PyList_GET_ITEM(sequence, 21); 
      __pyx_t_60 = PyList_GET_ITEM(sequence, 22); 
      __pyx_t_59 = PyList_GET_ITEM(sequence, 23); 
      __pyx_t_58 = PyList_GET_ITEM(sequence, 24); 
      __pyx_t_57 = PyList_GET_ITEM(sequence, 25); 
      __pyx_t_56 = PyList_GET_ITEM(sequence, 26); 
      __pyx_t_55 = PyList_GET_ITEM(sequence, 27); 
      __pyx_t_54 = PyList_GET_ITEM(sequence, 28); 
      __pyx_t_53 = PyList_GET_ITEM(sequence, 29); 
      __pyx_t_52 = PyList_GET_ITEM(sequence, 30); 
    }
    __Pyx_INCREF(__pyx_t_81);
    __Pyx_INCREF(__pyx_t_79);
    __Pyx_INCREF(__pyx_t_78);
    __Pyx_INCREF(__pyx_t_77);
    __Pyx_INCREF(__pyx_t_76);
    __Pyx_INCREF(__pyx_t_75);
    __Pyx_INCREF(__pyx_t_74);
    __Pyx_INCREF(__pyx_t_73);
    __Pyx_INCREF(__pyx_t_72);
    __Pyx_INCREF(__pyx_t_71);
    __Pyx_INCREF(__pyx_t_70);
    __Pyx_INCREF(__pyx_t_69);
    __Pyx_INCREF(__pyx_t_68);
    __Pyx_INCREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_t_80);
    __Pyx_INCREF(__pyx_t_67);
    __Pyx_INCREF(__pyx_t_66);
    __Pyx_INCREF(__pyx_t_65);
    __Pyx_INCREF(__pyx_t_64);
    __Pyx_INCREF(__pyx_t_63);
    __Pyx_INCREF(__pyx_t_62);
    __Pyx_INCREF(__pyx_t_61);
    __Pyx_INCREF(__pyx_t_60);
    __Pyx_INCREF(__pyx_t_59);
    __Pyx_INCREF(__pyx_t_58);
    __Pyx_INCREF(__pyx_t_57);
    __Pyx_INCREF(__pyx_t_56);
    __Pyx_INCREF(__pyx_t_55);
    __Pyx_INCREF(__pyx_t_54);
    __Pyx_INCREF(__pyx_t_53);
    __Pyx_INCREF(__pyx_t_52);
    #else
    {
      Py_ssize_t i;
      PyObject** temps[31] = {&__pyx_t_81,&__pyx_t_79,&__pyx_t_78,&__pyx_t_77,&__pyx_t_76,&__pyx_t_75,&__pyx_t_74,&__pyx_t_73,&__pyx_t_72,&__pyx_t_71,&__pyx_t_70,&__pyx_t_69,&__pyx_t_68,&__pyx_t_4,&__pyx_t_80,&__pyx_t_67,&__pyx_t_66,&__pyx_t_65,&__pyx_t_64,&__pyx_t_63,&__pyx_t_62,&__pyx_t_61,&__pyx_t_60,&__pyx_t_59,&__pyx_t_58,&__pyx_t_57,&__pyx_t_56,&__pyx_t_55,&__pyx_t_54,&__pyx_t_53,&__pyx_t_52};
      for (i=0; i < 31; i++) {
        PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 99, __pyx_L1_error)
        __Pyx_GOTREF(item);
        *(temps[i]) = item;
      }
    }
    #endif
  } else {
    Py_ssize_t index = -1;
    PyObject** temps[31] = {&__pyx_t_81,&__pyx_t_79,&__pyx_t_78,&__pyx_t_77,&__pyx_t_76,&__pyx_t_75,&__pyx_t_74,&__pyx_t_73,&__pyx_t_72,&__pyx_t_71,&__pyx_t_70,&__pyx_t_69,&__pyx_t_68,&__pyx_t_4,&__pyx_t_80,&__pyx_t_67,&__pyx_t_66,&__pyx_t_65,&__pyx_t_64,&__pyx_t_63,&__pyx_t_62,&__pyx_t_61,&__pyx_t_60,&__pyx_t_59,&__pyx_t_58,&__pyx_t_57,&__pyx_t_56,&__pyx_t_55,&__pyx_t_54,&__pyx_t_53,&__pyx_t_52};
    __pyx_t_51 = PyObject_GetIter(__pyx_t_82); if (unlikely(!__pyx_t_51)) __PYX_ERR(0, 99, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_51);
    __pyx_t_84 = Py_TYPE(__pyx_t_51)->tp_iternext;
    for (index=0; index < 31; index++) {
      PyObject* item = __pyx_t_84(__pyx_t_51); if (unlikely(!item)) goto __pyx_L10_unpacking_failed;
      __Pyx_GOTREF(item);
      *(temps[index]) = item;
    }
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_84(__pyx_t_51), 31) < 0) __PYX_ERR(0, 99, __pyx_L1_error)
    __pyx_t_84 = NULL;
    __Pyx_DECREF(__pyx_t_51); __pyx_t_51 = 0;
    goto __pyx_L11_unpacking_done;
    __pyx_L10_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_51); __pyx_t_51 = 0;
    __pyx_t_84 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 99, __pyx_L1_error)
    __pyx_L11_unpacking_done:;
  }

  /* "cshogi/_cshogi.pyx":99
 * ]
 * 
 * PIECES = [NONE,             # <<<<<<<<<<<<<<
 * 		  BPAWN,      BLANCE,      BKNIGHT,      BSILVER,
 * 		BBISHOP,       BROOK,
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NONE, __pyx_t_81) < 0) __PYX_ERR(0, 99, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_81); __pyx_t_81 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BPAWN, __pyx_t_79) < 0) __PYX_ERR(0, 100, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_79); __pyx_t_79 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BLANCE, __pyx_t_78) < 0) __PYX_ERR(0, 100, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_78); __pyx_t_78 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BKNIGHT, __pyx_t_77) < 0) __PYX_ERR(0, 100, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_77); __pyx_t_77 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BSILVER, __pyx_t_76) < 0) __PYX_ERR(0, 100, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_76); __pyx_t_76 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BBISHOP, __pyx_t_75) < 0) __PYX_ERR(0, 101, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_75); __pyx_t_75 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BROOK, __pyx_t_74) < 0) __PYX_ERR(0, 101, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_74); __pyx_t_74 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BGOLD, __pyx_t_73) < 0) __PYX_ERR(0, 102, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_73); __pyx_t_73 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BKING, __pyx_t_72) < 0) __PYX_ERR(0, 103, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_72); __pyx_t_72 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BPROM_PAWN, __pyx_t_71) < 0) __PYX_ERR(0, 104, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_71); __pyx_t_71 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BPROM_LANCE, __pyx_t_70) < 0) __PYX_ERR(0, 104, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_70); __pyx_t_70 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BPROM_KNIGHT, __pyx_t_69) < 0) __PYX_ERR(0, 104, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_69); __pyx_t_69 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BPROM_SILVER, __pyx_t_68) < 0) __PYX_ERR(0, 104, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_68); __pyx_t_68 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BPROM_BISHOP, __pyx_t_4) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BPROM_ROOK, __pyx_t_80) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_80); __pyx_t_80 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NOTUSE, __pyx_t_67) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_67); __pyx_t_67 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NOTUSE, __pyx_t_66) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_66); __pyx_t_66 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_WPAWN, __pyx_t_65) < 0) __PYX_ERR(0, 106, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_65); __pyx_t_65 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_WLANCE, __pyx_t_64) < 0) __PYX_ERR(0, 106, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_64); __pyx_t_64 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_WKNIGHT, __pyx_t_63) < 0) __PYX_ERR(0, 106, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_63); __pyx_t_63 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_WSILVER, __pyx_t_62) < 0) __PYX_ERR(0, 106, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_62); __pyx_t_62 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_WBISHOP, __pyx_t_61) < 0) __PYX_ERR(0, 107, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_61); __pyx_t_61 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_WROOK, __pyx_t_60) < 0) __PYX_ERR(0, 107, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_60); __pyx_t_60 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_WGOLD, __pyx_t_59) < 0) __PYX_ERR(0, 108, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_59); __pyx_t_59 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_WKING, __pyx_t_58) < 0) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_58); __pyx_t_58 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_WPROM_PAWN, __pyx_t_57) < 0) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_57); __pyx_t_57 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_WPROM_LANCE, __pyx_t_56) < 0) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_56); __pyx_t_56 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_WPROM_KNIGHT, __pyx_t_55) < 0) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_55); __pyx_t_55 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_WPROM_SILVER, __pyx_t_54) < 0) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_54); __pyx_t_54 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_WPROM_BISHOP, __pyx_t_53) < 0) __PYX_ERR(0, 111, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_53); __pyx_t_53 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_WPROM_ROOK, __pyx_t_52) < 0) __PYX_ERR(0, 111, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_52); __pyx_t_52 = 0;
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":118
 * 		  HGOLD,
 * 		HBISHOP,      HROOK,
 * ] = range(7)             # <<<<<<<<<<<<<<
 * 
 * MAX_PIECES_IN_HAND = [
 */
  __pyx_t_82 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__29, NULL); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HAND_PIECES, __pyx_t_82) < 0) __PYX_ERR(0, 114, __pyx_L1_error)
  if ((likely(PyTuple_CheckExact(__pyx_t_82))) || (PyList_CheckExact(__pyx_t_82))) {
    PyObject* sequence = __pyx_t_82;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 7)) {
      if (size > 7) __Pyx_RaiseTooManyValuesError(7);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 114, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_52 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_53 = PyTuple_GET_ITEM(sequence, 1); 
      __pyx_t_54 = PyTuple_GET_ITEM(sequence, 2); 
      __pyx_t_55 = PyTuple_GET_ITEM(sequence, 3); 
      __pyx_t_56 = PyTuple_GET_ITEM(sequence, 4); 
      __pyx_t_57 = PyTuple_GET_ITEM(sequence, 5); 
      __pyx_t_58 = PyTuple_GET_ITEM(sequence, 6); 
    } else {
      __pyx_t_52 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_53 = PyList_GET_ITEM(sequence, 1); 
      __pyx_t_54 = PyList_GET_ITEM(sequence, 2); 
      __pyx_t_55 = PyList_GET_ITEM(sequence, 3); 
      __pyx_t_56 = PyList_GET_ITEM(sequence, 4); 
      __pyx_t_57 = PyList_GET_ITEM(sequence, 5); 
      __pyx_t_58 = PyList_GET_ITEM(sequence, 6); 
    }
    __Pyx_INCREF(__pyx_t_52);
    __Pyx_INCREF(__pyx_t_53);
    __Pyx_INCREF(__pyx_t_54);
    __Pyx_INCREF(__pyx_t_55);
    __Pyx_INCREF(__pyx_t_56);
    __Pyx_INCREF(__pyx_t_57);
    __Pyx_INCREF(__pyx_t_58);
    #else
    {
      Py_ssize_t i;
      PyObject** temps[7] = {&__pyx_t_52,&__pyx_t_53,&__pyx_t_54,&__pyx_t_55,&__pyx_t_56,&__pyx_t_57,&__pyx_t_58};
      for (i=0; i < 7; i++) {
        PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 114, __pyx_L1_error)
        __Pyx_GOTREF(item);
        *(temps[i]) = item;
      }
    }
    #endif
  } else {
    Py_ssize_t index = -1;
    PyObject** temps[7] = {&__pyx_t_52,&__pyx_t_53,&__pyx_t_54,&__pyx_t_55,&__pyx_t_56,&__pyx_t_57,&__pyx_t_58};
    __pyx_t_59 = PyObject_GetIter(__pyx_t_82); if (unlikely(!__pyx_t_59)) __PYX_ERR(0, 114, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_59);
    __pyx_t_84 = Py_TYPE(__pyx_t_59)->tp_iternext;
    for (index=0; index < 7; index++) {
      PyObject* item = __pyx_t_84(__pyx_t_59); if (unlikely(!item)) goto __pyx_L12_unpacking_failed;
      __Pyx_GOTREF(item);
      *(temps[index]) = item;
    }
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_84(__pyx_t_59), 7) < 0) __PYX_ERR(0, 114, __pyx_L1_error)
    __pyx_t_84 = NULL;
    __Pyx_DECREF(__pyx_t_59); __pyx_t_59 = 0;
    goto __pyx_L13_unpacking_done;
    __pyx_L12_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_59); __pyx_t_59 = 0;
    __pyx_t_84 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 114, __pyx_L1_error)
    __pyx_L13_unpacking_done:;
  }

  /* "cshogi/_cshogi.pyx":114
 * ] = range(31)
 * 
 * HAND_PIECES = [             # <<<<<<<<<<<<<<
 * 		  HPAWN,     HLANCE,     HKNIGHT,     HSILVER,
 * 		  HGOLD,
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HPAWN, __pyx_t_52) < 0) __PYX_ERR(0, 115, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_52); __pyx_t_52 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HLANCE, __pyx_t_53) < 0) __PYX_ERR(0, 115, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_53); __pyx_t_53 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HKNIGHT, __pyx_t_54) < 0) __PYX_ERR(0, 115, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_54); __pyx_t_54 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HSILVER, __pyx_t_55) < 0) __PYX_ERR(0, 115, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_55); __pyx_t_55 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HGOLD, __pyx_t_56) < 0) __PYX_ERR(0, 116, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_56); __pyx_t_56 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HBISHOP, __pyx_t_57) < 0) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_57); __pyx_t_57 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HROOK, __pyx_t_58) < 0) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_58); __pyx_t_58 = 0;
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":120
 * ] = range(7)
 * 
 * MAX_PIECES_IN_HAND = [             # <<<<<<<<<<<<<<
 * 	18, 4, 4, 4,
 * 	4,
 */
  __pyx_t_82 = PyList_New(7); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  __Pyx_INCREF(__pyx_int_18);
  __Pyx_GIVEREF(__pyx_int_18);
  PyList_SET_ITEM(__pyx_t_82, 0, __pyx_int_18);
  __Pyx_INCREF(__pyx_int_4);
  __Pyx_GIVEREF(__pyx_int_4);
  PyList_SET_ITEM(__pyx_t_82, 1, __pyx_int_4);
  __Pyx_INCREF(__pyx_int_4);
  __Pyx_GIVEREF(__pyx_int_4);
  PyList_SET_ITEM(__pyx_t_82, 2, __pyx_int_4);
  __Pyx_INCREF(__pyx_int_4);
  __Pyx_GIVEREF(__pyx_int_4);
  PyList_SET_ITEM(__pyx_t_82, 3, __pyx_int_4);
  __Pyx_INCREF(__pyx_int_4);
  __Pyx_GIVEREF(__pyx_int_4);
  PyList_SET_ITEM(__pyx_t_82, 4, __pyx_int_4);
  __Pyx_INCREF(__pyx_int_2);
  __Pyx_GIVEREF(__pyx_int_2);
  PyList_SET_ITEM(__pyx_t_82, 5, __pyx_int_2);
  __Pyx_INCREF(__pyx_int_2);
  __Pyx_GIVEREF(__pyx_int_2);
  PyList_SET_ITEM(__pyx_t_82, 6, __pyx_int_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MAX_PIECES_IN_HAND, __pyx_t_82) < 0) __PYX_ERR(0, 120, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":126
 * ]
 * 
 * MOVE_NONE = 0             # <<<<<<<<<<<<<<
 * 
 * REPETITION_TYPES = [
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MOVE_NONE, __pyx_int_0) < 0) __PYX_ERR(0, 126, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":131
 * 	NOT_REPETITION, REPETITION_DRAW, REPETITION_WIN, REPETITION_LOSE,
 * 	REPETITION_SUPERIOR, REPETITION_INFERIOR
 * ] = range(6)             # <<<<<<<<<<<<<<
 * 
 * SVG_PIECE_DEFS = [
 */
  __pyx_t_82 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_REPETITION_TYPES, __pyx_t_82) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
  if ((likely(PyTuple_CheckExact(__pyx_t_82))) || (PyList_CheckExact(__pyx_t_82))) {
    PyObject* sequence = __pyx_t_82;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 6)) {
      if (size > 6) __Pyx_RaiseTooManyValuesError(6);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 128, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_58 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_57 = PyTuple_GET_ITEM(sequence, 1); 
      __pyx_t_56 = PyTuple_GET_ITEM(sequence, 2); 
      __pyx_t_55 = PyTuple_GET_ITEM(sequence, 3); 
      __pyx_t_54 = PyTuple_GET_ITEM(sequence, 4); 
      __pyx_t_53 = PyTuple_GET_ITEM(sequence, 5); 
    } else {
      __pyx_t_58 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_57 = PyList_GET_ITEM(sequence, 1); 
      __pyx_t_56 = PyList_GET_ITEM(sequence, 2); 
      __pyx_t_55 = PyList_GET_ITEM(sequence, 3); 
      __pyx_t_54 = PyList_GET_ITEM(sequence, 4); 
      __pyx_t_53 = PyList_GET_ITEM(sequence, 5); 
    }
    __Pyx_INCREF(__pyx_t_58);
    __Pyx_INCREF(__pyx_t_57);
    __Pyx_INCREF(__pyx_t_56);
    __Pyx_INCREF(__pyx_t_55);
    __Pyx_INCREF(__pyx_t_54);
    __Pyx_INCREF(__pyx_t_53);
    #else
    {
      Py_ssize_t i;
      PyObject** temps[6] = {&__pyx_t_58,&__pyx_t_57,&__pyx_t_56,&__pyx_t_55,&__pyx_t_54,&__pyx_t_53};
      for (i=0; i < 6; i++) {
        PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 128, __pyx_L1_error)
        __Pyx_GOTREF(item);
        *(temps[i]) = item;
      }
    }
    #endif
  } else {
    Py_ssize_t index = -1;
    PyObject** temps[6] = {&__pyx_t_58,&__pyx_t_57,&__pyx_t_56,&__pyx_t_55,&__pyx_t_54,&__pyx_t_53};
    __pyx_t_52 = PyObject_GetIter(__pyx_t_82); if (unlikely(!__pyx_t_52)) __PYX_ERR(0, 128, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_52);
    __pyx_t_84 = Py_TYPE(__pyx_t_52)->tp_iternext;
    for (index=0; index < 6; index++) {
      PyObject* item = __pyx_t_84(__pyx_t_52); if (unlikely(!item)) goto __pyx_L14_unpacking_failed;
      __Pyx_GOTREF(item);
      *(temps[index]) = item;
    }
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_84(__pyx_t_52), 6) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
    __pyx_t_84 = NULL;
    __Pyx_DECREF(__pyx_t_52); __pyx_t_52 = 0;
    goto __pyx_L15_unpacking_done;
    __pyx_L14_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_52); __pyx_t_52 = 0;
    __pyx_t_84 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 128, __pyx_L1_error)
    __pyx_L15_unpacking_done:;
  }

  /* "cshogi/_cshogi.pyx":128
 * MOVE_NONE = 0
 * 
 * REPETITION_TYPES = [             # <<<<<<<<<<<<<<
 * 	NOT_REPETITION, REPETITION_DRAW, REPETITION_WIN, REPETITION_LOSE,
 * 	REPETITION_SUPERIOR, REPETITION_INFERIOR
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NOT_REPETITION, __pyx_t_58) < 0) __PYX_ERR(0, 129, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_58); __pyx_t_58 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_REPETITION_DRAW, __pyx_t_57) < 0) __PYX_ERR(0, 129, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_57); __pyx_t_57 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_REPETITION_WIN, __pyx_t_56) < 0) __PYX_ERR(0, 129, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_56); __pyx_t_56 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_REPETITION_LOSE, __pyx_t_55) < 0) __PYX_ERR(0, 129, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_55); __pyx_t_55 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_REPETITION_SUPERIOR, __pyx_t_54) < 0) __PYX_ERR(0, 130, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_54); __pyx_t_54 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_REPETITION_INFERIOR, __pyx_t_53) < 0) __PYX_ERR(0, 130, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_53); __pyx_t_53 = 0;
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":133
 * ] = range(6)
 * 
 * SVG_PIECE_DEFS = [             # <<<<<<<<<<<<<<
 * 	'<g id="black-pawn"><text font-family="serif" font-size="17" text-anchor="middle" x="10.5" y="16.5"></text></g>',
 * 	'<g id="black-lance"><text font-family="serif" font-size="17" text-anchor="middle" x="10.5" y="16.5"></text></g>',
 */
  __pyx_t_82 = PyList_New(28); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  __Pyx_INCREF(__pyx_kp_s_g_id_black_pawn_text_font_famil);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_black_pawn_text_font_famil);
  PyList_SET_ITEM(__pyx_t_82, 0, __pyx_kp_s_g_id_black_pawn_text_font_famil);
  __Pyx_INCREF(__pyx_kp_s_g_id_black_lance_text_font_fami);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_black_lance_text_font_fami);
  PyList_SET_ITEM(__pyx_t_82, 1, __pyx_kp_s_g_id_black_lance_text_font_fami);
  __Pyx_INCREF(__pyx_kp_s_g_id_black_knight_text_font_fam);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_black_knight_text_font_fam);
  PyList_SET_ITEM(__pyx_t_82, 2, __pyx_kp_s_g_id_black_knight_text_font_fam);
  __Pyx_INCREF(__pyx_kp_s_g_id_black_silver_text_font_fam);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_black_silver_text_font_fam);
  PyList_SET_ITEM(__pyx_t_82, 3, __pyx_kp_s_g_id_black_silver_text_font_fam);
  __Pyx_INCREF(__pyx_kp_s_g_id_black_gold_text_font_famil);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_black_gold_text_font_famil);
  PyList_SET_ITEM(__pyx_t_82, 4, __pyx_kp_s_g_id_black_gold_text_font_famil);
  __Pyx_INCREF(__pyx_kp_s_g_id_black_bishop_text_font_fam);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_black_bishop_text_font_fam);
  PyList_SET_ITEM(__pyx_t_82, 5, __pyx_kp_s_g_id_black_bishop_text_font_fam);
  __Pyx_INCREF(__pyx_kp_s_g_id_black_rook_text_font_famil);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_black_rook_text_font_famil);
  PyList_SET_ITEM(__pyx_t_82, 6, __pyx_kp_s_g_id_black_rook_text_font_famil);
  __Pyx_INCREF(__pyx_kp_s_g_id_black_king_text_font_famil);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_black_king_text_font_famil);
  PyList_SET_ITEM(__pyx_t_82, 7, __pyx_kp_s_g_id_black_king_text_font_famil);
  __Pyx_INCREF(__pyx_kp_s_g_id_black_pro_pawn_text_font_f);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_black_pro_pawn_text_font_f);
  PyList_SET_ITEM(__pyx_t_82, 8, __pyx_kp_s_g_id_black_pro_pawn_text_font_f);
  __Pyx_INCREF(__pyx_kp_s_g_id_black_pro_lance_transform);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_black_pro_lance_transform);
  PyList_SET_ITEM(__pyx_t_82, 9, __pyx_kp_s_g_id_black_pro_lance_transform);
  __Pyx_INCREF(__pyx_kp_s_g_id_black_pro_knight_transform);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_black_pro_knight_transform);
  PyList_SET_ITEM(__pyx_t_82, 10, __pyx_kp_s_g_id_black_pro_knight_transform);
  __Pyx_INCREF(__pyx_kp_s_g_id_black_pro_silver_transform);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_black_pro_silver_transform);
  PyList_SET_ITEM(__pyx_t_82, 11, __pyx_kp_s_g_id_black_pro_silver_transform);
  __Pyx_INCREF(__pyx_kp_s_g_id_black_horse_text_font_fami);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_black_horse_text_font_fami);
  PyList_SET_ITEM(__pyx_t_82, 12, __pyx_kp_s_g_id_black_horse_text_font_fami);
  __Pyx_INCREF(__pyx_kp_s_g_id_black_dragon_text_font_fam);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_black_dragon_text_font_fam);
  PyList_SET_ITEM(__pyx_t_82, 13, __pyx_kp_s_g_id_black_dragon_text_font_fam);
  __Pyx_INCREF(__pyx_kp_s_g_id_white_pawn_transform_rotat);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_white_pawn_transform_rotat);
  PyList_SET_ITEM(__pyx_t_82, 14, __pyx_kp_s_g_id_white_pawn_transform_rotat);
  __Pyx_INCREF(__pyx_kp_s_g_id_white_lance_transform_rota);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_white_lance_transform_rota);
  PyList_SET_ITEM(__pyx_t_82, 15, __pyx_kp_s_g_id_white_lance_transform_rota);
  __Pyx_INCREF(__pyx_kp_s_g_id_white_knight_transform_rot);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_white_knight_transform_rot);
  PyList_SET_ITEM(__pyx_t_82, 16, __pyx_kp_s_g_id_white_knight_transform_rot);
  __Pyx_INCREF(__pyx_kp_s_g_id_white_silver_transform_rot);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_white_silver_transform_rot);
  PyList_SET_ITEM(__pyx_t_82, 17, __pyx_kp_s_g_id_white_silver_transform_rot);
  __Pyx_INCREF(__pyx_kp_s_g_id_white_gold_transform_rotat);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_white_gold_transform_rotat);
  PyList_SET_ITEM(__pyx_t_82, 18, __pyx_kp_s_g_id_white_gold_transform_rotat);
  __Pyx_INCREF(__pyx_kp_s_g_id_white_bishop_transform_rot);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_white_bishop_transform_rot);
  PyList_SET_ITEM(__pyx_t_82, 19, __pyx_kp_s_g_id_white_bishop_transform_rot);
  __Pyx_INCREF(__pyx_kp_s_g_id_white_rook_transform_rotat);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_white_rook_transform_rotat);
  PyList_SET_ITEM(__pyx_t_82, 20, __pyx_kp_s_g_id_white_rook_transform_rotat);
  __Pyx_INCREF(__pyx_kp_s_g_id_white_king_transform_rotat);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_white_king_transform_rotat);
  PyList_SET_ITEM(__pyx_t_82, 21, __pyx_kp_s_g_id_white_king_transform_rotat);
  __Pyx_INCREF(__pyx_kp_s_g_id_white_pro_pawn_transform_r);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_white_pro_pawn_transform_r);
  PyList_SET_ITEM(__pyx_t_82, 22, __pyx_kp_s_g_id_white_pro_pawn_transform_r);
  __Pyx_INCREF(__pyx_kp_s_g_id_white_pro_lance_transform);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_white_pro_lance_transform);
  PyList_SET_ITEM(__pyx_t_82, 23, __pyx_kp_s_g_id_white_pro_lance_transform);
  __Pyx_INCREF(__pyx_kp_s_g_id_white_pro_knight_transform);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_white_pro_knight_transform);
  PyList_SET_ITEM(__pyx_t_82, 24, __pyx_kp_s_g_id_white_pro_knight_transform);
  __Pyx_INCREF(__pyx_kp_s_g_id_white_pro_silver_transform);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_white_pro_silver_transform);
  PyList_SET_ITEM(__pyx_t_82, 25, __pyx_kp_s_g_id_white_pro_silver_transform);
  __Pyx_INCREF(__pyx_kp_s_g_id_white_horse_transform_rota);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_white_horse_transform_rota);
  PyList_SET_ITEM(__pyx_t_82, 26, __pyx_kp_s_g_id_white_horse_transform_rota);
  __Pyx_INCREF(__pyx_kp_s_g_id_white_dragon_transform_rot);
  __Pyx_GIVEREF(__pyx_kp_s_g_id_white_dragon_transform_rot);
  PyList_SET_ITEM(__pyx_t_82, 27, __pyx_kp_s_g_id_white_dragon_transform_rot);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SVG_PIECE_DEFS, __pyx_t_82) < 0) __PYX_ERR(0, 133, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":163
 * 	'<g id="white-dragon" transform="rotate(180)"><text font-family="serif" font-size="17" text-anchor="middle" x="-10.5" y="-3.5"></text></g>',
 * ]
 * SVG_PIECE_DEF_IDS = [None,             # <<<<<<<<<<<<<<
 * 	"black-pawn", "black-lance", "black-knight", "black-silver",
 * 	"black-bishop", "black-rook",
 */
  __pyx_t_82 = PyList_New(31); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyList_SET_ITEM(__pyx_t_82, 0, Py_None);
  __Pyx_INCREF(__pyx_kp_s_black_pawn);
  __Pyx_GIVEREF(__pyx_kp_s_black_pawn);
  PyList_SET_ITEM(__pyx_t_82, 1, __pyx_kp_s_black_pawn);
  __Pyx_INCREF(__pyx_kp_s_black_lance);
  __Pyx_GIVEREF(__pyx_kp_s_black_lance);
  PyList_SET_ITEM(__pyx_t_82, 2, __pyx_kp_s_black_lance);
  __Pyx_INCREF(__pyx_kp_s_black_knight);
  __Pyx_GIVEREF(__pyx_kp_s_black_knight);
  PyList_SET_ITEM(__pyx_t_82, 3, __pyx_kp_s_black_knight);
  __Pyx_INCREF(__pyx_kp_s_black_silver);
  __Pyx_GIVEREF(__pyx_kp_s_black_silver);
  PyList_SET_ITEM(__pyx_t_82, 4, __pyx_kp_s_black_silver);
  __Pyx_INCREF(__pyx_kp_s_black_bishop);
  __Pyx_GIVEREF(__pyx_kp_s_black_bishop);
  PyList_SET_ITEM(__pyx_t_82, 5, __pyx_kp_s_black_bishop);
  __Pyx_INCREF(__pyx_kp_s_black_rook);
  __Pyx_GIVEREF(__pyx_kp_s_black_rook);
  PyList_SET_ITEM(__pyx_t_82, 6, __pyx_kp_s_black_rook);
  __Pyx_INCREF(__pyx_kp_s_black_gold);
  __Pyx_GIVEREF(__pyx_kp_s_black_gold);
  PyList_SET_ITEM(__pyx_t_82, 7, __pyx_kp_s_black_gold);
  __Pyx_INCREF(__pyx_kp_s_black_king);
  __Pyx_GIVEREF(__pyx_kp_s_black_king);
  PyList_SET_ITEM(__pyx_t_82, 8, __pyx_kp_s_black_king);
  __Pyx_INCREF(__pyx_kp_s_black_pro_pawn);
  __Pyx_GIVEREF(__pyx_kp_s_black_pro_pawn);
  PyList_SET_ITEM(__pyx_t_82, 9, __pyx_kp_s_black_pro_pawn);
  __Pyx_INCREF(__pyx_kp_s_black_pro_lance);
  __Pyx_GIVEREF(__pyx_kp_s_black_pro_lance);
  PyList_SET_ITEM(__pyx_t_82, 10, __pyx_kp_s_black_pro_lance);
  __Pyx_INCREF(__pyx_kp_s_black_pro_knight);
  __Pyx_GIVEREF(__pyx_kp_s_black_pro_knight);
  PyList_SET_ITEM(__pyx_t_82, 11, __pyx_kp_s_black_pro_knight);
  __Pyx_INCREF(__pyx_kp_s_black_pro_silver);
  __Pyx_GIVEREF(__pyx_kp_s_black_pro_silver);
  PyList_SET_ITEM(__pyx_t_82, 12, __pyx_kp_s_black_pro_silver);
  __Pyx_INCREF(__pyx_kp_s_black_horse);
  __Pyx_GIVEREF(__pyx_kp_s_black_horse);
  PyList_SET_ITEM(__pyx_t_82, 13, __pyx_kp_s_black_horse);
  __Pyx_INCREF(__pyx_kp_s_black_dragon);
  __Pyx_GIVEREF(__pyx_kp_s_black_dragon);
  PyList_SET_ITEM(__pyx_t_82, 14, __pyx_kp_s_black_dragon);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyList_SET_ITEM(__pyx_t_82, 15, Py_None);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyList_SET_ITEM(__pyx_t_82, 16, Py_None);
  __Pyx_INCREF(__pyx_kp_s_white_pawn);
  __Pyx_GIVEREF(__pyx_kp_s_white_pawn);
  PyList_SET_ITEM(__pyx_t_82, 17, __pyx_kp_s_white_pawn);
  __Pyx_INCREF(__pyx_kp_s_white_lance);
  __Pyx_GIVEREF(__pyx_kp_s_white_lance);
  PyList_SET_ITEM(__pyx_t_82, 18, __pyx_kp_s_white_lance);
  __Pyx_INCREF(__pyx_kp_s_white_knight);
  __Pyx_GIVEREF(__pyx_kp_s_white_knight);
  PyList_SET_ITEM(__pyx_t_82, 19, __pyx_kp_s_white_knight);
  __Pyx_INCREF(__pyx_kp_s_white_silver);
  __Pyx_GIVEREF(__pyx_kp_s_white_silver);
  PyList_SET_ITEM(__pyx_t_82, 20, __pyx_kp_s_white_silver);
  __Pyx_INCREF(__pyx_kp_s_white_bishop);
  __Pyx_GIVEREF(__pyx_kp_s_white_bishop);
  PyList_SET_ITEM(__pyx_t_82, 21, __pyx_kp_s_white_bishop);
  __Pyx_INCREF(__pyx_kp_s_white_rook);
  __Pyx_GIVEREF(__pyx_kp_s_white_rook);
  PyList_SET_ITEM(__pyx_t_82, 22, __pyx_kp_s_white_rook);
  __Pyx_INCREF(__pyx_kp_s_white_gold);
  __Pyx_GIVEREF(__pyx_kp_s_white_gold);
  PyList_SET_ITEM(__pyx_t_82, 23, __pyx_kp_s_white_gold);
  __Pyx_INCREF(__pyx_kp_s_white_king);
  __Pyx_GIVEREF(__pyx_kp_s_white_king);
  PyList_SET_ITEM(__pyx_t_82, 24, __pyx_kp_s_white_king);
  __Pyx_INCREF(__pyx_kp_s_white_pro_pawn);
  __Pyx_GIVEREF(__pyx_kp_s_white_pro_pawn);
  PyList_SET_ITEM(__pyx_t_82, 25, __pyx_kp_s_white_pro_pawn);
  __Pyx_INCREF(__pyx_kp_s_white_pro_lance);
  __Pyx_GIVEREF(__pyx_kp_s_white_pro_lance);
  PyList_SET_ITEM(__pyx_t_82, 26, __pyx_kp_s_white_pro_lance);
  __Pyx_INCREF(__pyx_kp_s_white_pro_knight);
  __Pyx_GIVEREF(__pyx_kp_s_white_pro_knight);
  PyList_SET_ITEM(__pyx_t_82, 27, __pyx_kp_s_white_pro_knight);
  __Pyx_INCREF(__pyx_kp_s_white_pro_silver);
  __Pyx_GIVEREF(__pyx_kp_s_white_pro_silver);
  PyList_SET_ITEM(__pyx_t_82, 28, __pyx_kp_s_white_pro_silver);
  __Pyx_INCREF(__pyx_kp_s_white_horse);
  __Pyx_GIVEREF(__pyx_kp_s_white_horse);
  PyList_SET_ITEM(__pyx_t_82, 29, __pyx_kp_s_white_horse);
  __Pyx_INCREF(__pyx_kp_s_white_dragon);
  __Pyx_GIVEREF(__pyx_kp_s_white_dragon);
  PyList_SET_ITEM(__pyx_t_82, 30, __pyx_kp_s_white_dragon);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SVG_PIECE_DEF_IDS, __pyx_t_82) < 0) __PYX_ERR(0, 163, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":177
 * 	"white-horse", "white-dragon",
 * ]
 * NUMBER_JAPANESE_NUMBER_SYMBOLS = [ None, '', '', '', '', '', '', '', '', '' ]             # <<<<<<<<<<<<<<
 * NUMBER_JAPANESE_KANJI_SYMBOLS = [ None, "", "", "", "", "", "", "", "", "", "" ]
 * SVG_SQUARES = '<g stroke="black"><rect x="20" y="10" width="181" height="181" fill="none" stroke-width="1.5" /><line x1="20.5" y1="30.5" x2="200.5" y2="30.5" stroke-width="1.0" /><line x1="20.5" y1="50.5" x2="200.5" y2="50.5" stroke-width="1.0" /><line x1="20.5" y1="70.5" x2="200.5" y2="70.5" stroke-width="1.0" /><line x1="20.5" y1="90.5" x2="200.5" y2="90.5" stroke-width="1.0" /><line x1="20.5" y1="110.5" x2="200.5" y2="110.5" stroke-width="1.0" /><line x1="20.5" y1="130.5" x2="200.5" y2="130.5" stroke-width="1.0" /><line x1="20.5" y1="150.5" x2="200.5" y2="150.5" stroke-width="1.0" /><line x1="20.5" y1="170.5" x2="200.5" y2="170.5" stroke-width="1.0" /><line x1="40.5" y1="10.5" x2="40.5" y2="190.5" stroke-width="1.0" /><line x1="60.5" y1="10.5" x2="60.5" y2="190.5" stroke-width="1.0" /><line x1="80.5" y1="10.5" x2="80.5" y2="190.5" stroke-width="1.0" /><line x1="100.5" y1="10.5" x2="100.5" y2="190.5" stroke-width="1.0" /><line x1="120.5" y1="10.5" x2="120.5" y2="190.5" stroke-width="1.0" /><line x1="140.5" y1="10.5" x2="140.5" y2="190.5" stroke-width="1.0" /><line x1="160.5" y1="10.5" x2="160.5" y2="190.5" stroke-width="1.0" /><line x1="180.5" y1="10.5" x2="180.5" y2="190.5" stroke-width="1.0" /></g>'
 */
  __pyx_t_82 = PyList_New(10); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyList_SET_ITEM(__pyx_t_82, 0, Py_None);
  __Pyx_INCREF(__pyx_kp_s__31);
  __Pyx_GIVEREF(__pyx_kp_s__31);
  PyList_SET_ITEM(__pyx_t_82, 1, __pyx_kp_s__31);
  __Pyx_INCREF(__pyx_kp_s__32);
  __Pyx_GIVEREF(__pyx_kp_s__32);
  PyList_SET_ITEM(__pyx_t_82, 2, __pyx_kp_s__32);
  __Pyx_INCREF(__pyx_kp_s__33);
  __Pyx_GIVEREF(__pyx_kp_s__33);
  PyList_SET_ITEM(__pyx_t_82, 3, __pyx_kp_s__33);
  __Pyx_INCREF(__pyx_kp_s__34);
  __Pyx_GIVEREF(__pyx_kp_s__34);
  PyList_SET_ITEM(__pyx_t_82, 4, __pyx_kp_s__34);
  __Pyx_INCREF(__pyx_kp_s__35);
  __Pyx_GIVEREF(__pyx_kp_s__35);
  PyList_SET_ITEM(__pyx_t_82, 5, __pyx_kp_s__35);
  __Pyx_INCREF(__pyx_kp_s__36);
  __Pyx_GIVEREF(__pyx_kp_s__36);
  PyList_SET_ITEM(__pyx_t_82, 6, __pyx_kp_s__36);
  __Pyx_INCREF(__pyx_kp_s__37);
  __Pyx_GIVEREF(__pyx_kp_s__37);
  PyList_SET_ITEM(__pyx_t_82, 7, __pyx_kp_s__37);
  __Pyx_INCREF(__pyx_kp_s__38);
  __Pyx_GIVEREF(__pyx_kp_s__38);
  PyList_SET_ITEM(__pyx_t_82, 8, __pyx_kp_s__38);
  __Pyx_INCREF(__pyx_kp_s__39);
  __Pyx_GIVEREF(__pyx_kp_s__39);
  PyList_SET_ITEM(__pyx_t_82, 9, __pyx_kp_s__39);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NUMBER_JAPANESE_NUMBER_SYMBOLS, __pyx_t_82) < 0) __PYX_ERR(0, 177, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":178
 * ]
 * NUMBER_JAPANESE_NUMBER_SYMBOLS = [ None, '', '', '', '', '', '', '', '', '' ]
 * NUMBER_JAPANESE_KANJI_SYMBOLS = [ None, "", "", "", "", "", "", "", "", "", "" ]             # <<<<<<<<<<<<<<
 * SVG_SQUARES = '<g stroke="black"><rect x="20" y="10" width="181" height="181" fill="none" stroke-width="1.5" /><line x1="20.5" y1="30.5" x2="200.5" y2="30.5" stroke-width="1.0" /><line x1="20.5" y1="50.5" x2="200.5" y2="50.5" stroke-width="1.0" /><line x1="20.5" y1="70.5" x2="200.5" y2="70.5" stroke-width="1.0" /><line x1="20.5" y1="90.5" x2="200.5" y2="90.5" stroke-width="1.0" /><line x1="20.5" y1="110.5" x2="200.5" y2="110.5" stroke-width="1.0" /><line x1="20.5" y1="130.5" x2="200.5" y2="130.5" stroke-width="1.0" /><line x1="20.5" y1="150.5" x2="200.5" y2="150.5" stroke-width="1.0" /><line x1="20.5" y1="170.5" x2="200.5" y2="170.5" stroke-width="1.0" /><line x1="40.5" y1="10.5" x2="40.5" y2="190.5" stroke-width="1.0" /><line x1="60.5" y1="10.5" x2="60.5" y2="190.5" stroke-width="1.0" /><line x1="80.5" y1="10.5" x2="80.5" y2="190.5" stroke-width="1.0" /><line x1="100.5" y1="10.5" x2="100.5" y2="190.5" stroke-width="1.0" /><line x1="120.5" y1="10.5" x2="120.5" y2="190.5" stroke-width="1.0" /><line x1="140.5" y1="10.5" x2="140.5" y2="190.5" stroke-width="1.0" /><line x1="160.5" y1="10.5" x2="160.5" y2="190.5" stroke-width="1.0" /><line x1="180.5" y1="10.5" x2="180.5" y2="190.5" stroke-width="1.0" /></g>'
 * SVG_COORDINATES = '<g><text font-family="serif" text-anchor="middle" font-size="9" x="30.5" y="8">9</text><text font-family="serif" text-anchor="middle" font-size="9" x="50.5" y="8">8</text><text font-family="serif" text-anchor="middle" font-size="9" x="70.5" y="8">7</text><text font-family="serif" text-anchor="middle" font-size="9" x="90.5" y="8">6</text><text font-family="serif" text-anchor="middle" font-size="9" x="110.5" y="8">5</text><text font-family="serif" text-anchor="middle" font-size="9" x="130.5" y="8">4</text><text font-family="serif" text-anchor="middle" font-size="9" x="150.5" y="8">3</text><text font-family="serif" text-anchor="middle" font-size="9" x="170.5" y="8">2</text><text font-family="serif" text-anchor="middle" font-size="9" x="190.5" y="8">1</text><text font-family="serif" font-size="9" x="203.5" y="23"></text><text font-family="serif" font-size="9" x="203.5" y="43"></text><text font-family="serif" font-size="9" x="203.5" y="63"></text><text font-family="serif" font-size="9" x="203.5" y="83"></text><text font-family="serif" font-size="9" x="203.5" y="103"></text><text font-family="serif" font-size="9" x="203.5" y="123"></text><text font-family="serif" font-size="9" x="203.5" y="143"></text><text font-family="serif" font-size="9" x="203.5" y="163"></text><text font-family="serif" font-size="9" x="203.5" y="183"></text></g>'
 */
  __pyx_t_82 = PyList_New(11); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 178, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyList_SET_ITEM(__pyx_t_82, 0, Py_None);
  __Pyx_INCREF(__pyx_kp_s__40);
  __Pyx_GIVEREF(__pyx_kp_s__40);
  PyList_SET_ITEM(__pyx_t_82, 1, __pyx_kp_s__40);
  __Pyx_INCREF(__pyx_kp_s__41);
  __Pyx_GIVEREF(__pyx_kp_s__41);
  PyList_SET_ITEM(__pyx_t_82, 2, __pyx_kp_s__41);
  __Pyx_INCREF(__pyx_kp_s__42);
  __Pyx_GIVEREF(__pyx_kp_s__42);
  PyList_SET_ITEM(__pyx_t_82, 3, __pyx_kp_s__42);
  __Pyx_INCREF(__pyx_kp_s__43);
  __Pyx_GIVEREF(__pyx_kp_s__43);
  PyList_SET_ITEM(__pyx_t_82, 4, __pyx_kp_s__43);
  __Pyx_INCREF(__pyx_kp_s__44);
  __Pyx_GIVEREF(__pyx_kp_s__44);
  PyList_SET_ITEM(__pyx_t_82, 5, __pyx_kp_s__44);
  __Pyx_INCREF(__pyx_kp_s__45);
  __Pyx_GIVEREF(__pyx_kp_s__45);
  PyList_SET_ITEM(__pyx_t_82, 6, __pyx_kp_s__45);
  __Pyx_INCREF(__pyx_kp_s__46);
  __Pyx_GIVEREF(__pyx_kp_s__46);
  PyList_SET_ITEM(__pyx_t_82, 7, __pyx_kp_s__46);
  __Pyx_INCREF(__pyx_kp_s__47);
  __Pyx_GIVEREF(__pyx_kp_s__47);
  PyList_SET_ITEM(__pyx_t_82, 8, __pyx_kp_s__47);
  __Pyx_INCREF(__pyx_kp_s__48);
  __Pyx_GIVEREF(__pyx_kp_s__48);
  PyList_SET_ITEM(__pyx_t_82, 9, __pyx_kp_s__48);
  __Pyx_INCREF(__pyx_kp_s__49);
  __Pyx_GIVEREF(__pyx_kp_s__49);
  PyList_SET_ITEM(__pyx_t_82, 10, __pyx_kp_s__49);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NUMBER_JAPANESE_KANJI_SYMBOLS, __pyx_t_82) < 0) __PYX_ERR(0, 178, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":179
 * NUMBER_JAPANESE_NUMBER_SYMBOLS = [ None, '', '', '', '', '', '', '', '', '' ]
 * NUMBER_JAPANESE_KANJI_SYMBOLS = [ None, "", "", "", "", "", "", "", "", "", "" ]
 * SVG_SQUARES = '<g stroke="black"><rect x="20" y="10" width="181" height="181" fill="none" stroke-width="1.5" /><line x1="20.5" y1="30.5" x2="200.5" y2="30.5" stroke-width="1.0" /><line x1="20.5" y1="50.5" x2="200.5" y2="50.5" stroke-width="1.0" /><line x1="20.5" y1="70.5" x2="200.5" y2="70.5" stroke-width="1.0" /><line x1="20.5" y1="90.5" x2="200.5" y2="90.5" stroke-width="1.0" /><line x1="20.5" y1="110.5" x2="200.5" y2="110.5" stroke-width="1.0" /><line x1="20.5" y1="130.5" x2="200.5" y2="130.5" stroke-width="1.0" /><line x1="20.5" y1="150.5" x2="200.5" y2="150.5" stroke-width="1.0" /><line x1="20.5" y1="170.5" x2="200.5" y2="170.5" stroke-width="1.0" /><line x1="40.5" y1="10.5" x2="40.5" y2="190.5" stroke-width="1.0" /><line x1="60.5" y1="10.5" x2="60.5" y2="190.5" stroke-width="1.0" /><line x1="80.5" y1="10.5" x2="80.5" y2="190.5" stroke-width="1.0" /><line x1="100.5" y1="10.5" x2="100.5" y2="190.5" stroke-width="1.0" /><line x1="120.5" y1="10.5" x2="120.5" y2="190.5" stroke-width="1.0" /><line x1="140.5" y1="10.5" x2="140.5" y2="190.5" stroke-width="1.0" /><line x1="160.5" y1="10.5" x2="160.5" y2="190.5" stroke-width="1.0" /><line x1="180.5" y1="10.5" x2="180.5" y2="190.5" stroke-width="1.0" /></g>'             # <<<<<<<<<<<<<<
 * SVG_COORDINATES = '<g><text font-family="serif" text-anchor="middle" font-size="9" x="30.5" y="8">9</text><text font-family="serif" text-anchor="middle" font-size="9" x="50.5" y="8">8</text><text font-family="serif" text-anchor="middle" font-size="9" x="70.5" y="8">7</text><text font-family="serif" text-anchor="middle" font-size="9" x="90.5" y="8">6</text><text font-family="serif" text-anchor="middle" font-size="9" x="110.5" y="8">5</text><text font-family="serif" text-anchor="middle" font-size="9" x="130.5" y="8">4</text><text font-family="serif" text-anchor="middle" font-size="9" x="150.5" y="8">3</text><text font-family="serif" text-anchor="middle" font-size="9" x="170.5" y="8">2</text><text font-family="serif" text-anchor="middle" font-size="9" x="190.5" y="8">1</text><text font-family="serif" font-size="9" x="203.5" y="23"></text><text font-family="serif" font-size="9" x="203.5" y="43"></text><text font-family="serif" font-size="9" x="203.5" y="63"></text><text font-family="serif" font-size="9" x="203.5" y="83"></text><text font-family="serif" font-size="9" x="203.5" y="103"></text><text font-family="serif" font-size="9" x="203.5" y="123"></text><text font-family="serif" font-size="9" x="203.5" y="143"></text><text font-family="serif" font-size="9" x="203.5" y="163"></text><text font-family="serif" font-size="9" x="203.5" y="183"></text></g>'
 * PIECE_SYMBOLS = [
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SVG_SQUARES, __pyx_kp_s_g_stroke_black_rect_x_20_y_10_w) < 0) __PYX_ERR(0, 179, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":180
 * NUMBER_JAPANESE_KANJI_SYMBOLS = [ None, "", "", "", "", "", "", "", "", "", "" ]
 * SVG_SQUARES = '<g stroke="black"><rect x="20" y="10" width="181" height="181" fill="none" stroke-width="1.5" /><line x1="20.5" y1="30.5" x2="200.5" y2="30.5" stroke-width="1.0" /><line x1="20.5" y1="50.5" x2="200.5" y2="50.5" stroke-width="1.0" /><line x1="20.5" y1="70.5" x2="200.5" y2="70.5" stroke-width="1.0" /><line x1="20.5" y1="90.5" x2="200.5" y2="90.5" stroke-width="1.0" /><line x1="20.5" y1="110.5" x2="200.5" y2="110.5" stroke-width="1.0" /><line x1="20.5" y1="130.5" x2="200.5" y2="130.5" stroke-width="1.0" /><line x1="20.5" y1="150.5" x2="200.5" y2="150.5" stroke-width="1.0" /><line x1="20.5" y1="170.5" x2="200.5" y2="170.5" stroke-width="1.0" /><line x1="40.5" y1="10.5" x2="40.5" y2="190.5" stroke-width="1.0" /><line x1="60.5" y1="10.5" x2="60.5" y2="190.5" stroke-width="1.0" /><line x1="80.5" y1="10.5" x2="80.5" y2="190.5" stroke-width="1.0" /><line x1="100.5" y1="10.5" x2="100.5" y2="190.5" stroke-width="1.0" /><line x1="120.5" y1="10.5" x2="120.5" y2="190.5" stroke-width="1.0" /><line x1="140.5" y1="10.5" x2="140.5" y2="190.5" stroke-width="1.0" /><line x1="160.5" y1="10.5" x2="160.5" y2="190.5" stroke-width="1.0" /><line x1="180.5" y1="10.5" x2="180.5" y2="190.5" stroke-width="1.0" /></g>'
 * SVG_COORDINATES = '<g><text font-family="serif" text-anchor="middle" font-size="9" x="30.5" y="8">9</text><text font-family="serif" text-anchor="middle" font-size="9" x="50.5" y="8">8</text><text font-family="serif" text-anchor="middle" font-size="9" x="70.5" y="8">7</text><text font-family="serif" text-anchor="middle" font-size="9" x="90.5" y="8">6</text><text font-family="serif" text-anchor="middle" font-size="9" x="110.5" y="8">5</text><text font-family="serif" text-anchor="middle" font-size="9" x="130.5" y="8">4</text><text font-family="serif" text-anchor="middle" font-size="9" x="150.5" y="8">3</text><text font-family="serif" text-anchor="middle" font-size="9" x="170.5" y="8">2</text><text font-family="serif" text-anchor="middle" font-size="9" x="190.5" y="8">1</text><text font-family="serif" font-size="9" x="203.5" y="23"></text><text font-family="serif" font-size="9" x="203.5" y="43"></text><text font-family="serif" font-size="9" x="203.5" y="63"></text><text font-family="serif" font-size="9" x="203.5" y="83"></text><text font-family="serif" font-size="9" x="203.5" y="103"></text><text font-family="serif" font-size="9" x="203.5" y="123"></text><text font-family="serif" font-size="9" x="203.5" y="143"></text><text font-family="serif" font-size="9" x="203.5" y="163"></text><text font-family="serif" font-size="9" x="203.5" y="183"></text></g>'             # <<<<<<<<<<<<<<
 * PIECE_SYMBOLS = [
 * 	'',
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SVG_COORDINATES, __pyx_kp_s_g_text_font_family_serif_text_a) < 0) __PYX_ERR(0, 180, __pyx_L1_error)

  /* "cshogi/_cshogi.pyx":181
 * SVG_SQUARES = '<g stroke="black"><rect x="20" y="10" width="181" height="181" fill="none" stroke-width="1.5" /><line x1="20.5" y1="30.5" x2="200.5" y2="30.5" stroke-width="1.0" /><line x1="20.5" y1="50.5" x2="200.5" y2="50.5" stroke-width="1.0" /><line x1="20.5" y1="70.5" x2="200.5" y2="70.5" stroke-width="1.0" /><line x1="20.5" y1="90.5" x2="200.5" y2="90.5" stroke-width="1.0" /><line x1="20.5" y1="110.5" x2="200.5" y2="110.5" stroke-width="1.0" /><line x1="20.5" y1="130.5" x2="200.5" y2="130.5" stroke-width="1.0" /><line x1="20.5" y1="150.5" x2="200.5" y2="150.5" stroke-width="1.0" /><line x1="20.5" y1="170.5" x2="200.5" y2="170.5" stroke-width="1.0" /><line x1="40.5" y1="10.5" x2="40.5" y2="190.5" stroke-width="1.0" /><line x1="60.5" y1="10.5" x2="60.5" y2="190.5" stroke-width="1.0" /><line x1="80.5" y1="10.5" x2="80.5" y2="190.5" stroke-width="1.0" /><line x1="100.5" y1="10.5" x2="100.5" y2="190.5" stroke-width="1.0" /><line x1="120.5" y1="10.5" x2="120.5" y2="190.5" stroke-width="1.0" /><line x1="140.5" y1="10.5" x2="140.5" y2="190.5" stroke-width="1.0" /><line x1="160.5" y1="10.5" x2="160.5" y2="190.5" stroke-width="1.0" /><line x1="180.5" y1="10.5" x2="180.5" y2="190.5" stroke-width="1.0" /></g>'
 * SVG_COORDINATES = '<g><text font-family="serif" text-anchor="middle" font-size="9" x="30.5" y="8">9</text><text font-family="serif" text-anchor="middle" font-size="9" x="50.5" y="8">8</text><text font-family="serif" text-anchor="middle" font-size="9" x="70.5" y="8">7</text><text font-family="serif" text-anchor="middle" font-size="9" x="90.5" y="8">6</text><text font-family="serif" text-anchor="middle" font-size="9" x="110.5" y="8">5</text><text font-family="serif" text-anchor="middle" font-size="9" x="130.5" y="8">4</text><text font-family="serif" text-anchor="middle" font-size="9" x="150.5" y="8">3</text><text font-family="serif" text-anchor="middle" font-size="9" x="170.5" y="8">2</text><text font-family="serif" text-anchor="middle" font-size="9" x="190.5" y="8">1</text><text font-family="serif" font-size="9" x="203.5" y="23"></text><text font-family="serif" font-size="9" x="203.5" y="43"></text><text font-family="serif" font-size="9" x="203.5" y="63"></text><text font-family="serif" font-size="9" x="203.5" y="83"></text><text font-family="serif" font-size="9" x="203.5" y="103"></text><text font-family="serif" font-size="9" x="203.5" y="123"></text><text font-family="serif" font-size="9" x="203.5" y="143"></text><text font-family="serif" font-size="9" x="203.5" y="163"></text><text font-family="serif" font-size="9" x="203.5" y="183"></text></g>'
 * PIECE_SYMBOLS = [             # <<<<<<<<<<<<<<
 * 	'',
 * 	'p', 'l', 'n', 's', 'b', 'r', 'g', 'k', '+p', '+l', '+n', '+s', '+b', '+r'
 */
  __pyx_t_82 = PyList_New(15); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  __Pyx_INCREF(__pyx_kp_s__50);
  __Pyx_GIVEREF(__pyx_kp_s__50);
  PyList_SET_ITEM(__pyx_t_82, 0, __pyx_kp_s__50);
  __Pyx_INCREF(__pyx_n_s_p);
  __Pyx_GIVEREF(__pyx_n_s_p);
  PyList_SET_ITEM(__pyx_t_82, 1, __pyx_n_s_p);
  __Pyx_INCREF(__pyx_n_s_l);
  __Pyx_GIVEREF(__pyx_n_s_l);
  PyList_SET_ITEM(__pyx_t_82, 2, __pyx_n_s_l);
  __Pyx_INCREF(__pyx_n_s_n);
  __Pyx_GIVEREF(__pyx_n_s_n);
  PyList_SET_ITEM(__pyx_t_82, 3, __pyx_n_s_n);
  __Pyx_INCREF(__pyx_n_s_s);
  __Pyx_GIVEREF(__pyx_n_s_s);
  PyList_SET_ITEM(__pyx_t_82, 4, __pyx_n_s_s);
  __Pyx_INCREF(__pyx_n_s_b);
  __Pyx_GIVEREF(__pyx_n_s_b);
  PyList_SET_ITEM(__pyx_t_82, 5, __pyx_n_s_b);
  __Pyx_INCREF(__pyx_n_s_r);
  __Pyx_GIVEREF(__pyx_n_s_r);
  PyList_SET_ITEM(__pyx_t_82, 6, __pyx_n_s_r);
  __Pyx_INCREF(__pyx_n_s_g);
  __Pyx_GIVEREF(__pyx_n_s_g);
  PyList_SET_ITEM(__pyx_t_82, 7, __pyx_n_s_g);
  __Pyx_INCREF(__pyx_n_s_k);
  __Pyx_GIVEREF(__pyx_n_s_k);
  PyList_SET_ITEM(__pyx_t_82, 8, __pyx_n_s_k);
  __Pyx_INCREF(__pyx_kp_s_p_2);
  __Pyx_GIVEREF(__pyx_kp_s_p_2);
  PyList_SET_ITEM(__pyx_t_82, 9, __pyx_kp_s_p_2);
  __Pyx_INCREF(__pyx_kp_s_l_2);
  __Pyx_GIVEREF(__pyx_kp_s_l_2);
  PyList_SET_ITEM(__pyx_t_82, 10, __pyx_kp_s_l_2);
  __Pyx_INCREF(__pyx_kp_s_n_2);
  __Pyx_GIVEREF(__pyx_kp_s_n_2);
  PyList_SET_ITEM(__pyx_t_82, 11, __pyx_kp_s_n_2);
  __Pyx_INCREF(__pyx_kp_s_s_2);
  __Pyx_GIVEREF(__pyx_kp_s_s_2);
  PyList_SET_ITEM(__pyx_t_82, 12, __pyx_kp_s_s_2);
  __Pyx_INCREF(__pyx_kp_s_b_2);
  __Pyx_GIVEREF(__pyx_kp_s_b_2);
  PyList_SET_ITEM(__pyx_t_82, 13, __pyx_kp_s_b_2);
  __Pyx_INCREF(__pyx_kp_s_r_2);
  __Pyx_GIVEREF(__pyx_kp_s_r_2);
  PyList_SET_ITEM(__pyx_t_82, 14, __pyx_kp_s_r_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PIECE_SYMBOLS, __pyx_t_82) < 0) __PYX_ERR(0, 181, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":185
 * 	'p', 'l', 'n', 's', 'b', 'r', 'g', 'k', '+p', '+l', '+n', '+s', '+b', '+r'
 * ]
 * PIECE_JAPANESE_SYMBOLS = [             # <<<<<<<<<<<<<<
 * 	'',
 * 	'', '', '', '', '', '', '', '', '', '', '', '', '', ''
 */
  __pyx_t_82 = PyList_New(15); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  __Pyx_INCREF(__pyx_kp_s__50);
  __Pyx_GIVEREF(__pyx_kp_s__50);
  PyList_SET_ITEM(__pyx_t_82, 0, __pyx_kp_s__50);
  __Pyx_INCREF(__pyx_kp_s__51);
  __Pyx_GIVEREF(__pyx_kp_s__51);
  PyList_SET_ITEM(__pyx_t_82, 1, __pyx_kp_s__51);
  __Pyx_INCREF(__pyx_kp_s__52);
  __Pyx_GIVEREF(__pyx_kp_s__52);
  PyList_SET_ITEM(__pyx_t_82, 2, __pyx_kp_s__52);
  __Pyx_INCREF(__pyx_kp_s__53);
  __Pyx_GIVEREF(__pyx_kp_s__53);
  PyList_SET_ITEM(__pyx_t_82, 3, __pyx_kp_s__53);
  __Pyx_INCREF(__pyx_kp_s__54);
  __Pyx_GIVEREF(__pyx_kp_s__54);
  PyList_SET_ITEM(__pyx_t_82, 4, __pyx_kp_s__54);
  __Pyx_INCREF(__pyx_kp_s__55);
  __Pyx_GIVEREF(__pyx_kp_s__55);
  PyList_SET_ITEM(__pyx_t_82, 5, __pyx_kp_s__55);
  __Pyx_INCREF(__pyx_kp_s__56);
  __Pyx_GIVEREF(__pyx_kp_s__56);
  PyList_SET_ITEM(__pyx_t_82, 6, __pyx_kp_s__56);
  __Pyx_INCREF(__pyx_kp_s__57);
  __Pyx_GIVEREF(__pyx_kp_s__57);
  PyList_SET_ITEM(__pyx_t_82, 7, __pyx_kp_s__57);
  __Pyx_INCREF(__pyx_kp_s__58);
  __Pyx_GIVEREF(__pyx_kp_s__58);
  PyList_SET_ITEM(__pyx_t_82, 8, __pyx_kp_s__58);
  __Pyx_INCREF(__pyx_kp_s__59);
  __Pyx_GIVEREF(__pyx_kp_s__59);
  PyList_SET_ITEM(__pyx_t_82, 9, __pyx_kp_s__59);
  __Pyx_INCREF(__pyx_kp_s__60);
  __Pyx_GIVEREF(__pyx_kp_s__60);
  PyList_SET_ITEM(__pyx_t_82, 10, __pyx_kp_s__60);
  __Pyx_INCREF(__pyx_kp_s__61);
  __Pyx_GIVEREF(__pyx_kp_s__61);
  PyList_SET_ITEM(__pyx_t_82, 11, __pyx_kp_s__61);
  __Pyx_INCREF(__pyx_kp_s__62);
  __Pyx_GIVEREF(__pyx_kp_s__62);
  PyList_SET_ITEM(__pyx_t_82, 12, __pyx_kp_s__62);
  __Pyx_INCREF(__pyx_kp_s__63);
  __Pyx_GIVEREF(__pyx_kp_s__63);
  PyList_SET_ITEM(__pyx_t_82, 13, __pyx_kp_s__63);
  __Pyx_INCREF(__pyx_kp_s__64);
  __Pyx_GIVEREF(__pyx_kp_s__64);
  PyList_SET_ITEM(__pyx_t_82, 14, __pyx_kp_s__64);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PIECE_JAPANESE_SYMBOLS, __pyx_t_82) < 0) __PYX_ERR(0, 185, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":189
 * 	'', '', '', '', '', '', '', '', '', '', '', '', '', ''
 * ]
 * HAND_PIECE_JAPANESE_SYMBOLS = [             # <<<<<<<<<<<<<<
 * 	"", "", "", "",
 * 	"",
 */
  __pyx_t_82 = PyList_New(7); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  __Pyx_INCREF(__pyx_kp_s__51);
  __Pyx_GIVEREF(__pyx_kp_s__51);
  PyList_SET_ITEM(__pyx_t_82, 0, __pyx_kp_s__51);
  __Pyx_INCREF(__pyx_kp_s__52);
  __Pyx_GIVEREF(__pyx_kp_s__52);
  PyList_SET_ITEM(__pyx_t_82, 1, __pyx_kp_s__52);
  __Pyx_INCREF(__pyx_kp_s__53);
  __Pyx_GIVEREF(__pyx_kp_s__53);
  PyList_SET_ITEM(__pyx_t_82, 2, __pyx_kp_s__53);
  __Pyx_INCREF(__pyx_kp_s__54);
  __Pyx_GIVEREF(__pyx_kp_s__54);
  PyList_SET_ITEM(__pyx_t_82, 3, __pyx_kp_s__54);
  __Pyx_INCREF(__pyx_kp_s__57);
  __Pyx_GIVEREF(__pyx_kp_s__57);
  PyList_SET_ITEM(__pyx_t_82, 4, __pyx_kp_s__57);
  __Pyx_INCREF(__pyx_kp_s__55);
  __Pyx_GIVEREF(__pyx_kp_s__55);
  PyList_SET_ITEM(__pyx_t_82, 5, __pyx_kp_s__55);
  __Pyx_INCREF(__pyx_kp_s__56);
  __Pyx_GIVEREF(__pyx_kp_s__56);
  PyList_SET_ITEM(__pyx_t_82, 6, __pyx_kp_s__56);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HAND_PIECE_JAPANESE_SYMBOLS, __pyx_t_82) < 0) __PYX_ERR(0, 189, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":195
 * ]
 * 
 * class SvgWrapper(str):             # <<<<<<<<<<<<<<
 * 	def _repr_svg_(self):
 * 		return self
 */
  __pyx_t_82 = PyTuple_New(1); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  __Pyx_INCREF(((PyObject *)(&PyString_Type)));
  __Pyx_GIVEREF(((PyObject *)(&PyString_Type)));
  PyTuple_SET_ITEM(__pyx_t_82, 0, ((PyObject *)(&PyString_Type)));
  __pyx_t_53 = __Pyx_CalculateMetaclass(NULL, __pyx_t_82); if (unlikely(!__pyx_t_53)) __PYX_ERR(0, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_53);
  __pyx_t_54 = __Pyx_Py3MetaclassPrepare(__pyx_t_53, __pyx_t_82, __pyx_n_s_SvgWrapper, __pyx_n_s_SvgWrapper, (PyObject *) NULL, __pyx_n_s_cshogi__cshogi, (PyObject *) NULL); if (unlikely(!__pyx_t_54)) __PYX_ERR(0, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_54);

  /* "cshogi/_cshogi.pyx":196
 * 
 * class SvgWrapper(str):
 * 	def _repr_svg_(self):             # <<<<<<<<<<<<<<
 * 		return self
 * 
 */
  __pyx_t_55 = __Pyx_CyFunction_New(&__pyx_mdef_6cshogi_7_cshogi_10SvgWrapper_1_repr_svg_, 0, __pyx_n_s_SvgWrapper__repr_svg, NULL, __pyx_n_s_cshogi__cshogi, __pyx_d, ((PyObject *)__pyx_codeobj__66)); if (unlikely(!__pyx_t_55)) __PYX_ERR(0, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_55);
  if (__Pyx_SetNameInClass(__pyx_t_54, __pyx_n_s_repr_svg, __pyx_t_55) < 0) __PYX_ERR(0, 196, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_55); __pyx_t_55 = 0;

  /* "cshogi/_cshogi.pyx":195
 * ]
 * 
 * class SvgWrapper(str):             # <<<<<<<<<<<<<<
 * 	def _repr_svg_(self):
 * 		return self
 */
  __pyx_t_55 = __Pyx_Py3ClassCreate(__pyx_t_53, __pyx_n_s_SvgWrapper, __pyx_t_82, __pyx_t_54, NULL, 0, 1); if (unlikely(!__pyx_t_55)) __PYX_ERR(0, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_55);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SvgWrapper, __pyx_t_55) < 0) __PYX_ERR(0, 195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_55); __pyx_t_55 = 0;
  __Pyx_DECREF(__pyx_t_54); __pyx_t_54 = 0;
  __Pyx_DECREF(__pyx_t_53); __pyx_t_53 = 0;
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":202
 * 	void initTable()
 * 
 * initTable()             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "position.hpp":
 */
  initTable();

  /* "cshogi/_cshogi.pyx":209
 * 		void initZobrist()
 * 
 * Position.initZobrist()             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "cshogi.h":
 */
  Position::initZobrist();

  /* "cshogi/_cshogi.pyx":216
 * 	void Book_init()
 * 
 * HuffmanCodedPos_init()             # <<<<<<<<<<<<<<
 * PackedSfen_init()
 * Book_init()
 */
  HuffmanCodedPos_init();

  /* "cshogi/_cshogi.pyx":217
 * 
 * HuffmanCodedPos_init()
 * PackedSfen_init()             # <<<<<<<<<<<<<<
 * Book_init()
 * 
 */
  PackedSfen_init();

  /* "cshogi/_cshogi.pyx":218
 * HuffmanCodedPos_init()
 * PackedSfen_init()
 * Book_init()             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "cshogi.h":
 */
  Book_init();

  /* "cshogi/_cshogi.pyx":224
 * 	string __to_csa(const int move)
 * 
 * def to_usi(int move):             # <<<<<<<<<<<<<<
 * 	return __to_usi(move)
 * 
 */
  __pyx_t_82 = PyCFunction_NewEx(&__pyx_mdef_6cshogi_7_cshogi_1to_usi, NULL, __pyx_n_s_cshogi__cshogi); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_to_usi, __pyx_t_82) < 0) __PYX_ERR(0, 224, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":227
 * 	return __to_usi(move)
 * 
 * def to_csa(int move):             # <<<<<<<<<<<<<<
 * 	return __to_csa(move)
 * 
 */
  __pyx_t_82 = PyCFunction_NewEx(&__pyx_mdef_6cshogi_7_cshogi_3to_csa, NULL, __pyx_n_s_cshogi__cshogi); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_to_csa, __pyx_t_82) < 0) __PYX_ERR(0, 227, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":575
 * 			return self.to_svg(move)
 * 
 * def piece_to_piece_type(int p):             # <<<<<<<<<<<<<<
 * 	return __piece_to_piece_type(p)
 * 
 */
  __pyx_t_82 = PyCFunction_NewEx(&__pyx_mdef_6cshogi_7_cshogi_5piece_to_piece_type, NULL, __pyx_n_s_cshogi__cshogi); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 575, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_piece_to_piece_type, __pyx_t_82) < 0) __PYX_ERR(0, 575, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":624
 * 		return self.__ml.size()
 * 
 * def move_to(int move):             # <<<<<<<<<<<<<<
 * 	return __move_to(move)
 * 
 */
  __pyx_t_82 = PyCFunction_NewEx(&__pyx_mdef_6cshogi_7_cshogi_7move_to, NULL, __pyx_n_s_cshogi__cshogi); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 624, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_move_to, __pyx_t_82) < 0) __PYX_ERR(0, 624, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":627
 * 	return __move_to(move)
 * 
 * def move_from(int move):             # <<<<<<<<<<<<<<
 * 	return __move_from(move)
 * 
 */
  __pyx_t_82 = PyCFunction_NewEx(&__pyx_mdef_6cshogi_7_cshogi_9move_from, NULL, __pyx_n_s_cshogi__cshogi); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 627, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_move_from, __pyx_t_82) < 0) __PYX_ERR(0, 627, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":630
 * 	return __move_from(move)
 * 
 * def move_cap(int move):             # <<<<<<<<<<<<<<
 * 	return __move_cap(move)
 * 
 */
  __pyx_t_82 = PyCFunction_NewEx(&__pyx_mdef_6cshogi_7_cshogi_11move_cap, NULL, __pyx_n_s_cshogi__cshogi); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 630, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_move_cap, __pyx_t_82) < 0) __PYX_ERR(0, 630, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":633
 * 	return __move_cap(move)
 * 
 * def move_is_promotion(int move):             # <<<<<<<<<<<<<<
 * 	return __move_is_promotion(move)
 * 
 */
  __pyx_t_82 = PyCFunction_NewEx(&__pyx_mdef_6cshogi_7_cshogi_13move_is_promotion, NULL, __pyx_n_s_cshogi__cshogi); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_move_is_promotion, __pyx_t_82) < 0) __PYX_ERR(0, 633, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":636
 * 	return __move_is_promotion(move)
 * 
 * def move_is_drop(int move):             # <<<<<<<<<<<<<<
 * 	return __move_is_drop(move)
 * 
 */
  __pyx_t_82 = PyCFunction_NewEx(&__pyx_mdef_6cshogi_7_cshogi_15move_is_drop, NULL, __pyx_n_s_cshogi__cshogi); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 636, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_move_is_drop, __pyx_t_82) < 0) __PYX_ERR(0, 636, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":639
 * 	return __move_is_drop(move)
 * 
 * def move_from_piece_type(int move):             # <<<<<<<<<<<<<<
 * 	return __move_from_piece_type(move)
 * 
 */
  __pyx_t_82 = PyCFunction_NewEx(&__pyx_mdef_6cshogi_7_cshogi_17move_from_piece_type, NULL, __pyx_n_s_cshogi__cshogi); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 639, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_move_from_piece_type, __pyx_t_82) < 0) __PYX_ERR(0, 639, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":642
 * 	return __move_from_piece_type(move)
 * 
 * def move_drop_hand_piece(int move):             # <<<<<<<<<<<<<<
 * 	return __move_drop_hand_piece(move)
 * 
 */
  __pyx_t_82 = PyCFunction_NewEx(&__pyx_mdef_6cshogi_7_cshogi_19move_drop_hand_piece, NULL, __pyx_n_s_cshogi__cshogi); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 642, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_move_drop_hand_piece, __pyx_t_82) < 0) __PYX_ERR(0, 642, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":645
 * 	return __move_drop_hand_piece(move)
 * 
 * def move16(int move):             # <<<<<<<<<<<<<<
 * 	return __move16(move)
 * 
 */
  __pyx_t_82 = PyCFunction_NewEx(&__pyx_mdef_6cshogi_7_cshogi_21move16, NULL, __pyx_n_s_cshogi__cshogi); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_move16, __pyx_t_82) < 0) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":648
 * 	return __move16(move)
 * 
 * def move16_from_psv(unsigned short move16):             # <<<<<<<<<<<<<<
 * 	return __move16_from_psv(move16)
 * 
 */
  __pyx_t_82 = PyCFunction_NewEx(&__pyx_mdef_6cshogi_7_cshogi_23move16_from_psv, NULL, __pyx_n_s_cshogi__cshogi); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 648, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_move16_from_psv, __pyx_t_82) < 0) __PYX_ERR(0, 648, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":651
 * 	return __move16_from_psv(move16)
 * 
 * def move16_to_psv(unsigned short move16):             # <<<<<<<<<<<<<<
 * 	return __move16_to_psv(move16)
 * 
 */
  __pyx_t_82 = PyCFunction_NewEx(&__pyx_mdef_6cshogi_7_cshogi_25move16_to_psv, NULL, __pyx_n_s_cshogi__cshogi); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 651, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_move16_to_psv, __pyx_t_82) < 0) __PYX_ERR(0, 651, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":654
 * 	return __move16_to_psv(move16)
 * 
 * def move_rotate(int move):             # <<<<<<<<<<<<<<
 * 	return __move_rotate(move)
 * 
 */
  __pyx_t_82 = PyCFunction_NewEx(&__pyx_mdef_6cshogi_7_cshogi_27move_rotate, NULL, __pyx_n_s_cshogi__cshogi); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 654, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_move_rotate, __pyx_t_82) < 0) __PYX_ERR(0, 654, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":657
 * 	return __move_rotate(move)
 * 
 * def move_to_usi(int move):             # <<<<<<<<<<<<<<
 * 	return __move_to_usi(move).decode('ascii')
 * 
 */
  __pyx_t_82 = PyCFunction_NewEx(&__pyx_mdef_6cshogi_7_cshogi_29move_to_usi, NULL, __pyx_n_s_cshogi__cshogi); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_move_to_usi, __pyx_t_82) < 0) __PYX_ERR(0, 657, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":660
 * 	return __move_to_usi(move).decode('ascii')
 * 
 * def move_to_csa(int move):             # <<<<<<<<<<<<<<
 * 	return __move_to_csa(move).decode('ascii')
 * 
 */
  __pyx_t_82 = PyCFunction_NewEx(&__pyx_mdef_6cshogi_7_cshogi_31move_to_csa, NULL, __pyx_n_s_cshogi__cshogi); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 660, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_move_to_csa, __pyx_t_82) < 0) __PYX_ERR(0, 660, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":663
 * 	return __move_to_csa(move).decode('ascii')
 * 
 * def move_from_csa(str csa):             # <<<<<<<<<<<<<<
 * 	cdef string csa_b = csa.encode('ascii')
 * 	return __move_from_csa(csa_b)
 */
  __pyx_t_82 = PyCFunction_NewEx(&__pyx_mdef_6cshogi_7_cshogi_33move_from_csa, NULL, __pyx_n_s_cshogi__cshogi); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 663, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_move_from_csa, __pyx_t_82) < 0) __PYX_ERR(0, 663, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":667
 * 	return __move_from_csa(csa_b)
 * 
 * def opponent(int color):             # <<<<<<<<<<<<<<
 * 	return BLACK if color == WHITE else WHITE
 * 
 */
  __pyx_t_82 = PyCFunction_NewEx(&__pyx_mdef_6cshogi_7_cshogi_35opponent, NULL, __pyx_n_s_cshogi__cshogi); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 667, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_opponent, __pyx_t_82) < 0) __PYX_ERR(0, 667, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":670
 * 	return BLACK if color == WHITE else WHITE
 * 
 * _dlshogi_FEATURES1_NUM = __dlshogi_get_features1_num()             # <<<<<<<<<<<<<<
 * _dlshogi_FEATURES2_NUM = __dlshogi_get_features2_num()
 * def _dlshogi_make_move_label(int move, int color):
 */
  __pyx_t_82 = __Pyx_PyInt_From_int(__dlshogi_get_features1_num()); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 670, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_dlshogi_FEATURES1_NUM, __pyx_t_82) < 0) __PYX_ERR(0, 670, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":671
 * 
 * _dlshogi_FEATURES1_NUM = __dlshogi_get_features1_num()
 * _dlshogi_FEATURES2_NUM = __dlshogi_get_features2_num()             # <<<<<<<<<<<<<<
 * def _dlshogi_make_move_label(int move, int color):
 * 	return __dlshogi_make_move_label(move, color)
 */
  __pyx_t_82 = __Pyx_PyInt_From_int(__dlshogi_get_features2_num()); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 671, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_dlshogi_FEATURES2_NUM, __pyx_t_82) < 0) __PYX_ERR(0, 671, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":672
 * _dlshogi_FEATURES1_NUM = __dlshogi_get_features1_num()
 * _dlshogi_FEATURES2_NUM = __dlshogi_get_features2_num()
 * def _dlshogi_make_move_label(int move, int color):             # <<<<<<<<<<<<<<
 * 	return __dlshogi_make_move_label(move, color)
 * 
 */
  __pyx_t_82 = PyCFunction_NewEx(&__pyx_mdef_6cshogi_7_cshogi_37_dlshogi_make_move_label, NULL, __pyx_n_s_cshogi__cshogi); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 672, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_dlshogi_make_move_label, __pyx_t_82) < 0) __PYX_ERR(0, 672, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "cshogi/_cshogi.pyx":695
 * cdef class Parser:
 * 	@staticmethod
 * 	def parse_file(file, encoding=None):             # <<<<<<<<<<<<<<
 * 		if type(file) is str:
 * 			with open(file, 'r', encoding=encoding) as f:
 */
  __pyx_t_82 = PyCFunction_NewEx(&__pyx_mdef_6cshogi_7_cshogi_6Parser_1parse_file, NULL, __pyx_n_s_cshogi__cshogi); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 695, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_6cshogi_7_cshogi_Parser->tp_dict, __pyx_n_s_parse_file, __pyx_t_82) < 0) __PYX_ERR(0, 695, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;
  PyType_Modified(__pyx_ptype_6cshogi_7_cshogi_Parser);

  /* "cshogi/_cshogi.pyx":694
 * 
 * cdef class Parser:
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def parse_file(file, encoding=None):
 * 		if type(file) is str:
 */
  __Pyx_GetNameInClass(__pyx_t_82, (PyObject *)__pyx_ptype_6cshogi_7_cshogi_Parser, __pyx_n_s_parse_file); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 695, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  __pyx_t_53 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_82); if (unlikely(!__pyx_t_53)) __PYX_ERR(0, 694, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_53);
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_6cshogi_7_cshogi_Parser->tp_dict, __pyx_n_s_parse_file, __pyx_t_53) < 0) __PYX_ERR(0, 695, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_53); __pyx_t_53 = 0;
  PyType_Modified(__pyx_ptype_6cshogi_7_cshogi_Parser);

  /* "cshogi/_cshogi.pyx":703
 * 
 * 	@staticmethod
 * 	def parse_str(csa_str):             # <<<<<<<<<<<<<<
 * 		parsers = []
 * 		# split multiple matches
 */
  __pyx_t_53 = PyCFunction_NewEx(&__pyx_mdef_6cshogi_7_cshogi_6Parser_3parse_str, NULL, __pyx_n_s_cshogi__cshogi); if (unlikely(!__pyx_t_53)) __PYX_ERR(0, 703, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_53);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_6cshogi_7_cshogi_Parser->tp_dict, __pyx_n_s_parse_str, __pyx_t_53) < 0) __PYX_ERR(0, 703, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_53); __pyx_t_53 = 0;
  PyType_Modified(__pyx_ptype_6cshogi_7_cshogi_Parser);

  /* "cshogi/_cshogi.pyx":702
 * 			return Parser.parse_str(file.read())
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def parse_str(csa_str):
 * 		parsers = []
 */
  __Pyx_GetNameInClass(__pyx_t_53, (PyObject *)__pyx_ptype_6cshogi_7_cshogi_Parser, __pyx_n_s_parse_str); if (unlikely(!__pyx_t_53)) __PYX_ERR(0, 703, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_53);
  __pyx_t_82 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_53); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  __Pyx_DECREF(__pyx_t_53); __pyx_t_53 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_6cshogi_7_cshogi_Parser->tp_dict, __pyx_n_s_parse_str, __pyx_t_82) < 0) __PYX_ERR(0, 703, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;
  PyType_Modified(__pyx_ptype_6cshogi_7_cshogi_Parser);

  /* "cshogi/_cshogi.pyx":1
 * from libcpp.string cimport string             # <<<<<<<<<<<<<<
 * from libcpp.vector cimport vector
 * from libcpp cimport bool
 */
  __pyx_t_82 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_82)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_82);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_82) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_82); __pyx_t_82 = 0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_unsigned_int")
 * cdef object __pyx_convert_vector_to_py_unsigned_int(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_XDECREF(__pyx_t_18);
  __Pyx_XDECREF(__pyx_t_19);
  __Pyx_XDECREF(__pyx_t_20);
  __Pyx_XDECREF(__pyx_t_21);
  __Pyx_XDECREF(__pyx_t_22);
  __Pyx_XDECREF(__pyx_t_23);
  __Pyx_XDECREF(__pyx_t_24);
  __Pyx_XDECREF(__pyx_t_25);
  __Pyx_XDECREF(__pyx_t_26);
  __Pyx_XDECREF(__pyx_t_27);
  __Pyx_XDECREF(__pyx_t_28);
  __Pyx_XDECREF(__pyx_t_29);
  __Pyx_XDECREF(__pyx_t_30);
  __Pyx_XDECREF(__pyx_t_31);
  __Pyx_XDECREF(__pyx_t_32);
  __Pyx_XDECREF(__pyx_t_33);
  __Pyx_XDECREF(__pyx_t_34);
  __Pyx_XDECREF(__pyx_t_35);
  __Pyx_XDECREF(__pyx_t_36);
  __Pyx_XDECREF(__pyx_t_37);
  __Pyx_XDECREF(__pyx_t_38);
  __Pyx_XDECREF(__pyx_t_39);
  __Pyx_XDECREF(__pyx_t_40);
  __Pyx_XDECREF(__pyx_t_41);
  __Pyx_XDECREF(__pyx_t_42);
  __Pyx_XDECREF(__pyx_t_43);
  __Pyx_XDECREF(__pyx_t_44);
  __Pyx_XDECREF(__pyx_t_45);
  __Pyx_XDECREF(__pyx_t_46);
  __Pyx_XDECREF(__pyx_t_47);
  __Pyx_XDECREF(__pyx_t_48);
  __Pyx_XDECREF(__pyx_t_49);
  __Pyx_XDECREF(__pyx_t_50);
  __Pyx_XDECREF(__pyx_t_51);
  __Pyx_XDECREF(__pyx_t_52);
  __Pyx_XDECREF(__pyx_t_53);
  __Pyx_XDECREF(__pyx_t_54);
  __Pyx_XDECREF(__pyx_t_55);
  __Pyx_XDECREF(__pyx_t_56);
  __Pyx_XDECREF(__pyx_t_57);
  __Pyx_XDECREF(__pyx_t_58);
  __Pyx_XDECREF(__pyx_t_59);
  __Pyx_XDECREF(__pyx_t_60);
  __Pyx_XDECREF(__pyx_t_61);
  __Pyx_XDECREF(__pyx_t_62);
  __Pyx_XDECREF(__pyx_t_63);
  __Pyx_XDECREF(__pyx_t_64);
  __Pyx_XDECREF(__pyx_t_65);
  __Pyx_XDECREF(__pyx_t_66);
  __Pyx_XDECREF(__pyx_t_67);
  __Pyx_XDECREF(__pyx_t_68);
  __Pyx_XDECREF(__pyx_t_69);
  __Pyx_XDECREF(__pyx_t_70);
  __Pyx_XDECREF(__pyx_t_71);
  __Pyx_XDECREF(__pyx_t_72);
  __Pyx_XDECREF(__pyx_t_73);
  __Pyx_XDECREF(__pyx_t_74);
  __Pyx_XDECREF(__pyx_t_75);
  __Pyx_XDECREF(__pyx_t_76);
  __Pyx_XDECREF(__pyx_t_77);
  __Pyx_XDECREF(__pyx_t_78);
  __Pyx_XDECREF(__pyx_t_79);
  __Pyx_XDECREF(__pyx_t_80);
  __Pyx_XDECREF(__pyx_t_81);
  __Pyx_XDECREF(__pyx_t_82);
  __Pyx_XDECREF(__pyx_t_83);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init cshogi._cshogi", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_CLEAR(__pyx_m);
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init cshogi._cshogi");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (__Pyx_PyUnicode_GET_LENGTH(**name) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (__Pyx_PyUnicode_GET_LENGTH(**argname) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* ArgTypeTest */
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    else if (exact) {
        #if PY_MAJOR_VERSION == 2
        if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(__Pyx_TypeCheck(obj, type))) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* UnpackUnboundCMethod */
static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {
    PyObject *method;
    method = __Pyx_PyObject_GetAttrStr(target->type, *target->method_name);
    if (unlikely(!method))
        return -1;
    target->method = method;
#if CYTHON_COMPILING_IN_CPYTHON
    #if PY_MAJOR_VERSION >= 3
    if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))
    #endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject*) method;
        target->func = descr->d_method->ml_meth;
        target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);
    }
#endif
    return 0;
}

/* CallUnboundCMethod1 */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg) {
    if (likely(cfunc->func)) {
        int flag = cfunc->flag;
        if (flag == METH_O) {
            return (*(cfunc->func))(self, arg);
        } else if (PY_VERSION_HEX >= 0x030600B1 && flag == METH_FASTCALL) {
            if (PY_VERSION_HEX >= 0x030700A0) {
                return (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)cfunc->func)(self, &arg, 1);
            } else {
                return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
            }
        } else if (PY_VERSION_HEX >= 0x030700A0 && flag == (METH_FASTCALL | METH_KEYWORDS)) {
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
        }
    }
    return __Pyx__CallUnboundCMethod1(cfunc, self, arg);
}
#endif
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg){
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        args = PyTuple_New(1);
        if (unlikely(!args)) goto bad;
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 0, arg);
        if (cfunc->flag & METH_KEYWORDS)
            result = (*(PyCFunctionWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, NULL);
        else
            result = (*cfunc->func)(self, args);
    } else {
        args = PyTuple_New(2);
        if (unlikely(!args)) goto bad;
        Py_INCREF(self);
        PyTuple_SET_ITEM(args, 0, self);
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 1, arg);
        result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    }
#else
    args = PyTuple_Pack(2, self, arg);
    if (unlikely(!args)) goto bad;
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
#endif
bad:
    Py_XDECREF(args);
    return result;
}

/* decode_c_bytes */
static CYTHON_INLINE PyObject* __Pyx_decode_c_bytes(
         const char* cstring, Py_ssize_t length, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors)) {
    if (unlikely((start < 0) | (stop < 0))) {
        if (start < 0) {
            start += length;
            if (start < 0)
                start = 0;
        }
        if (stop < 0)
            stop += length;
    }
    if (stop > length)
        stop = length;
    if (unlikely(stop <= start))
        return __Pyx_NewRef(__pyx_empty_unicode);
    length = stop - start;
    cstring += start;
    if (decode_func) {
        return decode_func(cstring, length, errors);
    } else {
        return PyUnicode_Decode(cstring, length, encoding, errors);
    }
}

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallNoArg */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, NULL, 0);
    }
#endif
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || __Pyx_CyFunction_Check(func)))
#else
    if (likely(PyCFunction_Check(func)))
#endif
    {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* PyCFunctionFastCall */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {
    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    int flags = PyCFunction_GET_FLAGS(func);
    assert(PyCFunction_Check(func));
    assert(METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)));
    assert(nargs >= 0);
    assert(nargs == 0 || args != NULL);
    /* _PyCFunction_FastCallDict() must not be called with an exception set,
       because it may clear it (directly or indirectly) and so the
       caller loses its exception */
    assert(!PyErr_Occurred());
    if ((PY_VERSION_HEX < 0x030700A0) || unlikely(flags & METH_KEYWORDS)) {
        return (*((__Pyx_PyCFunctionFastWithKeywords)(void*)meth)) (self, args, nargs, NULL);
    } else {
        return (*((__Pyx_PyCFunctionFast)(void*)meth)) (self, args, nargs);
    }
}
#endif

/* PyObjectCallOneArg */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, &arg, 1);
    }
#endif
    if (likely(PyCFunction_Check(func))) {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
#if CYTHON_FAST_PYCCALL
        } else if (__Pyx_PyFastCFunction_Check(func)) {
            return __Pyx_PyCFunction_FastCall(func, &arg, 1);
#endif
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* None */
static CYTHON_INLINE long __Pyx_mod_long(long a, long b) {
    long r = a % b;
    r += ((r != 0) & ((r ^ b) < 0)) * b;
    return r;
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if ((1) && (strchr(__Pyx_MODULE_NAME, '.'))) {
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* PyObjectCall2Args */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args, *result = NULL;
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyFunction_FastCall(function, args, 2);
    }
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyCFunction_FastCall(function, args, 2);
    }
    #endif
    args = PyTuple_New(2);
    if (unlikely(!args)) goto done;
    Py_INCREF(arg1);
    PyTuple_SET_ITEM(args, 0, arg1);
    Py_INCREF(arg2);
    PyTuple_SET_ITEM(args, 1, arg2);
    Py_INCREF(function);
    result = __Pyx_PyObject_Call(function, args, NULL);
    Py_DECREF(args);
    Py_DECREF(function);
done:
    return result;
}

/* PyObjectGetMethod */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
    PyObject *attr;
#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
    PyTypeObject *tp = Py_TYPE(obj);
    PyObject *descr;
    descrgetfunc f = NULL;
    PyObject **dictptr, *dict;
    int meth_found = 0;
    assert (*method == NULL);
    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
        attr = __Pyx_PyObject_GetAttrStr(obj, name);
        goto try_unpack;
    }
    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
        return 0;
    }
    descr = _PyType_Lookup(tp, name);
    if (likely(descr != NULL)) {
        Py_INCREF(descr);
#if PY_MAJOR_VERSION >= 3
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type)))
        #endif
#else
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr)))
        #endif
#endif
        {
            meth_found = 1;
        } else {
            f = Py_TYPE(descr)->tp_descr_get;
            if (f != NULL && PyDescr_IsData(descr)) {
                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
                Py_DECREF(descr);
                goto try_unpack;
            }
        }
    }
    dictptr = _PyObject_GetDictPtr(obj);
    if (dictptr != NULL && (dict = *dictptr) != NULL) {
        Py_INCREF(dict);
        attr = __Pyx_PyDict_GetItemStr(dict, name);
        if (attr != NULL) {
            Py_INCREF(attr);
            Py_DECREF(dict);
            Py_XDECREF(descr);
            goto try_unpack;
        }
        Py_DECREF(dict);
    }
    if (meth_found) {
        *method = descr;
        return 1;
    }
    if (f != NULL) {
        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
        Py_DECREF(descr);
        goto try_unpack;
    }
    if (descr != NULL) {
        *method = descr;
        return 0;
    }
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(name));
#endif
    return 0;
#else
    attr = __Pyx_PyObject_GetAttrStr(obj, name);
    goto try_unpack;
#endif
try_unpack:
#if CYTHON_UNPACK_METHODS
    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
        PyObject *function = PyMethod_GET_FUNCTION(attr);
        Py_INCREF(function);
        Py_DECREF(attr);
        *method = function;
        return 1;
    }
#endif
    *method = attr;
    return 0;
}

/* PyObjectCallMethod1 */
static PyObject* __Pyx__PyObject_CallMethod1(PyObject* method, PyObject* arg) {
    PyObject *result = __Pyx_PyObject_CallOneArg(method, arg);
    Py_DECREF(method);
    return result;
}
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
    PyObject *method = NULL, *result;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_Call2Args(method, obj, arg);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) return NULL;
    return __Pyx__PyObject_CallMethod1(method, arg);
}

/* append */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x) {
    if (likely(PyList_CheckExact(L))) {
        if (unlikely(__Pyx_PyList_Append(L, x) < 0)) return -1;
    } else {
        PyObject* retval = __Pyx_PyObject_CallMethod1(L, __pyx_n_s_append, x);
        if (unlikely(!retval))
            return -1;
        Py_DECREF(retval);
    }
    return 0;
}

/* RaiseTooManyValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* RaiseNeedMoreValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* IterFinish */
static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_FAST_THREAD_STATE
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

/* UnpackItemEndCheck */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

/* PyFloatBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_AddCObj(PyObject *op1, PyObject *op2, double floatval, int inplace, int zerodivision_check) {
    const double a = floatval;
    double b, result;
    (void)inplace;
    (void)zerodivision_check;
    if (likely(PyFloat_CheckExact(op2))) {
        b = PyFloat_AS_DOUBLE(op2);
        
    } else
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op2))) {
        b = (double) PyInt_AS_LONG(op2);
        
    } else
    #endif
    if (likely(PyLong_CheckExact(op2))) {
        #if CYTHON_USE_PYLONG_INTERNALS
        const digit* digits = ((PyLongObject*)op2)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op2);
        switch (size) {
            case  0: b = 0.0; break;
            case -1: b = -(double) digits[0]; break;
            case  1: b = (double) digits[0]; break;
            case -2:
            case 2:
                if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (1 * PyLong_SHIFT < 53))) {
                    b = (double) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53) || (b < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -2)
                            b = -b;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -3:
            case 3:
                if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53))) {
                    b = (double) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53) || (b < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -3)
                            b = -b;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -4:
            case 4:
                if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53))) {
                    b = (double) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (4 * PyLong_SHIFT < 53) || (b < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -4)
                            b = -b;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            default:
        #else
        {
        #endif
            b = PyLong_AsDouble(op2);
            if (unlikely(b == -1.0 && PyErr_Occurred())) return NULL;
            
        }
    } else {
        return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
    }
        
        PyFPE_START_PROTECT("add", return NULL)
        result = a + b;
        PyFPE_END_PROTECT(result)
        return PyFloat_FromDouble(result);
}
#endif

/* PyIntBinop */
  #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractCObj(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace;
    (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op2))) {
        const long a = intval;
        long x;
        long b = PyInt_AS_LONG(op2);
            x = (long)((unsigned long)a - b);
            if (likely((x^a) >= 0 || (x^~b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op2))) {
        const long a = intval;
        long b, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG lla = intval;
        PY_LONG_LONG llb, llx;
#endif
        const digit* digits = ((PyLongObject*)op2)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op2);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            b = likely(size) ? digits[0] : 0;
            if (size == -1) b = -b;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        b = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        llb = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        b = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        llb = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        b = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        llb = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        b = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        llb = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        b = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        llb = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        b = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        llb = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
            }
        }
                x = a - b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla - llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op2)) {
        const long a = intval;
        double b = PyFloat_AS_DOUBLE(op2);
            double result;
            PyFPE_START_PROTECT("subtract", return NULL)
            result = ((double)a) - (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceSubtract : PyNumber_Subtract)(op1, op2);
}
#endif

/* GetItemInt */
  static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* ObjectGetItem */
  #if CYTHON_USE_TYPE_SLOTS
static PyObject *__Pyx_PyObject_GetIndex(PyObject *obj, PyObject* index) {
    PyObject *runerr;
    Py_ssize_t key_value;
    PySequenceMethods *m = Py_TYPE(obj)->tp_as_sequence;
    if (unlikely(!(m && m->sq_item))) {
        PyErr_Format(PyExc_TypeError, "'%.200s' object is not subscriptable", Py_TYPE(obj)->tp_name);
        return NULL;
    }
    key_value = __Pyx_PyIndex_AsSsize_t(index);
    if (likely(key_value != -1 || !(runerr = PyErr_Occurred()))) {
        return __Pyx_GetItemInt_Fast(obj, key_value, 0, 1, 1);
    }
    if (PyErr_GivenExceptionMatches(runerr, PyExc_OverflowError)) {
        PyErr_Clear();
        PyErr_Format(PyExc_IndexError, "cannot fit '%.200s' into an index-sized integer", Py_TYPE(index)->tp_name);
    }
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key) {
    PyMappingMethods *m = Py_TYPE(obj)->tp_as_mapping;
    if (likely(m && m->mp_subscript)) {
        return m->mp_subscript(obj, key);
    }
    return __Pyx_PyObject_GetIndex(obj, key);
}
#endif

/* PyIntBinop */
  #if !CYTHON_COMPILING_IN_PYPY
#if PY_MAJOR_VERSION < 3 || CYTHON_USE_PYLONG_INTERNALS
#define __Pyx_PyInt_RemainderObjC_ZeroDivisionError(operand)\
    if (unlikely(zerodivision_check && ((operand) == 0))) {\
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");\
        return NULL;\
    }
#endif
static PyObject* __Pyx_PyInt_RemainderObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace;
    (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            __Pyx_PyInt_RemainderObjC_ZeroDivisionError(b)
            x = a % b;
            x += ((x != 0) & ((x ^ b) < 0)) * b;
            return PyInt_FromLong(x);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_remainder(op1, op2);
            }
        }
                __Pyx_PyInt_RemainderObjC_ZeroDivisionError(b)
                x = a % b;
                x += ((x != 0) & ((x ^ b) < 0)) * b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla % llb;
                llx += ((llx != 0) & ((llx ^ llb) < 0)) * llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    return (inplace ? PyNumber_InPlaceRemainder : PyNumber_Remainder)(op1, op2);
}
#endif

/* PyIntBinop */
  #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace;
    (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = (long)((unsigned long)a + b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* PyObjectSetAttrStr */
  #if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#endif

/* PyErrFetchRestore */
  #if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* RaiseException */
  #if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* GetTopmostException */
  #if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_type == NULL || exc_info->exc_type == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
  #if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    #endif
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* GetException */
  #if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* KeywordStringCheck */
  static int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

/* SliceObject */
  static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(PyObject* obj,
        Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** _py_start, PyObject** _py_stop, PyObject** _py_slice,
        int has_cstart, int has_cstop, CYTHON_UNUSED int wraparound) {
#if CYTHON_USE_TYPE_SLOTS
    PyMappingMethods* mp;
#if PY_MAJOR_VERSION < 3
    PySequenceMethods* ms = Py_TYPE(obj)->tp_as_sequence;
    if (likely(ms && ms->sq_slice)) {
        if (!has_cstart) {
            if (_py_start && (*_py_start != Py_None)) {
                cstart = __Pyx_PyIndex_AsSsize_t(*_py_start);
                if ((cstart == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstart = 0;
        }
        if (!has_cstop) {
            if (_py_stop && (*_py_stop != Py_None)) {
                cstop = __Pyx_PyIndex_AsSsize_t(*_py_stop);
                if ((cstop == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstop = PY_SSIZE_T_MAX;
        }
        if (wraparound && unlikely((cstart < 0) | (cstop < 0)) && likely(ms->sq_length)) {
            Py_ssize_t l = ms->sq_length(obj);
            if (likely(l >= 0)) {
                if (cstop < 0) {
                    cstop += l;
                    if (cstop < 0) cstop = 0;
                }
                if (cstart < 0) {
                    cstart += l;
                    if (cstart < 0) cstart = 0;
                }
            } else {
                if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                    goto bad;
                PyErr_Clear();
            }
        }
        return ms->sq_slice(obj, cstart, cstop);
    }
#endif
    mp = Py_TYPE(obj)->tp_as_mapping;
    if (likely(mp && mp->mp_subscript))
#endif
    {
        PyObject* result;
        PyObject *py_slice, *py_start, *py_stop;
        if (_py_slice) {
            py_slice = *_py_slice;
        } else {
            PyObject* owned_start = NULL;
            PyObject* owned_stop = NULL;
            if (_py_start) {
                py_start = *_py_start;
            } else {
                if (has_cstart) {
                    owned_start = py_start = PyInt_FromSsize_t(cstart);
                    if (unlikely(!py_start)) goto bad;
                } else
                    py_start = Py_None;
            }
            if (_py_stop) {
                py_stop = *_py_stop;
            } else {
                if (has_cstop) {
                    owned_stop = py_stop = PyInt_FromSsize_t(cstop);
                    if (unlikely(!py_stop)) {
                        Py_XDECREF(owned_start);
                        goto bad;
                    }
                } else
                    py_stop = Py_None;
            }
            py_slice = PySlice_New(py_start, py_stop, Py_None);
            Py_XDECREF(owned_start);
            Py_XDECREF(owned_stop);
            if (unlikely(!py_slice)) goto bad;
        }
#if CYTHON_USE_TYPE_SLOTS
        result = mp->mp_subscript(obj, py_slice);
#else
        result = PyObject_GetItem(obj, py_slice);
#endif
        if (!_py_slice) {
            Py_DECREF(py_slice);
        }
        return result;
    }
    PyErr_Format(PyExc_TypeError,
        "'%.200s' object is unsliceable", Py_TYPE(obj)->tp_name);
bad:
    return NULL;
}

/* PyErrExceptionMatches */
  #if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    if (unlikely(PyTuple_Check(err)))
        return __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    return __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* PyObject_GenericGetAttrNoDict */
  #if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject *__Pyx_RaiseGenericGetAttributeError(PyTypeObject *tp, PyObject *attr_name) {
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, attr_name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(attr_name));
#endif
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name) {
    PyObject *descr;
    PyTypeObject *tp = Py_TYPE(obj);
    if (unlikely(!PyString_Check(attr_name))) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    assert(!tp->tp_dictoffset);
    descr = _PyType_Lookup(tp, attr_name);
    if (unlikely(!descr)) {
        return __Pyx_RaiseGenericGetAttributeError(tp, attr_name);
    }
    Py_INCREF(descr);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_HAVE_CLASS)))
    #endif
    {
        descrgetfunc f = Py_TYPE(descr)->tp_descr_get;
        if (unlikely(f)) {
            PyObject *res = f(descr, obj, (PyObject *)tp);
            Py_DECREF(descr);
            return res;
        }
    }
    return descr;
}
#endif

/* PyObject_GenericGetAttr */
  #if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name) {
    if (unlikely(Py_TYPE(obj)->tp_dictoffset)) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    return __Pyx_PyObject_GenericGetAttrNoDict(obj, attr_name);
}
#endif

/* PyObjectGetAttrStrNoError */
  static void __Pyx_PyObject_GetAttrStr_ClearAttributeError(void) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (likely(__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        __Pyx_PyErr_Clear();
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_TYPE_SLOTS && PY_VERSION_HEX >= 0x030700B1
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro == PyObject_GenericGetAttr)) {
        return _PyObject_GenericGetAttrWithDict(obj, attr_name, NULL, 1);
    }
#endif
    result = __Pyx_PyObject_GetAttrStr(obj, attr_name);
    if (unlikely(!result)) {
        __Pyx_PyObject_GetAttrStr_ClearAttributeError();
    }
    return result;
}

/* SetupReduce */
  static int __Pyx_setup_reduce_is_named(PyObject* meth, PyObject* name) {
  int ret;
  PyObject *name_attr;
  name_attr = __Pyx_PyObject_GetAttrStr(meth, __pyx_n_s_name);
  if (likely(name_attr)) {
      ret = PyObject_RichCompareBool(name_attr, name, Py_EQ);
  } else {
      ret = -1;
  }
  if (unlikely(ret < 0)) {
      PyErr_Clear();
      ret = 0;
  }
  Py_XDECREF(name_attr);
  return ret;
}
static int __Pyx_setup_reduce(PyObject* type_obj) {
    int ret = 0;
    PyObject *object_reduce = NULL;
    PyObject *object_reduce_ex = NULL;
    PyObject *reduce = NULL;
    PyObject *reduce_ex = NULL;
    PyObject *reduce_cython = NULL;
    PyObject *setstate = NULL;
    PyObject *setstate_cython = NULL;
#if CYTHON_USE_PYTYPE_LOOKUP
    if (_PyType_Lookup((PyTypeObject*)type_obj, __pyx_n_s_getstate)) goto __PYX_GOOD;
#else
    if (PyObject_HasAttr(type_obj, __pyx_n_s_getstate)) goto __PYX_GOOD;
#endif
#if CYTHON_USE_PYTYPE_LOOKUP
    object_reduce_ex = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#else
    object_reduce_ex = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#endif
    reduce_ex = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_ex); if (unlikely(!reduce_ex)) goto __PYX_BAD;
    if (reduce_ex == object_reduce_ex) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_reduce = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto __PYX_BAD;
#else
        object_reduce = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto __PYX_BAD;
#endif
        reduce = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce); if (unlikely(!reduce)) goto __PYX_BAD;
        if (reduce == object_reduce || __Pyx_setup_reduce_is_named(reduce, __pyx_n_s_reduce_cython)) {
            reduce_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_reduce_cython);
            if (likely(reduce_cython)) {
                ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce, reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
            } else if (reduce == object_reduce || PyErr_Occurred()) {
                goto __PYX_BAD;
            }
            setstate = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_setstate);
            if (!setstate) PyErr_Clear();
            if (!setstate || __Pyx_setup_reduce_is_named(setstate, __pyx_n_s_setstate_cython)) {
                setstate_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_setstate_cython);
                if (likely(setstate_cython)) {
                    ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate, setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                    ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                } else if (!setstate || PyErr_Occurred()) {
                    goto __PYX_BAD;
                }
            }
            PyType_Modified((PyTypeObject*)type_obj);
        }
    }
    goto __PYX_GOOD;
__PYX_BAD:
    if (!PyErr_Occurred())
        PyErr_Format(PyExc_RuntimeError, "Unable to initialize pickling for %s", ((PyTypeObject*)type_obj)->tp_name);
    ret = -1;
__PYX_GOOD:
#if !CYTHON_USE_PYTYPE_LOOKUP
    Py_XDECREF(object_reduce);
    Py_XDECREF(object_reduce_ex);
#endif
    Py_XDECREF(reduce);
    Py_XDECREF(reduce_ex);
    Py_XDECREF(reduce_cython);
    Py_XDECREF(setstate);
    Py_XDECREF(setstate_cython);
    return ret;
}

/* TypeImport */
  #ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(PyObject *module, const char *module_name, const char *class_name,
    size_t size, enum __Pyx_ImportType_CheckSize check_size)
{
    PyObject *result = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    result = PyObject_GetAttrString(module, class_name);
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if ((size_t)basicsize < size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        goto bad;
    }
    if (check_size == __Pyx_ImportType_CheckSize_Error && (size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        goto bad;
    }
    else if (check_size == __Pyx_ImportType_CheckSize_Warn && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(result);
    return NULL;
}
#endif

/* CalculateMetaclass */
  static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases) {
    Py_ssize_t i, nbases = PyTuple_GET_SIZE(bases);
    for (i=0; i < nbases; i++) {
        PyTypeObject *tmptype;
        PyObject *tmp = PyTuple_GET_ITEM(bases, i);
        tmptype = Py_TYPE(tmp);
#if PY_MAJOR_VERSION < 3
        if (tmptype == &PyClass_Type)
            continue;
#endif
        if (!metaclass) {
            metaclass = tmptype;
            continue;
        }
        if (PyType_IsSubtype(metaclass, tmptype))
            continue;
        if (PyType_IsSubtype(tmptype, metaclass)) {
            metaclass = tmptype;
            continue;
        }
        PyErr_SetString(PyExc_TypeError,
                        "metaclass conflict: "
                        "the metaclass of a derived class "
                        "must be a (non-strict) subclass "
                        "of the metaclasses of all its bases");
        return NULL;
    }
    if (!metaclass) {
#if PY_MAJOR_VERSION < 3
        metaclass = &PyClass_Type;
#else
        metaclass = &PyType_Type;
#endif
    }
    Py_INCREF((PyObject*) metaclass);
    return (PyObject*) metaclass;
}

/* FetchCommonType */
  static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* fake_module;
    PyTypeObject* cached_type = NULL;
    fake_module = PyImport_AddModule((char*) "_cython_" CYTHON_ABI);
    if (!fake_module) return NULL;
    Py_INCREF(fake_module);
    cached_type = (PyTypeObject*) PyObject_GetAttrString(fake_module, type->tp_name);
    if (cached_type) {
        if (!PyType_Check((PyObject*)cached_type)) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s is not a type object",
                type->tp_name);
            goto bad;
        }
        if (cached_type->tp_basicsize != type->tp_basicsize) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s has the wrong size, try recompiling",
                type->tp_name);
            goto bad;
        }
    } else {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
        PyErr_Clear();
        if (PyType_Ready(type) < 0) goto bad;
        if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject*) type) < 0)
            goto bad;
        Py_INCREF(type);
        cached_type = type;
    }
done:
    Py_DECREF(fake_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}

/* CythonFunctionShared */
  #include <structmember.h>
static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *closure)
{
    if (unlikely(op->func_doc == NULL)) {
        if (op->func.m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
            op->func_doc = PyUnicode_FromString(op->func.m_ml->ml_doc);
#else
            op->func_doc = PyString_FromString(op->func.m_ml->ml_doc);
#endif
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp = op->func_doc;
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    op->func_doc = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    if (unlikely(op->func_name == NULL)) {
#if PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(op->func.m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(op->func.m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = op->func_name;
    Py_INCREF(value);
    op->func_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    Py_INCREF(op->func_qualname);
    return op->func_qualname;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = op->func_qualname;
    Py_INCREF(value);
    op->func_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_self(__pyx_CyFunctionObject *m, CYTHON_UNUSED void *closure)
{
    PyObject *self;
    self = m->func_closure;
    if (self == NULL)
        self = Py_None;
    Py_INCREF(self);
    return self;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    tmp = op->func_dict;
    Py_INCREF(value);
    op->func_dict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(CYTHON_UNUSED __pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    int result = 0;
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    #else
    op->defaults_tuple = PySequence_ITEM(res, 0);
    if (unlikely(!op->defaults_tuple)) result = -1;
    else {
        op->defaults_kwdict = PySequence_ITEM(res, 1);
        if (unlikely(!op->defaults_kwdict)) result = -1;
    }
    #endif
    Py_DECREF(res);
    return result;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyTuple_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_tuple;
    op->defaults_tuple = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
    PyObject* result = op->defaults_tuple;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_kwdict;
    op->defaults_kwdict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
    PyObject* result = op->defaults_kwdict;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
    PyObject* tmp;
    if (!value || value == Py_None) {
        value = NULL;
    } else if (!PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    tmp = op->func_annotations;
    op->func_annotations = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
    PyObject* result = op->func_annotations;
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {(char *) "__self__", (getter)__Pyx_CyFunction_get_self, 0, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
    {(char *) "__module__", T_OBJECT, offsetof(PyCFunctionObject, m_module), PY_WRITE_RESTRICTED, 0},
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, CYTHON_UNUSED PyObject *args)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(m->func.m_ml->ml_name);
#else
    return PyString_FromString(m->func.m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if PY_VERSION_HEX < 0x030500A0
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func.m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject *op, PyMethodDef *ml, int flags, PyObject* qualname,
                                       PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    if (unlikely(op == NULL))
        return NULL;
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
    op->func.m_ml = ml;
    op->func.m_self = (PyObject *) op;
    Py_XINCREF(closure);
    op->func_closure = closure;
    Py_XINCREF(module);
    op->func.m_module = module;
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
    op->func_classobj = NULL;
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults_size = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
    Py_CLEAR(m->func.m_module);
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
    Py_CLEAR(m->func_classobj);
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyObject_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx__CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    PyObject_GC_Del(m);
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    __Pyx__CyFunction_dealloc(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
    Py_VISIT(m->func.m_module);
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    Py_VISIT(m->func_code);
    Py_VISIT(m->func_classobj);
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject *__Pyx_CyFunction_descr_get(PyObject *func, PyObject *obj, PyObject *type)
{
#if PY_MAJOR_VERSION < 3
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    if (m->flags & __Pyx_CYFUNCTION_STATICMETHOD) {
        Py_INCREF(func);
        return func;
    }
    if (m->flags & __Pyx_CYFUNCTION_CLASSMETHOD) {
        if (type == NULL)
            type = (PyObject *)(Py_TYPE(obj));
        return __Pyx_PyMethod_New(func, type, (PyObject *)(Py_TYPE(type)));
    }
    if (obj == Py_None)
        obj = NULL;
#endif
    return __Pyx_PyMethod_New(func, obj, type);
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(op->func_qualname), (void *)op);
#endif
}
static PyObject * __Pyx_CyFunction_CallMethod(PyObject *func, PyObject *self, PyObject *arg, PyObject *kw) {
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = f->m_ml->ml_meth;
    Py_ssize_t size;
    switch (f->m_ml->ml_flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {
    case METH_VARARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0))
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)(void*)meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 0))
                return (*meth)(self, NULL);
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 1)) {
                PyObject *result, *arg0;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                arg0 = PyTuple_GET_ITEM(arg, 0);
                #else
                arg0 = PySequence_ITEM(arg, 0); if (unlikely(!arg0)) return NULL;
                #endif
                result = (*meth)(self, arg0);
                #if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
                Py_DECREF(arg0);
                #endif
                return result;
            }
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags in "
                        "__Pyx_CyFunction_Call. METH_OLDARGS is no "
                        "longer supported!");
        return NULL;
    }
    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
                 f->m_ml->ml_name);
    return NULL;
}
static CYTHON_INLINE PyObject *__Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    return __Pyx_CyFunction_CallMethod(func, ((PyCFunctionObject*)func)->m_self, arg, kw);
}
static PyObject *__Pyx_CyFunction_CallAsMethod(PyObject *func, PyObject *args, PyObject *kw) {
    PyObject *result;
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *) func;
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        Py_ssize_t argc;
        PyObject *new_args;
        PyObject *self;
        argc = PyTuple_GET_SIZE(args);
        new_args = PyTuple_GetSlice(args, 1, argc);
        if (unlikely(!new_args))
            return NULL;
        self = PyTuple_GetItem(args, 0);
        if (unlikely(!self)) {
            Py_DECREF(new_args);
            return NULL;
        }
        result = __Pyx_CyFunction_CallMethod(func, self, new_args, kw);
        Py_DECREF(new_args);
    } else {
        result = __Pyx_CyFunction_Call(func, args, kw);
    }
    return result;
}
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
    (destructor) __Pyx_CyFunction_dealloc,
    0,
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    (reprfunc) __Pyx_CyFunction_repr,
    0,
    0,
    0,
    0,
    __Pyx_CyFunction_CallAsMethod,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC,
    0,
    (traverseproc) __Pyx_CyFunction_traverse,
    (inquiry) __Pyx_CyFunction_clear,
    0,
#if PY_VERSION_HEX < 0x030500A0
    offsetof(__pyx_CyFunctionObject, func_weakreflist),
#else
    offsetof(PyCFunctionObject, m_weakreflist),
#endif
    0,
    0,
    __pyx_CyFunction_methods,
    __pyx_CyFunction_members,
    __pyx_CyFunction_getsets,
    0,
    0,
    __Pyx_CyFunction_descr_get,
    0,
    offsetof(__pyx_CyFunctionObject, func_dict),
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
    0,
#endif
};
static int __pyx_CyFunction_init(void) {
    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);
    if (unlikely(__pyx_CyFunctionType == NULL)) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyObject_Malloc(size);
    if (unlikely(!m->defaults))
        return PyErr_NoMemory();
    memset(m->defaults, 0, size);
    m->defaults_pyobjects = pyobjects;
    m->defaults_size = size;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

/* CythonFunction */
  static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    PyObject *op = __Pyx_CyFunction_Init(
        PyObject_GC_New(__pyx_CyFunctionObject, __pyx_CyFunctionType),
        ml, flags, qualname, closure, module, globals, code
    );
    if (likely(op)) {
        PyObject_GC_Track(op);
    }
    return op;
}

/* Py3ClassCreate */
  static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name,
                                           PyObject *qualname, PyObject *mkw, PyObject *modname, PyObject *doc) {
    PyObject *ns;
    if (metaclass) {
        PyObject *prep = __Pyx_PyObject_GetAttrStr(metaclass, __pyx_n_s_prepare);
        if (prep) {
            PyObject *pargs = PyTuple_Pack(2, name, bases);
            if (unlikely(!pargs)) {
                Py_DECREF(prep);
                return NULL;
            }
            ns = PyObject_Call(prep, pargs, mkw);
            Py_DECREF(prep);
            Py_DECREF(pargs);
        } else {
            if (unlikely(!PyErr_ExceptionMatches(PyExc_AttributeError)))
                return NULL;
            PyErr_Clear();
            ns = PyDict_New();
        }
    } else {
        ns = PyDict_New();
    }
    if (unlikely(!ns))
        return NULL;
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_module, modname) < 0)) goto bad;
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_qualname, qualname) < 0)) goto bad;
    if (unlikely(doc && PyObject_SetItem(ns, __pyx_n_s_doc, doc) < 0)) goto bad;
    return ns;
bad:
    Py_DECREF(ns);
    return NULL;
}
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases,
                                      PyObject *dict, PyObject *mkw,
                                      int calculate_metaclass, int allow_py2_metaclass) {
    PyObject *result, *margs;
    PyObject *owned_metaclass = NULL;
    if (allow_py2_metaclass) {
        owned_metaclass = PyObject_GetItem(dict, __pyx_n_s_metaclass);
        if (owned_metaclass) {
            metaclass = owned_metaclass;
        } else if (likely(PyErr_ExceptionMatches(PyExc_KeyError))) {
            PyErr_Clear();
        } else {
            return NULL;
        }
    }
    if (calculate_metaclass && (!metaclass || PyType_Check(metaclass))) {
        metaclass = __Pyx_CalculateMetaclass((PyTypeObject*) metaclass, bases);
        Py_XDECREF(owned_metaclass);
        if (unlikely(!metaclass))
            return NULL;
        owned_metaclass = metaclass;
    }
    margs = PyTuple_Pack(3, name, bases, dict);
    if (unlikely(!margs)) {
        result = NULL;
    } else {
        result = PyObject_Call(metaclass, margs, mkw);
        Py_DECREF(margs);
    }
    Py_XDECREF(owned_metaclass);
    return result;
}

/* GetNameInClass */
  static PyObject *__Pyx_GetGlobalNameAfterAttributeLookup(PyObject *name) {
    PyObject *result;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (unlikely(!__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        return NULL;
    __Pyx_PyErr_Clear();
    __Pyx_GetModuleGlobalNameUncached(result, name);
    return result;
}
static PyObject *__Pyx__GetNameInClass(PyObject *nmspace, PyObject *name) {
    PyObject *result;
    result = __Pyx_PyObject_GetAttrStr(nmspace, name);
    if (!result) {
        result = __Pyx_GetGlobalNameAfterAttributeLookup(name);
    }
    return result;
}

/* CLineInTraceback */
  #ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(CYTHON_NCP_UNUSED PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
  static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
  #include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* CIntFromPyVerify */
  #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* Declarations */
  #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
  #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabsf(b.real) >= fabsf(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                float r = b.imag / b.real;
                float s = (float)(1.0) / (b.real + b.imag * r);
                return __pyx_t_float_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            float r = b.real / b.imag;
            float s = (float)(1.0) / (b.imag + b.real * r);
            return __pyx_t_float_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            float denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_float_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        return __Pyx_c_prod_float(a, a);
                    case 3:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, a);
                    case 4:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = powf(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2f(0.0, -1.0);
                }
            } else {
                r = __Pyx_c_abs_float(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

/* Declarations */
  #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
  #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabs(b.real) >= fabs(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                double r = b.imag / b.real;
                double s = (double)(1.0) / (b.real + b.imag * r);
                return __pyx_t_double_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            double r = b.real / b.imag;
            double s = (double)(1.0) / (b.imag + b.real * r);
            return __pyx_t_double_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            double denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_double_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        return __Pyx_c_prod_double(a, a);
                    case 3:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, a);
                    case 4:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = pow(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2(0.0, -1.0);
                }
            } else {
                r = __Pyx_c_abs_double(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

/* CIntFromPy */
  static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
  static CYTHON_INLINE unsigned short __Pyx_PyInt_As_unsigned_short(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const unsigned short neg_one = (unsigned short) -1, const_zero = (unsigned short) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(unsigned short) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(unsigned short, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (unsigned short) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned short) 0;
                case  1: __PYX_VERIFY_RETURN_INT(unsigned short, digit, digits[0])
                case 2:
                    if (8 * sizeof(unsigned short) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned short, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned short) >= 2 * PyLong_SHIFT) {
                            return (unsigned short) (((((unsigned short)digits[1]) << PyLong_SHIFT) | (unsigned short)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned short) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned short, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned short) >= 3 * PyLong_SHIFT) {
                            return (unsigned short) (((((((unsigned short)digits[2]) << PyLong_SHIFT) | (unsigned short)digits[1]) << PyLong_SHIFT) | (unsigned short)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned short) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned short, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned short) >= 4 * PyLong_SHIFT) {
                            return (unsigned short) (((((((((unsigned short)digits[3]) << PyLong_SHIFT) | (unsigned short)digits[2]) << PyLong_SHIFT) | (unsigned short)digits[1]) << PyLong_SHIFT) | (unsigned short)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (unsigned short) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(unsigned short) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned short, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(unsigned short) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned short, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned short) 0;
                case -1: __PYX_VERIFY_RETURN_INT(unsigned short, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(unsigned short,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(unsigned short) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned short, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned short) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned short) (((unsigned short)-1)*(((((unsigned short)digits[1]) << PyLong_SHIFT) | (unsigned short)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(unsigned short) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned short, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned short) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned short) ((((((unsigned short)digits[1]) << PyLong_SHIFT) | (unsigned short)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(unsigned short) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned short, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned short) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned short) (((unsigned short)-1)*(((((((unsigned short)digits[2]) << PyLong_SHIFT) | (unsigned short)digits[1]) << PyLong_SHIFT) | (unsigned short)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned short) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned short, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned short) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned short) ((((((((unsigned short)digits[2]) << PyLong_SHIFT) | (unsigned short)digits[1]) << PyLong_SHIFT) | (unsigned short)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(unsigned short) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned short, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned short) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned short) (((unsigned short)-1)*(((((((((unsigned short)digits[3]) << PyLong_SHIFT) | (unsigned short)digits[2]) << PyLong_SHIFT) | (unsigned short)digits[1]) << PyLong_SHIFT) | (unsigned short)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned short) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned short, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned short) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned short) ((((((((((unsigned short)digits[3]) << PyLong_SHIFT) | (unsigned short)digits[2]) << PyLong_SHIFT) | (unsigned short)digits[1]) << PyLong_SHIFT) | (unsigned short)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(unsigned short) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned short, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(unsigned short) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned short, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            unsigned short val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (unsigned short) -1;
        }
    } else {
        unsigned short val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (unsigned short) -1;
        val = __Pyx_PyInt_As_unsigned_short(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to unsigned short");
    return (unsigned short) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to unsigned short");
    return (unsigned short) -1;
}

/* CIntToPy */
  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_PY_LONG_LONG(unsigned PY_LONG_LONG value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const unsigned PY_LONG_LONG neg_one = (unsigned PY_LONG_LONG) -1, const_zero = (unsigned PY_LONG_LONG) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(unsigned PY_LONG_LONG) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned PY_LONG_LONG) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(unsigned PY_LONG_LONG) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(unsigned PY_LONG_LONG) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(unsigned PY_LONG_LONG) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(unsigned PY_LONG_LONG),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_short(unsigned short value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const unsigned short neg_one = (unsigned short) -1, const_zero = (unsigned short) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(unsigned short) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned short) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(unsigned short) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(unsigned short) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(unsigned short) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(unsigned short),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
  static CYTHON_INLINE unsigned int __Pyx_PyInt_As_unsigned_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const unsigned int neg_one = (unsigned int) -1, const_zero = (unsigned int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(unsigned int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(unsigned int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (unsigned int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(unsigned int, digit, digits[0])
                case 2:
                    if (8 * sizeof(unsigned int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 2 * PyLong_SHIFT) {
                            return (unsigned int) (((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 3 * PyLong_SHIFT) {
                            return (unsigned int) (((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 4 * PyLong_SHIFT) {
                            return (unsigned int) (((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (unsigned int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(unsigned int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(unsigned int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(unsigned int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(unsigned int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(unsigned int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(unsigned int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned int) ((((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned int) ((((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned int) ((((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(unsigned int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(unsigned int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            unsigned int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (unsigned int) -1;
        }
    } else {
        unsigned int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (unsigned int) -1;
        val = __Pyx_PyInt_As_unsigned_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to unsigned int");
    return (unsigned int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to unsigned int");
    return (unsigned int) -1;
}

/* CIntToPy */
  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_int(unsigned int value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const unsigned int neg_one = (unsigned int) -1, const_zero = (unsigned int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(unsigned int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(unsigned int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(unsigned int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(unsigned int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(unsigned int),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
  static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const size_t neg_one = (size_t) -1, const_zero = (size_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(size_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 2 * PyLong_SHIFT) {
                            return (size_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 3 * PyLong_SHIFT) {
                            return (size_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 4 * PyLong_SHIFT) {
                            return (size_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (size_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(size_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(size_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(size_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(size_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) ((((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) ((((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) ((((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(size_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            size_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

/* CIntFromPy */
  static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* FastTypeChecks */
  #if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CheckBinaryVersion */
  static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* InitStrings */
  static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
